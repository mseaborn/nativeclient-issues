<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkMHQX47eCl7ImA9Wx9XEUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1291/comments/full/1</ns0:id><ns0:author>
			<ns0:name>ncb...@google.com</ns0:name><ns0:uri>/u/100032148147647801554/</ns0:uri></ns0:author><ns0:content type="html">This bugs me quite a bit, but everyone else seems to have gotten used to it.  I've been taking with Noel about merging extra-sdk into the main build, but the upshot of this is that it might make the null build times even worse.  I'd say this is a prerequisite for looking at the extra-sdk issue.

Adding --debug=time to the command line produces this:
Total build time: 4.003296 seconds
Total SConscript file execution time: 3.897382 seconds
Total SCons execution time: 0.105914 seconds
Total command execution time: 0.000000 seconds

My initial wild guess is that the magic we're doing for multiplatform builds is interacting badly with SCons.  There may be redundant evaluation of .scons files going on, the fact we're cloning environments for every .scons file might be a problem the the environments are big, etc.

Another wild guess is that upgrading SCons to the latest version might help speed?  We need to do this anyways, for other reasons.  (Python 2.6 compat issues, for one.)  We also might get some free performance improvements, but I might be optimistic.</ns0:content><ns0:updated>2011-01-04T18:07:10.000Z</ns0:updated><ns0:published>2011-01-04T18:07:10.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by ncb...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1291#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1291/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>