<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MNR347eCl7ImA9Wx9bFko.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1291/comments/full/4</ns0:id><ns0:author>
			<ns0:name>ncb...@google.com</ns0:name><ns0:uri>/u/100032148147647801554/</ns0:uri></ns0:author><ns0:content type="html">IIRC semi_deep_copy is related to environment cloning.  I actually backported a newer version because of an ugly interaction with Python 2.6.  I don't think a newer version will help semi_deep_copy (because we're almost up to date), but it might help other things.

I think part of the problem is that we are cloning the environment for every .scons file.  On one hand this is good because it provides isolation, on the other hand if it's a bottleneck, we might want to sacrifice isolation for speed.

If you want to run this same experiment without having Clone called before evaluating a scons file, it would be interesting (although it might fail to work w/o isolation.)

</ns0:content><ns0:updated>2011-02-26T00:18:16.000Z</ns0:updated><ns0:published>2011-02-26T00:18:16.000Z</ns0:published><ns2:updates /><ns0:title>Comment 4 by ncb...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1291#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1291/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>