<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkUGSH47eCl7ImA9WhZWEEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1689/comments/full/6</ns0:id><ns0:author>
			<ns0:name>halya...@google.com</ns0:name><ns0:uri>/u/112856509894568708731/</ns0:uri></ns0:author><ns0:content type="html">I investigated the issue and found that GP(0) exception handler in Windows kernel checks instruction that produced this exception. The problem is that due to a bug introduced in Windows XP and forward it doesn't take cs selector into account. As a result it investigates wrong instruction and rises wrong exception. 

In case of newlib it investigates zero instruction: add [eax],al with eax pointing out to non-existing memory location 0x10000000 and so it produces access violation exception. In case of glibc it investiages hlt instruction and produces priviliged instruction exception.

Anyway, GP(0) handler always rises an exception (even if investigated instruction can't produce it) and so this is not a security vulnerability. We just can't predict which exception (access violation or priviliged instruction) will be produced.</ns0:content><ns0:updated>2011-05-11T07:17:09.000Z</ns0:updated><ns0:published>2011-05-11T07:17:09.000Z</ns0:published><ns2:updates>
			<ns2:status>WontFix</ns2:status></ns2:updates><ns0:title>Comment 6 by halya...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1689#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1689/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>