<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0cFRn47eCl7ImA9WhdWGEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2176</ns0:id><ns0:author>
			<ns0:name>mcgra...@google.com</ns0:name><ns0:uri>/u/100177598732114324016/</ns0:uri></ns0:author><ns0:content type="html">We want to constrain the use of segment prefixes in the x86-32 ABI.
There is no good reason to have code doing arbitrary use of segment register prefixes.  Constraining it gives us more options in how we implement the one expected use, being TLS access, in the trusted code.

Having the trusted code limit the size of the segment set up for %gs to just 4 bytes precludes wild pointer accesses via %gs segment register prefixes creating extremely arcane bugs.
</ns0:content><ns0:updated>2011-09-12T20:23:37.000Z</ns0:updated><ns0:published>2011-08-22T23:36:49.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:cc>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>constraint x86-32 ABI use of %gs to just a movl from %gs:0</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-15</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2176/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2176" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2176" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-08-25T21:03:42.000Z</ns2:closedDate><ns2:id>2176</ns2:id></ns0:entry>