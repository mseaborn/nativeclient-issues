<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck4HRX47eCl7ImA9WhBbEU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3429/comments/full/7</ns0:id><ns0:author>
			<ns0:name>eli...@chromium.org</ns0:name><ns0:uri>/u/112264824292994369940/</ns0:uri></ns0:author><ns0:content type="html">After discussing this with Jan and Mark, I'm going to go with 1.B. Reasons:

1) The i64* signature is currently enforced by the newlib headers. Since LLVM doesn't actually care about the pointee size w.r.t. alignment, it would be more consistent to have i8* in the ABI. Incidentally this is also the current type in setjmp intrinsics.
2) It would be nice not to have to LOCALMOD newlib for this. A separate pass is a milder LOCALMOD and it's easier to test.
3) Inline assembly in Clang may be disabled at some point; this will disallow the __asm__ approach and we'd have to hack clang.

---------------

The approach in detail.

(a) our LLVM branch will be modified to support @llvm.nacl.{set|long}jmp intrinsics, that are declared with i8*. CodeGen will generate library calls to {set|long}jmp. This can be separately committed with tests.

(b) a pass will be added in lib/Transforms/NaCl that translates known library calls to intrinsics. Initially it will support {set|long}jmp. Since the library call has i64* in the signature, the pass will insert a bitcast. This pass can also be tested and committed separately. [name ideas for the pass welcome - ExpandLibraryCall?]

(c) the pass can be enabled for the PNaCl toolchain




</ns0:content><ns0:updated>2013-05-09T20:22:14.000Z</ns0:updated><ns0:published>2013-05-09T20:22:14.000Z</ns0:published><ns2:updates /><ns0:title>Comment 7 by eli...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3429#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3429/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>