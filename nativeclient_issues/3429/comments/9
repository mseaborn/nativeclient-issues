<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkQNR347eCl7ImA9WhBbFUo.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3429/comments/full/9</ns0:id><ns0:author>
			<ns0:name>eli...@chromium.org</ns0:name><ns0:uri>/u/112264824292994369940/</ns0:uri></ns0:author><ns0:content type="html">(a) and (b) from comment #7 have been implemented (along with comment #8), but (c) can't be done yet because of failures in the ARM assembly printer.

Apparently the problem is due to the way (a) is implemented in the LLVM backend. SelectionDAGBuilder replaces function call names when it sees certain intrinsics, but does so only by creating a modified SDNode; the original IR is not modified. So what happens is that there's now a call to function "setjmp", but no such Function/GlobalValue actually exists in the original IR. Some code in ARM needs the GlobalValue for calls, so we get an assertion error.

An alternative approach to implement this would be to have an IR pass that runs in the translator and replaces intrinsic calls back by function calls. [We already have a Nacl-specific IR pass running in llc - the div-by-zero protection pass for ARM targets.]
</ns0:content><ns0:updated>2013-05-14T22:26:36.000Z</ns0:updated><ns0:published>2013-05-14T22:26:36.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by eli...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3429#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3429/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>