<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0EHSH47eCl7ImA9WhJQE04.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2903/comments/full/6</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">I've prototyped the following solution for this problem:

GDB has gdbarch_software_single_step hook, which allows to pick between hardware and software single-stepping depending on current frame, and, in particular, depending on current pc.

I've implemented that hook to single-step through instruction sequences in question in one step using software breakpoints, and to single-step using hardware support in all other cases.

To support such GDB change, I had to allow 'vCont;c:&lt;tid&gt;' in the debug stub to _continue_ one thread while others remain stopped (at the moment we only allow hardware-supported single step of one thread while others remain stopped). This is somewhat risky, as malformed debug stub client can allow continuing through system calls, etc., which might make runtime state inconsistent.

However, overall this works nicely and can be considered an acceptable short-term solution, so we'll be able to lower priority of this bug. Long-term, debug exception handler solution suggested by Mark is better.
</ns0:content><ns0:updated>2012-07-26T19:40:39.000Z</ns0:updated><ns0:published>2012-07-26T19:40:39.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>halya...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 6 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2903#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2903/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>