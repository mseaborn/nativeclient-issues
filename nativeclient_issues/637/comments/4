<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUIHRH47eCl7ImA9Wx5XEUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/637/comments/full/4</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">It turns out that we can side step this whole can of worms:

since we moved to arm7a the constant pools are used a lot less.
All 32bit constant should now be materialized like so:

	movw	r4, :lower16:merged
	movt	r4, :upper16:merged

There are a few violations of this notably:
        (thread related, relocations may not be expressive enough here)
	.long	_impure_ptr(tpoff)   

        (a jump table address, easy to fix)
        .long	.LJTI422_0           

        (8 bytes floating point constants, need to be moved to rodata, I believe we already move bigger constants there, this will cause a slight performance hit)
        .long	1352628731              @ double 3.010300e-01
	.long	1070810131              (a double constant)

The best way to go about this is probably to assert where we 
emit sfi_illegal_if_at_bundle_begining  today and fix all the problems we see.


bumped to priority zero since this will also important for our MC efforts  </ns0:content><ns0:updated>2010-09-10T19:38:55.000Z</ns0:updated><ns0:published>2010-09-10T19:38:55.000Z</ns0:published><ns2:updates>
			<ns2:label>-Pri-2</ns2:label><ns2:label>Pri-0</ns2:label></ns2:updates><ns0:title>Comment 4 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=637#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/637/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>