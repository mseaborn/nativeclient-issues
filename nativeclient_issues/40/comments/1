<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUYDQH47eCl7ImA9WxVVEE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/40/comments/full/1</ns0:id><ns0:author>
			<ns0:name>nativecl...@gmail.com</ns0:name><ns0:uri>/u/100932292489675356954/</ns0:uri></ns0:author><ns0:content type="html">We've looked at this and don't think it's possible to create an interesting security
exploit from the code in question. If you can find an exploit using a commonly used
audio driver, that could make this more interesting.

Note we do not consider a crashed application to be an exploit; we can't prevent
people from writing buggy code. See the contest rules for guidance on what makes bugs
interesting.

Notes: The size_t field in question is the size of the internal audio buffer, which
is just large enough to keep the audio system fed between interrupts (which in NaCl
w/ SDL become callbacks inside service runtime, which in turn wakes up a sleeping
condvar). We only allow the user to select between 128 and 8192 samples, but this is
a hint to the driver.  The driver can override this sample buffer size, but it is
unlikely to be much higher, since that adds latency (and latency greater than ~30ms
would be a pretty bad driver, but that is still only a few KB of buffer -- nowhere
even close to a megabyte!)

It is the application writer's job to take large audio files and spoon feed the audio
system in small bits.
</ns0:content><ns0:updated>2009-03-02T19:46:11.000Z</ns0:updated><ns0:published>2009-03-02T19:46:11.000Z</ns0:published><ns2:updates>
			<ns2:status>Invalid</ns2:status><ns2:ownerUpdate>nfulla...@google.com</ns2:ownerUpdate></ns2:updates><ns0:title>Comment 1 by nativecl...@gmail.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=40#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/40/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>