<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUUBQH47eCl7ImA9WhNWGEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3220/comments/full/3</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">yes, the nacl_text_* tests are functionality and death tests for checking that the halt sled gap code is working, and was not intended to check that the toolchains will DTRT.

we could have sel_ldr additionally check for a halt sled at the end of text when there is no gap, which would be an ABI extension to permit more ELF executables.  the shared-library / JIT code area, if present, would serve as a halt sled anyway, since the sled should exist at the end of the text segment.  so this would not change executable sizes for glibc code, just newlib code that don't use dynamic code generation.

but it does make things more complicated to support two ways of having halt sleds.  if it's really painful to re-add in untrusted code, we can make the trusted code changes to check for a pre-existing sled.</ns0:content><ns0:updated>2012-12-18T19:00:51.000Z</ns0:updated><ns0:published>2012-12-18T19:00:51.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3220#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3220/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>