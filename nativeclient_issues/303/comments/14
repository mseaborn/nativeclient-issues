<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0ACSH47eCl7ImA9WhRQGUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/303/comments/full/14</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">The details in the report are no longer apropos.

This is probably not a problem per se, but there is a potentially lurking gotcha.
What's now the normal mode of operation on Linux is that chrome runs nacl_helper via nacl_helper_bootstrap, which indeed takes care of the address space allocation issue.
However, we still have the old code path wherein the nacl code is also built into the chrome binary.  Moreover, if the startup of the nacl_helper fails for any reason (or at least, for some kinds of reasons), it will fall back to using the old code.  If that were to happen on ARM, then the failure mode would be something very nonobvious (and potentially something dangerous/exploitable, though that seems like an outside possibility).

Starting with Chrome 17 we are collecting UMA data about the success/failure of the helper startup.  The intent is that we go a release cycle or two wherein we verify that no users are actually seeing the helper startup fail and falling back to the old code path.  Then we'll be confident that it's safe to excise the old code path entirely.</ns0:content><ns0:updated>2011-12-15T22:56:09.000Z</ns0:updated><ns0:published>2011-12-15T22:56:09.000Z</ns0:published><ns2:updates /><ns0:title>Comment 14 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=303#c14" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/303/comments/full/14" rel="self" type="application/atom+xml" /></ns0:entry>