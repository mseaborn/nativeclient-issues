<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkMARn47eCl7ImA9Wx9aEkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1495/comments/full/5</ns0:id><ns0:author>
			<ns0:name>myriac...@gmail.com</ns0:name><ns0:uri>/u/112082128194607343681/</ns0:uri></ns0:author><ns0:content type="html">In Linux, I believe that whether the direction flag is cleared upon entering a signal handler depends on the kernel version.  If I'm right, it's a similar situation to Windows.

In Mac OS, it depends on the implementation.  I haven't looked at the Native Client code for Mac OS.  If it uses BSD signals, there might be a problem, but if it uses Mach exception ports, there's no problem since the thread receiving the exception notification is necessarily a different thread.

In Windows, when an exception occurs, the CPU context at the time of the fault is pushed to the stack by the kernel, R/ESP is adjusted, and R/EIP is set to ntdll.dll's KiUserExceptionDispatcher.  Very soon after KiUserExceptionDispatcher starts, it calls into the registered vectored handlers.  EFLAGS is not changed (other than that the V86 flag is cleared in 32-bit Windows for NTVDM support).  There are no string opcodes between the beginning of KiUserExceptionDispatcher and the calling of the vectored handlers, so doing "cld" from the vectored handler seems to be sufficient.

Windows Vista fixes the bug by adding "cld" as the first opcode of KiUserExceptionDispatcher for both x86-32 (native and WOW64) and x86-64.</ns0:content><ns0:updated>2011-03-04T06:00:47.000Z</ns0:updated><ns0:published>2011-03-04T06:00:47.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by myriac...@gmail.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1495#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1495/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>