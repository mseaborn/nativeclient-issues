<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D04CRX47eCl7ImA9WhJbGEk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1577/comments/full/12</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=9835

------------------------------------------------------------------------
r9835 | mseaborn@chromium.org | 2012-09-25T14:42:21.431062Z

Changed paths:
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/debug_stub/debugger_test.c?r1=9835&amp;r2=9834&amp;pathrev=9835
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/debug_stub/debug_stub_test.py?r1=9835&amp;r2=9834&amp;pathrev=9835

Debug stub tests: Add a test for writing memory

The only test we had in debug_stub_tests.py for writing memory (the
'M' command) was test_overwriting_breakpoint_is_disallowed, which I am
removing in a separate change.

This adds a new test that covers reading and writing memory.  Since we
now have GetSymbols(), we can test accessing a global variable.  This
means we can remove the older, more ad-hoc test which tests reading
from the stack.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=1577
TEST=run_debug_stub_test

Review URL: https://codereview.chromium.org/10984015
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-09-28T15:26:04.000Z</ns0:updated><ns0:published>2012-09-28T15:26:04.000Z</ns0:published><ns2:updates /><ns0:title>Comment 12 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1577#c12" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1577/comments/full/12" rel="self" type="application/atom+xml" /></ns0:entry>