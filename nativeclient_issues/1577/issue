<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck8DQX47eCl7ImA9WhVXE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1577</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The debug stub's &amp;quot;read memory&amp;quot; (&amp;quot;m&amp;quot;) and &amp;quot;write memory&amp;quot; (&amp;quot;M&amp;quot;) operations should not escape the sandbox.  This means:

 1) They should take untrusted-address-space addresses.  Currently they accept both trusted and untrusted addresses.

 2) There should be an address bounds check.  Currently there is no upper bounds check.

 3) It should not be possible to use them to write arbitrary code into the sandbox's code area.  Currently SetMemory() is also used internally for setting (and removing) breakpoints, and this ability to overwrite code is also exposed via the public interface.  The breakpoint setter should probably share a common mechanism for modifying code with nacl_text.c.

 4) Arguably they should not bypass page protections.</ns0:content><ns0:updated>2012-04-13T09:54:30.000Z</ns0:updated><ns0:published>2011-03-25T22:06:05.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/109474787648168037085/</ns2:uri><ns2:username>mli...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/113823374410613289742/</ns2:uri><ns2:username>garia...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/113000403807150741221/</ns2:uri><ns2:username>noelal...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/110304265766688778552/</ns2:uri><ns2:username>bradc...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>Debug stub: Reading and writing memory should not escape the sandbox</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Debugging</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1577/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1577" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1577" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>2728</ns2:id></ns2:blocking><ns2:id>1577</ns2:id></ns0:entry>