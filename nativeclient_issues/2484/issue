<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUYFRn47eCl7ImA9WhBQEE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2484</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">&lt;b&gt;- Where are we today?&lt;/b&gt;

We run some pepper browser tests through PNaCl in the NaCl tree. That's good! We get some coverage.

However, new ppapi tests for new ppapi interfaces are added together in the chrome tree (rather than go through the NaCl / Toolchain DEPs dance). E.g., the ppapi tests in in chrome/test/ui/ppapi_uitest.cc that say:

  TEST_PPAPI_NACL_VIA_HTTP(CursorControl)

and run via

   out/Debug/ui_tests --gtest_filter=PPAPINaClTest.* 

The main concern is calling convention issues or other compiler compatibility issues that may creep up with these new APIs. If such incompatibilities crop up, we want to detect that and be able to write new toolchain unittests to cover these cases.

Separate but related: This also gives us some tests to run when we check-in/run trybots for a change to the pnacl_coordinator in the chrome repo.


NOTE: We can continue to test for self-compile bugs of the sandboxed LLC and sandboxed LD through sel_universal in the NaCl Repo, with toolchain tests, etc.. This is not proposing to move where we build the sandboxed LLC/LD, or those toolchain tests at all.

&lt;b&gt;- The proposed enhancement:&lt;/b&gt;

So here are some of the steps (may happen in parallel):

*) Resolve issue http://code.google.com/p/nativeclient/issues/detail?id=2483
  *) I.e., add hooks to download the pnacl toolchain pieces necessary to build bitcode versions (.pexe) of these tests and translate the bitcode in Chrome Repo.
  *) Since the pnacl toolchain tarball is &amp;quot;huge&amp;quot; right now (~150MB for pnacl-newlib, ~150+MB for pnacl-glibc), this should be hidden behind a flag and only run on integration bots / developer work stations.
  *) Set up such an integration bot that will run these tests, and downloads the toolchain using this new build flag.


*) modify build/untrusted.gypi and build/build_nexe.py to be able to cross compile test code to a pnacl bitcode file.


*) Ensure that the pepper UITest framework has a &amp;quot;portable&amp;quot; field in the test.nmf file that refers to these cross compiled bitcode files.


Separate but related issues:

*) Continue to make the pnacl coordinator work -- e.g., ensure that the current test in the NaCl repo &amp;quot;run_pnacl_example_browser_test&amp;quot; and works. This is more about testing that the pipeline for file opening, tempfile creating, compiling, linking, caching, and starting up a nexe work. That shouldn't be affected by these ppapi tests much. However, if we want the input of these ppapi tests to be bitcode, we need this pipeline working.

*) The pipeline depends on some support files. Work out the build steps to piece together the support files for testing (with the latest native libraries like the pnacl IRT shim, the llc.nexe, ld.nexe which may be downloaded as well). An option is to load these support files as an unpacked chrome extension when running tests.

*) Add/reuse hooks in the chrome UITest framework to load this extension (see how the chrome extension people load extensions to run tests).


&lt;b&gt;- Exit criteria:&lt;/b&gt;

*) PNaCl is testing the latest PPAPI interfaces in addition to the older ones.
*) PNaCl is testing these with bitcode as input.



&lt;b&gt;- Anticipated impact:&lt;/b&gt;

Better test coverage: knowledge of when the shim or compiler is buggy wrt to pepper APIs.
</ns0:content><ns0:updated>2013-03-11T17:31:57.000Z</ns0:updated><ns0:published>2011-12-09T21:11:55.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/dschuff@chromium.org/</ns2:uri><ns2:username>dschuff@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/113000403807150741221/</ns2:uri><ns2:username>noelal...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/dschuff@chromium.org/</ns2:uri><ns2:username>dschuff@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/100032148147647801554/</ns2:uri><ns2:username>ncb...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>pnacl ppapi test coverage</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Mstone-25</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2484/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2484" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2484" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:blocking>
			<ns2:id>3230</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2013-03-11T17:31:57.000Z</ns2:closedDate><ns2:id>2484</ns2:id></ns0:entry>