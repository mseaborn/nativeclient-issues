<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0AGRn47eCl7ImA9WhBTEU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3012</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">Most instructions accept redundant REX bits (see bug #2517), but one instruction an exception:

$ cat test.c
int main() {
  asm(&amp;quot;mov %esp,%esp\n&amp;quot;
      &amp;quot;.byte 0x49, 0x03, 0xe7&amp;quot;);
  asm(&amp;quot;mov %esp,%esp\n&amp;quot;
      &amp;quot;.byte 0x4b, 0x03, 0xe7&amp;quot;);
  asm(&amp;quot;.byte 0x48, 0x83, 0xe4, 0x80&amp;quot;);
  asm(&amp;quot;.byte 0x4a, 0x83, 0xe4, 0x80&amp;quot;);
}
$ x86_64-nacl-c++ test10.c -o test
$ ncval --cpuid-all a.out
VALIDATOR: segment[0] p_type 6 p_offset 0 vaddr 0 paddr 0 align 8
VALIDATOR:     filesz 120 memsz 120 flags 4
VALIDATOR: segment[1] p_type 1 p_offset 10000 vaddr 20000 paddr 20000 align 65536
VALIDATOR:     filesz 3c100 memsz 3c100 flags 5
VALIDATOR: parsing segment 1
VALIDATOR: 201f2: Illegal assignment to RSP
VALIDATOR: Checking block alignment and jump targets: 20000 to 5c100
VALIDATOR: segment[2] p_type 1 p_offset 50000 vaddr 10020000 paddr 10020000 align 65536
VALIDATOR:     filesz 1047c memsz 1047c flags 4
VALIDATOR: segment[3] p_type 1 p_offset 70000 vaddr 10040000 paddr 10040000 align 65536
VALIDATOR:     filesz 6c4 memsz 5720 flags 6
*** a.out IS UNSAFE ***
*** a.out IS UNSAFE ***
$ objdump -d test | grep -A 8 '&amp;lt;main&amp;gt;:'
00000000000201e0 &amp;lt;main&amp;gt;:
   201e0:	55                   	push   %rbp
   201e1:	48 89 e5             	mov    %rsp,%rbp
   201e4:	89 e4                	mov    %esp,%esp
   201e6:	49 03 e7             	add    %r15,%rsp
   201e9:	89 e4                	mov    %esp,%esp
   201eb:	4b 03 e7             	rex.WXB add    %r15,%rsp
   201ee:	48 83 e4 80          	and    $0xffffffffffffff80,%rsp
   201f2:	4a 83 e4 80          	rex.WX and    $0xffffffffffffff80,%rsp

I'm not sure if we want to treat it similarly to all others or if we want to keep is special.
</ns0:content><ns0:updated>2013-02-05T23:08:47.000Z</ns0:updated><ns0:published>2012-09-03T12:13:31.000Z</ns0:published><ns2:status>New</ns2:status><ns2:owner>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/105197577636354702799/</ns2:uri><ns2:username>shcherb...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>REX is treated inconsistently in instruction: AND $-&lt;something&gt;, %rsp</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-24</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3012/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3012" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3012" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:id>3012</ns2:id></ns0:entry>