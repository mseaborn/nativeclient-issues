<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A04CSH47eCl7ImA9Wx5UEUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/579/comments/full/5</ns0:id><ns0:author>
			<ns0:name>noelal...@google.com</ns0:name><ns0:uri>/u/113000403807150741221/</ns0:uri></ns0:author><ns0:content type="html">This is not a bug in the signal system.  It is correctly catching a trusted violation.  We keep track of all the memory maps we make, so the syscall should be able to determine if the memory it is about to use is legal or not.  This would then match standard OS behavior of validating parameters before using them and returning an appropriate errno, without taking an exception.</ns0:content><ns0:updated>2010-10-15T19:12:49.000Z</ns0:updated><ns0:published>2010-10-15T19:12:49.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by noelal...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=579#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/579/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>