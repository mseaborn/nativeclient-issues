<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk8MQ347eCl7ImA9WhFTE0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3441</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">We need tests to ensure consistent pwrite behavior before exposing pread/pwrite to untrusted code.  The pread/pwrite implementation is currently for trusted code only, and we do not have a plan for when we will expose it.

On OSX, we simulate Linux's interpretation of POSIX pwrite behavior on O_APPEND descriptors by using write in lieu of pwrite.  this moves the shared file I/O position pointer.  However, pread/pwrite is not supposed to change the position of the shared file pointer, and if the pointer position is being used for a sequence of reads, it is likely that the Linux implementation would not move the file I/O position, but the OSX implementation will.  I believe windows behave as Linux right now.

However, without tests to verify, we don't really know for sure.</ns0:content><ns0:updated>2013-06-05T01:14:42.000Z</ns0:updated><ns0:published>2013-05-20T21:53:23.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>O_APPEND|O_RDWR, seek 0, read, pwrite, read probably behaves inconsistently</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3441/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3441" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3441" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:blocking>
			<ns2:id>3472</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:id>3441</ns2:id></ns0:entry>