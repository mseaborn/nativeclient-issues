<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUUCR347eCl7ImA9WhJTEk8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1918/comments/full/14</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">"Error 5" seems to mean that nacl-gcc is exiting with status 0xc0000005 (STATUS_ACCESS_VIOLATION).  For some reason, Scons truncates the exit status value.  I checked this by replacing nacl-gcc with an executable that does "*(int *) 0 = 0", which also gets "Error 5".  An executable that does __halt() returns status 0xc0000096 (STATUS_PRIVILEGED_INSTRUCTION), which Scons similarly truncates to "Error 150" (0x96 == 150).

I am sceptical that Cygwin's fork() is failing because Cygwin usually prints an error in this case, and if fork() returned an error to gcc, gcc would print an informative error too.

It's odd that this failure only seems to be happening in the Scons build.  I don't think we have ever seen nacl-gcc invocations fail in the Gyp untrusted-code build.  Maybe Scons is doing something odd in process launching that causes this?</ns0:content><ns0:updated>2012-06-20T21:21:06.000Z</ns0:updated><ns0:published>2012-06-20T21:21:06.000Z</ns0:published><ns2:updates /><ns0:title>Comment 14 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1918#c14" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1918/comments/full/14" rel="self" type="application/atom+xml" /></ns0:entry>