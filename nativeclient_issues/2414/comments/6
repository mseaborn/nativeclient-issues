<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DE8AQn47eCl7ImA9WhRSFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2414/comments/full/6</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">Commit: f9cfb7279797950e86a8b9d5190cd777f154e286
 Email: mseaborn@chromium.org@fcba33aa-ac0c-11dd-b9e7-8d5594d729c2

x86-64 Windows: Make stack unwinding test stricter

If I insert "sub rsp, 16" at the start of NaClSwitchSavingStackPtr,
the backtrace at the time of the fault includes a couple of bogus
stack frames, which the existing test case does not catch.  Such stack
frames would come from reading return addresses from uninitialised
memory, which is bad.

This change makes the test stricter to catch such problems.  We walk
the stack and look for too-small frames which are not valid in the
Windows x86-64 ABI but which the Windows runtime lets through.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=2414
TEST=run_windows_crash_in_syscall_test

Review URL: http://codereview.chromium.org/8595001

git-svn-id: svn://svn.chromium.org/native_client/trunk/src/native_client@7243 fcba33aa-ac0c-11dd-b9e7-8d5594d729c2

M	tests/windows_crash_in_syscall/nacl.scons
M	tests/windows_crash_in_syscall/test.stdout
M	tests/windows_crash_in_syscall/test_host.c</ns0:content><ns0:updated>2011-11-18T20:07:23.000Z</ns0:updated><ns0:published>2011-11-18T20:07:23.000Z</ns0:published><ns2:updates /><ns0:title>Comment 6 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2414#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2414/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>