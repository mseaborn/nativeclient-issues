<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DU8NRH47eCl7ImA9WhRaGU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/850</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">&lt;b&gt;- Where are we today?&lt;/b&gt;

Even with the Gio wrapper, a bad file seek has different behavior on Windows vs Linux/Mac. Namely, the file position is different.

&lt;b&gt;- Why is this a problem?&lt;/b&gt;

&amp;quot;This can make portability complicated.&amp;quot;

&lt;b&gt;- The proposed enhancement:&lt;/b&gt;

Pick one implementation: e.g., keep the old file_pos after a bad seek. Maybe do a ftell before seeking and track that. Example of this behavior:

    // curpos = 29
    ret_code = my_file-&amp;gt;vtbl-&amp;gt;Seek(my_file, -5, SEEK_SET);
    EXPECT_RETCODE(-1, ret_code);

    // expect curpos 29 and read the expected byte
    my_file-&amp;gt;vtbl-&amp;gt;Read(my_file, &amp;amp;out_char, 1);
    EXPECT_EQ(GioExpectedCharAt(initial_char, 29), out_char);


</ns0:content><ns0:updated>2012-02-22T19:11:35.000Z</ns0:updated><ns0:published>2010-08-24T22:43:12.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/102292187274959663599/</ns2:uri><ns2:username>jvo...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>Gio library: make behavior of bad seek uniform across OSes</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>PlatformDifference</ns2:label><ns2:label>CoreRuntime</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/850/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=850" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/850" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>850</ns2:id></ns0:entry>