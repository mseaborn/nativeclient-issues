<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0ANQn47eCl7ImA9WhNREEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2883/comments/full/11</ns0:id><ns0:author>
			<ns0:name>ca...@rodarmor.com</ns0:name><ns0:uri>/u/101625503325676730752/</ns0:uri></ns0:author><ns0:content type="html">I'm not sure if this is the same problem, but I'm finding compiling with pnacl to be very slow. I can compile and link my module with pepper_canary/toolchain/mac_x86_newlib in about 1 second, but compiling and linking with peppar_canary/toolchain/mac_x86_pnacl/newlib takes about 5.5 seconds, a pretty big difference.

This wouldn't be so very bad if I could use the two toolchains interchangeably, and just switch to the pnacl toolchain for release. However, the non-pnacl toolchain uses gcc, which doesn't have great c++11 support compared to the pnacl toolchain's newish clang, so I would have to restrict myself to the subset C++11 that compiles on both.

Is this an architectural issue, or something that will soon be solved?</ns0:content><ns0:updated>2012-11-05T05:03:13.000Z</ns0:updated><ns0:published>2012-11-05T05:03:13.000Z</ns0:published><ns2:updates /><ns0:title>Comment 11 by ca...@rodarmor.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2883#c11" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2883/comments/full/11" rel="self" type="application/atom+xml" /></ns0:entry>