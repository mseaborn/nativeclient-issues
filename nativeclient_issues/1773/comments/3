<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0UNQH47eCl7ImA9WhZWFUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1773/comments/full/3</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">I think teaching scons to call nacl-ar directly should not be too hard.
I can start looking into this but I also cc'ed bradnelson just in case.
How many more object files to you expect to add to this library in the future?

Other options (some quite hackish):
* split stuff into smaller libraries, e.g. have a separate lib for command_buffer
* add some magic to scons to shorted the command line, e.g. we could cd to 
  glibc\obj\src\shared\ppapi_proxy before executing the command and shorted
  the arguments to reflect this.
* build separate archives and merge them into bigger ones (newlib does this but it is quite a horrible hack)</ns0:content><ns0:updated>2011-05-16T14:14:51.000Z</ns0:updated><ns0:published>2011-05-16T14:14:51.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>bradnelson@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 3 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1773#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1773/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>