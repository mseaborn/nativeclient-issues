<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUEASH47eCl7ImA9Wx9bFks.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1475/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Given the use of locks in malloc(), is the underlying cause the slowness of locks in nacl-newlib (issue 562)?  It would be interesting to try nacl-glibc, where the uncontended case should be a lot faster.

I am guessing that the reason nc_thread_mutex_lock() does not show up in the pnacl64 "top functions" list is that it is inlined by some PNaCl link-time optimisation.</ns0:content><ns0:updated>2011-02-25T19:54:09.000Z</ns0:updated><ns0:published>2011-02-25T19:54:09.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1475#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1475/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>