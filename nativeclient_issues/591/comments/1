<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUYASX47eCl7ImA9WxFVEk0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/591/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The other two validators have different test frameworks.


The ARM validator has 6 test cases in
src/trusted/validator_arm/testdata.  Each test has:
  test_foo.S (source)
  test_foo.nexe (input:  checked-in ELF binary)
  test_foo.err (expected output)
  test_foo.out (always empty)

The tests are run against checked-in binary *.nexe files.  The source
is checked in, but updating the binaries must be done semi-manually by
running compile_tests.sh.  Using binaries makes it awkward to run
tests through trybots (which only support textual patches).

validators_tests takes ~6s to run.

Tests are enumerated in the build.scons file.


The x86-64 validator has 55 test cases in
src/trusted/validator_x86/testdata/64.  Each test has:
  foo.hex (input:  binary data expressed in hex)
  foo.val (expected validator messages)
  foo.dis (expected disassembly)

Adding a test involves writing some assembly, compiling it, doing
"objdump -d", manually copying the hex to a *.hex file.

validators_tests takes ~20s to run.

Tests are found by globbing the testdata/64 directory.


The x86-32 validator has about 97 test cases.
</ns0:content><ns0:updated>2010-06-10T21:59:08.000Z</ns0:updated><ns0:published>2010-06-10T21:59:08.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>cbif...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=591#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/591/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>