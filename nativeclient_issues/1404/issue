<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkQHRH47eCl7ImA9WhdSGEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1404</ns0:id><ns0:author>
			<ns0:name>euge...@google.com</ns0:name><ns0:uri>/u/101600367715055138223/</ns0:uri></ns0:author><ns0:content type="html">Valgrind detects a binary mapped into client address space by intercepting mmap() system calls and looking for pairs of (r-x and rw-) mappings from the same file.

With NaCl, DSOs don't have an executable file mapping at all - instead there is 1 large executable segment which contains code from all DSOs. This code is copied (not mapped) there after validation.

The current plan is to tell Valgrind about mapping addresses of individual DSOs by intercepting a function inside runnable-ld.so. We can not use the usual method of LD_PRELOAD-ing an interceptor for obvious reasons; the interceptor will have to reside in the loader itself.

To reiterate, I'm pulling a valgrind.h header to untrusted glibc and adding a symbol with cryptic name to the loader binary. Hope that's fine. It will not add any overhead in valgrind-less runs.</ns0:content><ns0:updated>2011-07-29T00:12:15.000Z</ns0:updated><ns0:published>2011-02-09T12:47:03.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/101600367715055138223/</ns2:uri><ns2:username>euge...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/103360015124260446450/</ns2:uri><ns2:username>eaelt...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Valgrind can not read debug info from untrusted DSOs</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-Linux</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1404/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1404" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1404" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>1403</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:blocking>
			<ns2:id>1405</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2011-05-26T12:15:51.000Z</ns2:closedDate><ns2:id>1404</ns2:id></ns0:entry>