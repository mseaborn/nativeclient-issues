<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CU4MSX47eCl7ImA9WhZaE0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/988/comments/full/5</ns0:id><ns0:author>
			<ns0:name>mmorten...@google.com</ns0:name><ns0:uri>/u/100268164290167392978/</ns0:uri></ns0:author><ns0:content type="html">I validated that viewing struct values does not work today.

If you create a simple struct:  

   struct MyStruct {
     int x;
     int y;
   };

then in VSX when you hit a breakpoint where a variable like this is in scope:
   MyStruct myS;

the value of myS is set to "{MyStruct}".  
This is a known issue -- in SymbolValueToString (in NaClSymbolProvider.cs, around line 528) the code does not attempt to get the of a struct like it does for scalar values (ints, floats, chars), but instead does this:
        case BaseType.Struct:
          return "{" + result.Name + "}";
where result.Name is the name of the type such as "MyStruct".

I think we will need to handle plain old structs fairly soon or else the debugger will have very limited usability for debugging nexes in a browser where users have Pepper interfaces that are all about object and struct pointers.  

This is a known item that Mike L identified a long time back to do.  I'm just making it higher priority.  I'm pointing out where some of the code currently lives only so that it will be easier for Mike or I to find the current code when we get a chance to fix it...leaving a trail of bread crumbs, since I was in that file today. </ns0:content><ns0:updated>2011-06-29T21:46:28.000Z</ns0:updated><ns0:published>2011-06-29T21:46:28.000Z</ns0:published><ns2:updates>
			<ns2:label>-Type-Enhancement</ns2:label><ns2:label>-Milestone-Z</ns2:label><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-15</ns2:label><ns2:ccUpdate>dsprin...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 5 by mmorten...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=988#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/988/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>