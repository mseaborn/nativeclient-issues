<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUEFQX47eCl7ImA9WxBUEk8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/272/comments/full/11</ns0:id><ns0:author>
			<ns0:name>adono...@google.com</ns0:name><ns0:uri>/u/110803933729866443698/</ns0:uri></ns0:author><ns0:content type="html">Hi dtaul,

I've spent an inordinate amount of time on this bug this week.  Here's what I know so 
far:

It's reproducible in QEMU and on real Cortex hardware.

There's a floating point rounding vcvt.s32.f64 occurring on the "L = d.d" line in 
_dtoa_r that is due to incorrect behaviour in the assember.   It uses the rounding 
mode specified in the fpscr reg (r), not round-to-zero (no r), and as a result the 
new value of d.d is out of the range [0..1].  

I notice that there's a bug report about the assembler: 
http://sourceware.org/bugzilla/show_bug.cgi?id=11109  and that it has since been 
patched.  However I haven't succeeded in building a working GNU "as" with that patch, 
since we're pegged to an older version.  I have however patched the binary and found 
that this effective as a workaround.  (But I'm not convinced this is the only problem 
here.)

It's been especially painful to work on since I can neither call printf (since that 
where the bug is!) nor gdb (since I can't persuade it to dump the ARM neon register 
file).

Let me know if you make any progress.  I'll assume you're working on this unless you 
tell me otherwise.  (By the way, did you not notice the that I'd claimed this bug, as 
noted above?  Not that I have any objection to assigning it to you, but I'm worried 
about the potential for wasteful duplication of effort.)

cheers
alan
</ns0:content><ns0:updated>2010-02-26T23:40:10.000Z</ns0:updated><ns0:published>2010-02-26T23:40:10.000Z</ns0:published><ns2:updates /><ns0:title>Comment 11 by adono...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=272#c11" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/272/comments/full/11" rel="self" type="application/atom+xml" /></ns0:entry>