<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck8HQ347eCl7ImA9WhdTFkU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2014/comments/full/1</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=6059

------------------------------------------------------------------------
r6059 | mseaborn@chromium.org | Thu Jul 14 14:57:34 PDT 2011

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/service_runtime/arch/x86_64/nacl_switch_64.S?r1=6059&amp;r2=6058&amp;pathrev=6059

x86-64 sandbox: Avoid revealing NaClThreadContext pointer to untrusted code

If there were a vulnerability that allowed writing to an arbitrary
address, knowing the address of struct NaClThreadContext would make
the vulnerability easy to exploit in a reliable, cross-platform way.
So to be on the safe side, we avoid leaking this address.  The cost is
only the same as the cost untrusted code already pays for all indirect
jumps.

This also removes a source of non-determinism.  Others remain, of course!

BUG=http://code.google.com/p/nativeclient/issues/detail?id=2014
TEST=no specific test for the new behaviour

Review URL: http://codereview.chromium.org/7375004
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-07-14T22:00:32.000Z</ns0:updated><ns0:published>2011-07-14T22:00:32.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2014#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2014/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>