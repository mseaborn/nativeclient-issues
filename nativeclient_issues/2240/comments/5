<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEECQH47eCl7ImA9WhdWFE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2240/comments/full/5</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">current hypothesis is that this is related to the truncated downloads issue

http://code.google.com/p/nativeclient/issues/detail?id=1521
http://code.google.com/p/chromium/issues/detail?id=78651  (?)
http://code.google.com/p/chromium/issues/detail?id=95570
http://code.google.com/p/chromium/issues/detail?id=95571

but will continue to investigate / try to repro.  when you saw this, what is ELF in ELF-ELF+0x1000?  we always map using a size that's a multiple of 64kB -- both in untrusted code and in the writable mmap cache that jansel implemented -- so the fact that ELF+0x1000 was the upper bound is weird/inconsistent.  i think on windows if we map beyond the end of a file, only the last 4kB page is zero filled, and access beyond that to the next 64kB boundary will cause a fault, but i don't think this is true on OSX (will test next).  if it doesn't give readable zero-filled memory, then a truncated download could cause glibc/elf/dl-load.c's invocation of nacl_dyncode_map (sysdep/nacl/nacl_dyncode_map.c) to map and copy in segments based on the ELF header's description of how big the segments are -- which, on a truncated download, would be inconsistent with the actual size of the file -- and thus cause a fault when reading the portion of the mapping that's beyond the end of the file.</ns0:content><ns0:updated>2011-09-07T20:17:41.000Z</ns0:updated><ns0:published>2011-09-07T20:17:41.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2240#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2240/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>