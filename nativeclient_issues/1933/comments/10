<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0MFR347eCl7ImA9WhFTFkg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1933/comments/full/10</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">I can confirm that this is currently broken.  I wrote a test which sets registers to known values and then throws a C++ exception.  The landing pad code is called with the registers %rbx, %r12, %r13 and %r14 all truncated to 32 bits.

The problem is not in libgcc_eh itself.  uw_install_context_1() in gcc/unwind-dw2.c is responsible for copying register values around.  It's agnostic about the register size:  it uses sizeof(_Unwind_Word) and sizeof(_Unwind_Ptr).

Those types are defined by unwind-generic.h as:

typedef unsigned _Unwind_Word __attribute__((__mode__(__unwind_word__)));
typedef unsigned _Unwind_Ptr __attribute__((__mode__(__pointer__)));

This gives the correct size for _Unwind_Word under x86-64 nacl-gcc, but not under pnacl-clang:

$ cat unwind_word.c
typedef unsigned _Unwind_Word __attribute__((__mode__(__unwind_word__)));
int unwind_word_size() { return sizeof(_Unwind_Word); }

$ x86_64-nacl-gcc unwind_word.c -S -o - -O2
...	movl	$8, %eax
...

$ pnacl-clang unwind_word.c -S -o -
...  ret i32 4
...

Adding "--pnacl-frontend-triple=x86_64" gives the correct value of 8.  We probably just need to change build.sh to pass that when building libgcc_eh.  Currently it only passes "--pnacl-bias=x86-64".
</ns0:content><ns0:updated>2013-06-08T01:36:56.000Z</ns0:updated><ns0:published>2013-06-08T01:36:56.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>-k...@google.com</ns2:ccUpdate><ns2:ccUpdate>-eaelt...@google.com</ns2:ccUpdate><ns2:ccUpdate>dschuff@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 10 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1933#c10" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1933/comments/full/10" rel="self" type="application/atom+xml" /></ns0:entry>