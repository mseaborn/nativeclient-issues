<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CU4MSX47eCl7ImA9Wx5UEUo.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/634/comments/full/5</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">It just looks wrong to have sizable chunk of TCB which exist only to support "reasonable NaCl demo".

Real programs need more functions then what our trampolines provide (for example unlink(2) and rename(2) are frequently needed).

If we want to make it possible to implement real programs (and not just demo program/tests) without SRPC then we'll need many more trampolines, if we don't want to go that way then we probably don't need all existing trampolines too.

From security POV it makes more sense to offer as few trampolines as possible: SRPC and a few time-critical syscalls (locking-related and time-reading functions, essentially). Everything else can be implemented in "trusted companion" or in untrusted code (using SRPC).
</ns0:content><ns0:updated>2010-10-15T20:19:48.000Z</ns0:updated><ns0:published>2010-10-15T20:19:48.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by k...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=634#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/634/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>