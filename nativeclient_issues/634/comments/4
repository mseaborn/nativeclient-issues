<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0IDRn47eCl7ImA9Wx5UEUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/634/comments/full/4</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">In the long term I'm a little concerned about this approach.  One of the advantages of the trampolines is the simplicity of porting new code: you can build a reasonable NaCl demo without implementing IMC or SRPC.  The fact that the trampolines generate browser calls behind the scenes should be hidden from the application.

Exposing an SRPC transport layer for something as elementary as file API calls seems unnecessarily complicated to me.  Why are we heading in this direction?</ns0:content><ns0:updated>2010-10-15T19:06:17.000Z</ns0:updated><ns0:published>2010-10-15T19:06:17.000Z</ns0:published><ns2:updates /><ns0:title>Comment 4 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=634#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/634/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>