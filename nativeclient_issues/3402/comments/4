<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEYNQn47eCl7ImA9WhBVF08.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3402/comments/full/4</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Victor wrote:

"I think it looks like perfect example of ABI change which IRT was designed to facilitate. I mean: change the TCB version of mmap not to ignore PROT_EXEC, introduce "nacl-irt-memory-0.3" which transparently calls that and change "nacl-irt-memory-0.1" and "nacl-irt-memory-0.2" to silently clear PROT_EXEC bit before TCB call and voila: problem solved. Old programs can not use PROT_EXEC, but they don't need it and new ones should not try to mmap stack with rwx memory protection anyway.

Why are we introducing hacks in TCB instead?"</ns0:content><ns0:updated>2013-04-23T14:09:53.000Z</ns0:updated><ns0:published>2013-04-23T14:09:53.000Z</ns0:published><ns2:updates /><ns0:title>Comment 4 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3402#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3402/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>