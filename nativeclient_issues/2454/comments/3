<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUQNRX47eCl7ImA9WhRSF0o.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2454/comments/full/3</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">AFAIK, there is no existing way to represent these stubs in bitcode with the correct semantics. ("declared and assumed to exist, but never actually defined")

Here are the other options I considered before creating pnacl_abi.S:
1) Use linker script PROVIDEs
2) Use --defsym=sym=0  (in the bitcode link)
3) Use .pso file with the stubs
4) Modify gold-plugin to recognize these symbols as being always-available.
5) Modify gold-plugin to recognize a new type of bitcode type as being "not linked-in" (like pso) but not actually given an soname.

Each of these methods has problems:
1 &amp; 2 do not currently work because of the way we use gold. (this could be fixed)
3 has the wrong semantics.
4 is ugly (we'd have to recompile the gold plugin to update the ABI definitions)
5 requires a single-use extension to bitcode, which seems not worth the added complexity

Are you suggesting an alternative implementation?</ns0:content><ns0:updated>2011-11-20T07:16:34.000Z</ns0:updated><ns0:published>2011-11-20T07:16:34.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by pdox%goo...@gtempaccount.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2454#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2454/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>