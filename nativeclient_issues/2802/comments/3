<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CEYBRH47eCl7ImA9WhVUGU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2802/comments/full/3</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">I think the problem is that llvm is using the compile unit's filename to get a unique ID (e.g., "1" for file "foo.c" and 2 for file "bar.c" but "1" again if you compile "foo.c" in twice).

Then, when it comes time for the MC streamer to write out labels, you end up with duplicate labels (e.g., .Linfo_beginID), since the labels are based on the ID.

This test tickles that because it compiles the same source file: "tests/callingconv_case_by_case/call_structs.cc", but compiles it to different .o files based on different defines.
</ns0:content><ns0:updated>2012-05-24T23:29:15.000Z</ns0:updated><ns0:published>2012-05-24T23:29:15.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2802#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2802/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>