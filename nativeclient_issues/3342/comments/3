<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkEESH47eCl7ImA9WhBXFUQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3342/comments/full/3</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">We have to do

i1-&gt;i32

as well, because Clang generates i1 for bool in C++ in some cases.  For example:

bool load_int_as_bool(int *x) {
  return *x;
}

becomes:

$ clang bool_test.cc -S -emit-llvm -o - -O2
...
define zeroext i1 @_Z16load_int_as_boolPi(i32* nocapture %x) nounwind uwtable readonly {
  %1 = load i32* %x, align 4, !tbaa !0
  %2 = icmp ne i32 %1, 0
  ret i1 %2
}
</ns0:content><ns0:updated>2013-03-29T22:03:29.000Z</ns0:updated><ns0:published>2013-03-29T22:03:29.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3342#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3342/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>