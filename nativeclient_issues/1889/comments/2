<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkMFQX47eCl7ImA9WhZUFE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1889/comments/full/2</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">Other stuff:

(4) I think we also need to build the sandboxed LLC.nexe and LD.nexe with a segment gap to make them compatible with IRT loading.

- Based on the above commit, for item (2) we are going with the pre-built IRT images to test what we are deploying. If, in the future we ever want to try building the IRT image with LLVM, a patch like this to add a -mtls-use-call flag: http://codereview.chromium.org/7024036/ should work (NOTE, also requires changing scons so that when we translate the IRT+newlib bitcode blob, it uses the -mtls-use-call flag).
- A quick test showed that the stripped IRT image built by LLVM is actually bigger than the one built by GCC.</ns0:content><ns0:updated>2011-06-06T22:46:50.000Z</ns0:updated><ns0:published>2011-06-06T22:46:50.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1889#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1889/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>