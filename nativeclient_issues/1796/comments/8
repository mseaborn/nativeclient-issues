<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0ACR347eCl7ImA9WhZWGE4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1796/comments/full/8</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=5369

------------------------------------------------------------------------
r5369 | mseaborn@chromium.org | Thu May 19 14:12:08 PDT 2011

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/desc/posix/nacl_desc_conn_cap.c?r1=5369&amp;r2=5368&amp;pathrev=5369
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/desc/posix/nacl_desc_imc_bound_desc.c?r1=5369&amp;r2=5368&amp;pathrev=5369

IMC: Work around Mac OS X's socket-passing kernel bug in imc_connect()/imc_accept()

On OS X, if a socket FD is only referenced from the message queue of
another socket, the socket FD can get broken so that it does not
receive messages properly.

This broke imc_connect()/imc_accept(), because imc_connect(S1) creates
a socket S2 which for a while is only referenced from S1's queue,
until it is picked up by imc_accept().  As a workaround, change
imc_connect() to wait for an acknowledgement message before closing
its reference to S2.

There is extra complication to make this robust in case the
imc_accept()'ing process dies.

We don't enable this workaround code on Linux because it is
unnecessary there, and the workaround is hairy and uses a corner case
of poll().

Note that this does not fix Chromium's nacl_process_host.cc, which
will probably suffer from the kernel bug in a similar way.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=1796
TEST=
 1) run_socket_transfer_test
 2) test the error handling that the poll() code does by commenting out
    the if() block that checks for an error from sendmsg().
 3) "chrome_browser_tests -j8" on an OS X 10.5 machine

Review URL: http://codereview.chromium.org/7040005
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-05-19T21:16:06.000Z</ns0:updated><ns0:published>2011-05-19T21:16:06.000Z</ns0:published><ns2:updates /><ns0:title>Comment 8 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1796#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1796/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>