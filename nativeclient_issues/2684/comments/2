<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEUDSH47eCl7ImA9WhVRFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2684/comments/full/2</ns0:id><ns0:author>
			<ns0:name>bradc...@google.com</ns0:name><ns0:uri>/u/110304265766688778552/</ns0:uri></ns0:author><ns0:content type="html">A fixed feature CPU model has a number of interesting security properties. It facilitates text segments that do not require patching, so they can be mmapped instead of read into memory. It also allows requiring common features, such as SSE, and mandatory omission of a number of instructions that are unnecessary on modern x86 implementations, such as x87 floating point. It will also allow omission of the CPUID instruction, which will no longer be needed to detect presence of CPU features.</ns0:content><ns0:updated>2012-03-23T15:24:39.000Z</ns0:updated><ns0:published>2012-03-23T15:24:39.000Z</ns0:published><ns2:updates>
			<ns2:label>-Private</ns2:label><ns2:label>-OS-Linux</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:status>Assigned</ns2:status><ns2:summary>Implement a fixed-feature CPU model</ns2:summary></ns2:updates><ns0:title>Comment 2 by bradc...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2684#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2684/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>