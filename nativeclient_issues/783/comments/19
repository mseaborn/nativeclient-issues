<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkEARH47eCl7ImA9Wx5VEE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/783/comments/full/19</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">The problem is in the trusted service runtime. The stack pointer (SP) is not properly aligned at startup.

AAPCS expects 8-byte SP alignment. In this particular case, _start is being called with SP = 4 (mod 8).

All functions generated by LLVM expect SP to be aligned mod 8, and they maintain this invariant by ensuring that all local stack allocations are a multiple of size 8. If the application starts out with incorrect alignment, then the incorrect alignment will be retained throughout the entire program. 

When va_arg() grabs a long long off the stack, it uses (SP + offset + 7) % 8 to round up to the next value. If SP is misaligned, this does not behave correctly.
</ns0:content><ns0:updated>2010-10-02T07:30:45.000Z</ns0:updated><ns0:published>2010-10-02T07:30:45.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>jasonw...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 19 by pdox%goo...@gtempaccount.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=783#c19" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/783/comments/full/19" rel="self" type="application/atom+xml" /></ns0:entry>