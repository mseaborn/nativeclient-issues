<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkQCRn47eCl7ImA9WhdSGEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1229</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">We should get Python to build and run under NaCl.  Python uses dynamic
linking for its C extension modules, so this requires using
nacl-glibc.  This is mostly a question of implementing supporting
interfaces in NaCl, rather than changing Python.

In 2009 I got Python working under NaCl using my nacl-glibc branch:
http://lackingrhoticity.blogspot.com/2009/05/progress-on-native-client.html
http://lackingrhoticity.blogspot.com/2009/06/python-standard-library-in-native.html

The complicating factor with building Python is that its build system
expects to be able to run the &amp;quot;python&amp;quot; executable it has just built.

In 2009, I got past this hurdle my building executables that work
under both NaCl and Linux (since nacl-glibc was ABI-compatible with
Linux glibc) with a small rewrite step to change masking instructions.
See http://plash.beasts.org/wiki/NativeClient/Ncrewrite.

However, that trick no longer works with NaCl's current Big Segment
Gap scheme for dynamic loading.

This means we have to find another way to make the Python build's
invocation of the &amp;quot;python&amp;quot; executable work.

I have managed to get the Python build to run &amp;quot;python&amp;quot; under sel_ldr.
The build currently fails at the point where it tries to use getcwd()
in this environment:

Traceback (most recent call last):
  File &amp;quot;./setup.py&amp;quot;, line 11, in &amp;lt;module&amp;gt;
    from distutils import sysconfig
  File &amp;quot;Lib/distutils/sysconfig.py&amp;quot;, line 28, in &amp;lt;module&amp;gt;
    project_base = os.path.dirname(os.path.abspath(sys.executable))
  File &amp;quot;Lib/posixpath.py&amp;quot;, line 337, in abspath
    path = join(os.getcwd(), path)
OSError: [Errno 38] Function not implemented
make: *** [sharedmods] Error 1

To get further we would need an implementation of getcwd().  My plan
is to do this using POSIX-over-IMC support in nacl-glibc.
</ns0:content><ns0:updated>2011-07-29T00:12:47.000Z</ns0:updated><ns0:published>2010-12-08T01:53:29.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/krasin@google.com/</ns2:uri><ns2:username>krasin@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>Get Python to work under Native Client</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1229/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1229" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1229" rel="self" type="application/atom+xml" /><ns2:stars>25</ns2:stars><ns2:id>1229</ns2:id></ns0:entry>