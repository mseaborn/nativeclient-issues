<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0EBSX47eCl7ImA9Wx9SF0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1229/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Hi Ivan.  What I plan to do is in issue 634.  File namespace accesses
should go through IPC.  It should go through descriptors that
untrusted code sees so that the syscalls are not providing ambient
authority, and so that the file namespace can be virtualised by
untrusted code.

I'm not entirely clear on what you are proposing.  Are you saying
sel_ldr would forward a getcwd() syscall to another process?  Or would
it merely be enabled by "-a" the way the open() syscall is enabled at
the moment?</ns0:content><ns0:updated>2010-12-08T06:27:38.000Z</ns0:updated><ns0:published>2010-12-08T06:27:38.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1229#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1229/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>