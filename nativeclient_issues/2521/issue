<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DE8FQ347eCl7ImA9WhBaEkg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2521</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The x86-32 validator allows the following instructions, which are illegal (they produce SIGILL on Linux):

  lock add 0, %eax
  lock add (%eax), %eax

LOCK is only legal if the destination operand (the second operand above) is a memory location.  The validator is accepting the instructions above on the grounds that they contain a memory access, but the memory access is for the source operand not the destination operand.

The x86-64 validator does not seem to have this bug, and it correctly rejects this instruction:

  lock add 0(%rip), %eax
</ns0:content><ns0:updated>2013-05-22T21:06:52.000Z</ns0:updated><ns0:published>2012-01-06T01:16:09.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:cc>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>x86-32 validator allows some illegal uses of the LOCK prefix</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2521/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2521" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2521" rel="self" type="application/atom+xml" /><ns2:stars>3</ns2:stars><ns2:closedDate>2013-05-22T21:06:52.000Z</ns2:closedDate><ns2:id>2521</ns2:id></ns0:entry>