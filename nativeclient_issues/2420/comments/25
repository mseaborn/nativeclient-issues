<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0IMR347eCl7ImA9WhVVFU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2420/comments/full/25</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">One known issue:

- The declarations we create to represent undefined symbols are mostly ignored by the bitcode linker (gold + gold-plugin), because

(a) they have no users, and
(b) we have a local mod that ignores declarations with no users:

      if (decl-&gt;use_empty() &amp;&amp;
      !IntrinsicLowering::IsCalledByIntrinsic(decl-&gt;getName())) { return; }

in LTOModule.cpp

Will try to patch the pso-stub generator to mark these declarations used (place in the llvm.used array?).


Another issue is that the bitcode linker treats undefined symbols needed by PSO's and satisfied by the main image, differently from from .so files.

Say, "foo" is undefined in liba.so and "foo" is defined by main.nexe.

For .so files, "foo" marked as "in_real_elf()" + defined and thus "externally visible".  However, for .pso files, "foo" is definitely not marked as "in_real_elf" so it is not "externally visible", even the .pso was meant to be like a .so.



This is the reason why _IO_stdin_used gets optimized out in the .pso stub case, while it is not optimized out in the .so case (for libc.so.#) (see issue 2747).</ns0:content><ns0:updated>2012-05-08T19:33:06.000Z</ns0:updated><ns0:published>2012-05-08T19:33:06.000Z</ns0:published><ns2:updates /><ns0:title>Comment 25 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2420#c25" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2420/comments/full/25" rel="self" type="application/atom+xml" /></ns0:entry>