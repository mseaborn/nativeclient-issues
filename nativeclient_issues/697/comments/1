<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkEAQn47eCl7ImA9WxFaEk0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/697/comments/full/1</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">We have gotten burned in the past several times by our overzealous use of INLINE.

and it was typically because of similar issue where a compiler on some platform
(I believe windows was implicated) decided to not generate code for an inlined function and we ended up with an undefined symbol.

My suggestion would be to drastically reduce our use of INLINE.
A lot of those seem to be instances of premature optimization.

INLINEs in .c files can probably be eliminated without any consequences.

</ns0:content><ns0:updated>2010-07-15T14:37:23.000Z</ns0:updated><ns0:published>2010-07-15T14:37:23.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=697#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/697/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>