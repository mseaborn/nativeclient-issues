<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DU4CSX47eCl7ImA9WhJVE0g.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2983/comments/full/3</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">When I started this, I had thought that the debug stub would need to implement stepping across breakpoints.  When we continue after hitting a breakpoint, someone has to be responsible for temporarily removing the breakpoint and single-stepping across the original instruction before reinserting the breakpoint.  Currently, GDB does this.  I had thought that when 'Z'/'z' are available, GDB would assume that the debug stub's 'c' command would do this.  (That would be tricky to implement on ARM where we don't have hardware single-stepping support.)

However, I've looked at the commands GDB produces, and luckily it turns out that GDB doesn't assume this, and it always takes responsibility for stepping across the temporarily-removed breakpoint.</ns0:content><ns0:updated>2012-08-30T20:19:28.000Z</ns0:updated><ns0:published>2012-08-30T20:19:28.000Z</ns0:published><ns2:updates>
			<ns2:status>Started</ns2:status></ns2:updates><ns0:title>Comment 3 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2983#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2983/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>