<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkMFQ347eCl7ImA9WhRTEEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2402/comments/full/1</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">
The chrome image used in nacl tests is determined by  "chromebinaries_rev",
in DEPS.

The is in turn converted by build/chromebinaries.py into a url.
This is probably the place to sneak in the new path/url.


The top level script for download chrome is build/download_chrome.py
which is invoked by tests/nacl.scons.


One simple way to go about this is to push your image onto the same server
that hosts chrome binaries but with a "strange" revision ,e.g.

use "nacl_hack_xxxx" instead of  107636

this way we only need to change the DEPS file</ns0:content><ns0:updated>2011-10-31T19:46:52.000Z</ns0:updated><ns0:published>2011-10-31T19:46:52.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by robertm@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2402#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2402/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>