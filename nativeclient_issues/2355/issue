<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUQERH47eCl7ImA9WhdbFU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2355</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">our clang bots get clang based on the revision of chrome that NaCl's DEPS pulls in, rather than an independent known-to-be-good version of clang.  this means that a chrome DEPS roll brings in unrelated clang changes that break our clang bot builds.

if we explicitly DEPS'd in clang, then we can fix clang-roll induced breaks independently of chrome DEPS rolls.

so far, it appears to be that the mac 10.6 version of clang complains about things differently from the lucid64 version.</ns0:content><ns0:updated>2011-10-13T20:21:45.000Z</ns0:updated><ns0:published>2011-10-13T20:21:45.000Z</ns0:published><ns2:status>New</ns2:status><ns2:state>open</ns2:state><ns0:title>NaCl's clang bots should use a NaCl DEPS-ed in version of clang, o/w we get uncontrolled breaks</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-Infrastructure</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2355/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2355" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2355" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2355</ns2:id></ns0:entry>