<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkYGR347eCl7ImA9WhRaE0k.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1126</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Currently, for dynamic linking, we implement the Big Segment Gap (BSG) scheme, described here:
http://code.google.com/p/nativeclient/wiki/DynamicLoadingOptions

In principle, we could implement a Sliding Segment Gap (SSG) scheme as well.  In this scheme, an ELF executable/library can be loaded with arbitrary gap sizes between code and data segments.

There were three possible SSG schemes:
 * SSG-textrel
 * SSG-getgot
 * SSG-codegot

Advantages:
 * Less address space wastage.

Disadvantages:
 * Would require substantial toolchain changes.  Would potentially involve changing GCC's code generation and adding new relocation types to the assembler and linker, and extending the ELF format.
 * Might rule out being able to mmap code (particularly for SSG-textrel).
 * Might require TCB changes (for SSG-codegot).
 * The resulting code might be slower.

The disadvantages make this very low priority.</ns0:content><ns0:updated>2012-02-15T23:22:06.000Z</ns0:updated><ns0:published>2010-10-29T13:57:27.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/110304265766688778552/</ns2:uri><ns2:username>bradc...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>Implement the Sliding Segment Gap (SSG) scheme</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Component-GCC</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1126/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1126" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1126" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>1126</ns2:id></ns0:entry>