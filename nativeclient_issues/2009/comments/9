<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MMR347eCl7ImA9WhdSE0g.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2009/comments/full/9</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=6174

------------------------------------------------------------------------
r6174 | bsy@google.com | Fri Jul 22 11:29:50 PDT 2011

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/SConstruct?r1=6174&amp;r2=6173&amp;pathrev=6174
 A http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/unittests/trusted/service_runtime?r1=6174&amp;r2=6173&amp;pathrev=6174
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/validator_x86/nccopycode.c?r1=6174&amp;r2=6173&amp;pathrev=6174
 A http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/unittests/trusted?r1=6174&amp;r2=6173&amp;pathrev=6174
 A http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/unittests/trusted/service_runtime/build.scons?r1=6174&amp;r2=6173&amp;pathrev=6174
 A http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/unittests/trusted/service_runtime/nacl_memory_test.c?r1=6174&amp;r2=6173&amp;pathrev=6174

change SerializeAllProcessors to always drop execute privilege on a
page to ensure that an interprocessor interrupt occurs, which should
serve as a memory barrier.  this assumes that the underlying OS has to
perform the interrupt, since it cannot know, for example, if the
application code used atomic memory operations to communicate from one
thread to another that the execute privilege was dropped, and that the
application threads depend upon getting an exception if it tries to
execute from a page that is now non-executable.

NB: the converse state transition from non-executable to executable
might not result in an interprocessor interrupt, since the underlying
OS may simply update a global table and leave the per-CPU page tables
alone: it is okay for a thread to take a fault for trying to execute a
non-executable page if the kernel can update the PTEs in the fault
handler and retry the faulting instruction.

this is a hack-and-slash of krasin's original code from CL
http://codereview.chromium.org/7479002/

BUG= http://code.google.com/p/nativeclient/issues/detail?id=2009
Review URL: http://codereview.chromium.org/7493007
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-07-22T18:31:26.000Z</ns0:updated><ns0:published>2011-07-22T18:31:26.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2009#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2009/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>