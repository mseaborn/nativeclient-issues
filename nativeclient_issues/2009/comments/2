<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkcHRn47eCl7ImA9WhdTFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2009/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Currently SerializeAllProcessors() flips the page back and forth between PROT_NONE and PROT_READ|PROT_WRITE|PROT_EXEC.

I just mean that mapping the page as read+write+execute is unnecessary when mapping it as only read+execute should do.

Leaving pages mapped as read+write+execute is considered dangerous because *if* there is some bug that allows writing to and executing an address, the presence of such a page makes the bug easier to exploit.  I'm just saying that it's standard practice to avoid RWX mappings.  Given the rest of NaCl's surface area (especially the cached RW dyncode mapping), an extra RWX page may not make much difference to the exploitability of other bugs.</ns0:content><ns0:updated>2011-07-12T22:33:57.000Z</ns0:updated><ns0:published>2011-07-12T22:33:57.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2009#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2009/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>