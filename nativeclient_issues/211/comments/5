<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4MSH47eCl7ImA9WxBWFE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/211/comments/full/5</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">How about we re-word the bug as follows, then:

If we're going to generate all combinations of instruction+condition code, we should 
do it from a central list of condition codes so we don't miss some (which we currently 
have!)</ns0:content><ns0:updated>2010-02-05T21:23:09.000Z</ns0:updated><ns0:published>2010-02-05T21:23:09.000Z</ns0:published><ns2:updates>
			<ns2:status>Available</ns2:status><ns2:summary>LLVM sfi macros should use central list of predicates to generate permutations</ns2:summary></ns2:updates><ns0:title>Comment 5 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=211#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/211/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>