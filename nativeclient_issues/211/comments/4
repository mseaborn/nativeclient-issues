<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkYCQn47eCl7ImA9WxBWE0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/211/comments/full/4</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">The reason why sfi_bx does not have condition code argument is that the LLVM backend
does not provide to "bx" which we are hijacking. This is a weird asymmetry in the
backend - other instructions do have it.

I tries to clean up the code somewhat by at least abstracting some of the duplicate
code we pass to gnu-as into a macro but that failed because gnu-as macro abilities
are toolimited 
</ns0:content><ns0:updated>2010-02-05T17:16:03.000Z</ns0:updated><ns0:published>2010-02-05T17:16:03.000Z</ns0:published><ns2:updates>
			<ns2:status>WontFix</ns2:status></ns2:updates><ns0:title>Comment 4 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=211#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/211/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>