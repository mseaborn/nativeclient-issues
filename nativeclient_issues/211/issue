<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D04NSH47eCl7ImA9WxFSGEs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/211</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">Currently our ARM code generator produces macros that take the predicate 
field as a parameter -- except sfi_bx, where we generate sfi_bx${COND} for 
all values of $COND.

Problem is, we're not generating all values of $COND.  CC is missing, for 
example.  We can avoid missing predicate values in the future by taking it 
as a parameter, like the other macros do.  (This will also simplify the code 
generator.)</ns0:content><ns0:updated>2010-04-21T16:06:39.000Z</ns0:updated><ns0:published>2009-12-11T22:19:11.000Z</ns0:published><ns2:status>Done</ns2:status><ns2:owner>
			<ns2:uri>/u/108771824208521698652/</ns2:uri><ns2:username>robe...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>LLVM sfi macros should use central list of predicates to generate permutations</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Component-DevTools</ns2:label><ns2:label>Arch-ARM</ns2:label><ns2:label>Pri-2</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/211/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=211" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/211" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2010-04-21T16:06:39.000Z</ns2:closedDate><ns2:id>211</ns2:id></ns0:entry>