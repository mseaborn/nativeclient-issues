<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEQCQn47eCl7ImA9WhRSFUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2452/comments/full/1</ns0:id><ns0:author>
			<ns0:name>dsch...@google.com</ns0:name><ns0:uri>/u/104270846665912603141/</ns0:uri></ns0:author><ns0:content type="html">I'm not sure about this. You've made a case that having an integrated toolchain would make things easier for us, but would that make it more difficult/surprising for users? I'm willing to consider 1-3, but number 4 strikes me as a bad idea; -static is a flag that should only affect linking, but now it pulls in a totally different set of headers? it's basically a completely different frontend behavior. (side note: you don't have to pass -static at the .c-&gt;.o phase, but only the linking phase, correct? but by then it's too late, you've already built your .o files against glibc)</ns0:content><ns0:updated>2011-11-17T16:12:43.000Z</ns0:updated><ns0:published>2011-11-17T16:12:43.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>jvo...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by dsch...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2452#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2452/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>