<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUcHSX47eCl7ImA9Wx9UGUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1099</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The futex emulation code in nacl-glibc will create a mutex and condvar FD for each thread, but it never frees them.

A complication is that these FDs apparently get reused when a thread stack is reused, because &amp;quot;struct pthread&amp;quot; is not zeroed out between uses.

I'm not sure if we should free the FDs on thread exit/join (which would make it nice and easy to test for the leak), or when the stack is deallocated from the free list (which saves on syscalls but is less easy to test).</ns0:content><ns0:updated>2011-02-17T22:50:38.000Z</ns0:updated><ns0:published>2010-10-26T16:46:30.000Z</ns0:published><ns2:status>Duplicate</ns2:status><ns2:cc>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>nacl-glibc: libpthread leaks mutex/condvar descriptors</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>Milestone-Baltic-Sea</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1099/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1099" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1099" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2010-12-09T22:50:10.000Z</ns2:closedDate><ns2:id>1099</ns2:id><ns2:mergedInto>
			<ns2:id>1100</ns2:id></ns2:mergedInto></ns0:entry>