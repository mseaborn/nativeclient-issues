<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkAASH47eCl7ImA9WhBRFU8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3328</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">Currently, if the service runtime is started and the command channel closed without load_module and start_module RPCs ever having run, then it locks up.  This &amp;quot;never&amp;quot; happens, since when the plugin spawns the service runtime, it immediately invokes these startup RPCs -- the timing window is small for the user to surf-away.

This issue became apparent when I ran an incompletely implemented test for subprocess creation, where sel_universal tried to shut down the main process, but the subprocess wouldn't die.

We need to have the load_module status update and the command channel connection count -&amp;gt; 0 events be tied together, so that the various WaitForLoadModule etc functions can return a LOAD_COMMAND_CHANNEL_CLOSED error code.</ns0:content><ns0:updated>2013-03-05T23:05:49.000Z</ns0:updated><ns0:published>2013-03-05T23:05:49.000Z</ns0:published><ns2:status>New</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>service runtime shutdown problem</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3328/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3328" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3328" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3328</ns2:id></ns0:entry>