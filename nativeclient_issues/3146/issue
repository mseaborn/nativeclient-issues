<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0UGRH47eCl7ImA9WhNRGUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3146</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The x86-64 sandbox requires 40GB of guard pages and the ARM sandbox requires 8k of guard pages above the sandbox.  The x86-32 sandbox doesn't require any guard pages, but having guards would protect against a class of mistakes where trusted code doesn't do a proper range check and runs off the end of untrusted address space.

e.g. See issue 3145 about NaClElfImageLoadDynamically().

e.g. Having trusted code call strlen() on a string in untrusted address space would be safer in the presence of a guard page.  (I'm not saying that using strlen() this way is a good idea, though!)
</ns0:content><ns0:updated>2012-11-15T02:07:05.000Z</ns0:updated><ns0:published>2012-11-15T02:07:05.000Z</ns0:published><ns2:status>New</ns2:status><ns2:state>open</ns2:state><ns0:title>Add sandbox guard pages on x86-32</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3146/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3146" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3146" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3146</ns2:id></ns0:entry>