<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D04AQX47eCl7ImA9Wx9REE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1214/comments/full/2</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">__WORDSIZE is an internal macro, and portable code should not use it at all.

We checked code search and found a reasonably small amount of __WORDSIZE usages, and most of these (however not all of them) were glibc clones.

If thinking on real usages of macro like this one:

- If this is for checking data model, this is simply a wrong macro. We should probably define _ILP32 as Itanium 32-bit gcc toolchain does;

- If this is for checking underlying arch capabilities, this is the right macro and it *should* reflect underlying arch capabilities, being 64 when arch registers are 64 bits;

Summarizing all of the above, forcing __WORDSIZE to be 32 seems:
- Probably wrong idea (encouraging incorrect uses of this macro)
- Relatively huge amount of work
- Minor issue for users
</ns0:content><ns0:updated>2010-12-10T18:32:20.000Z</ns0:updated><ns0:published>2010-12-10T18:32:20.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1214#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1214/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>