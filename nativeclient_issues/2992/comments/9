<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUMFQn47eCl7ImA9WhFSFU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2992/comments/full/9</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">------------------------------------------------------------------------
r206797 | jvoung@chromium.org | 2013-06-17T21:07:09.689569Z

Changed paths:
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/pnacl_coordinator.h?r1=206797&amp;r2=206796&amp;pathrev=206797
   A http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/nacl_http_response_headers_unittest.cc?r1=206797&amp;r2=206796&amp;pathrev=206797
   A http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/nacl_http_response_headers.cc?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/cpp/completion_callback.h?r1=206797&amp;r2=206796&amp;pathrev=206797
   A http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/nacl_http_response_headers.h?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/pnacl_options.cc?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/pnacl_options.h?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/ppapi_tests.gypi?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/file_downloader.cc?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/file_downloader.h?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/json_manifest.cc?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/pnacl_coordinator.cc?r1=206797&amp;r2=206796&amp;pathrev=206797
   M http://src.chromium.org/viewvc/chrome/trunk/src/ppapi/native_client/src/trusted/plugin/plugin.gypi?r1=206797&amp;r2=206796&amp;pathrev=206797

Use HTTP response headers for PNaCl caching instead of bitcode hash.

Use Last-Modified and/or ETag values from the server plus
the bitcode URL as a cache key.  This allows us to remove
a hash from the bitcode header and/or the PNaCl manifests.
Also, start applying "Cache-Control: no-store" to the
translated nexe, if it is part of the pexe's GET response.

This also shifts around some of the file_downloader code
to allow us to get a callback after the initial GET request,
but before the streaming is completely done.

Some caveats due to the layering of the trusted NaCl plugin
vs the rest of chrome:

* We end up with a basic HTTP response parser that splits
fields based on what is returned by ppb_url_response_info.
This can have been replaced by net/http/http_response_info.h
For now, we end up with some extra testing burden.
See: nacl_http_response_headers_unittest.cc
Once we can depend on net/, we can replace this code.

* We end up with some key sanitization.  Until we
switch from the HTML5 Filesystem to our own cache backend
there are 2 or 3 characters that are disallowed
in filenames.
See: http://dev.w3.org/2009/dap/file-system/file-dir-sys.html#naming-restrictions
We did not run into that problem in the past because the
NMF file's hash only had hexadecimal characters,
which is okay.

* Since the URL is now part of the cache, and not some
hash of the contents, once the PNaCl cache is not
per-origin, we have to be a bit careful that a user can
only store something to its own origin.  Perhaps that
checking can be done with SiteInstance's IsSameWebsite()?


This replaces: https://codereview.chromium.org/14683004.
With no sha hash to read, there is sha hash to verify.


BUG=http://code.google.com/p/nativeclient/issues/detail?id=2992

TEST=ppapi_unittests --gtest_filter=NaClHttpResponseHeadersTest*

TEST=browser_tests --gtest_filter=*Pnacl*

Review URL: https://chromiumcodereview.appspot.com/16569002
------------------------------------------------------------------------</ns0:content><ns0:updated>2013-06-17T21:10:13.000Z</ns0:updated><ns0:published>2013-06-17T21:10:13.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2992#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2992/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>