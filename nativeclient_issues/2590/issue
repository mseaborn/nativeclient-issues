<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0AAQX47eCl7ImA9WhRaEEo.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2590</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The x86-64 validator allows memory accesses via instruction encodings such as the following, which objdump disassembles with the &amp;quot;%riz&amp;quot; notation.  &amp;quot;%riz&amp;quot; means that the index value for the memory address is always zero:

   15c84:       89 7c e5 00             mov    %edi,0x0(%rbp,%riz,8)
   15c88:       89 7c e4 00             mov    %edi,0x0(%rsp,%riz,8)
   15c8c:       89 7c a5 00             mov    %edi,0x0(%rbp,%riz,4)
   15c90:       89 7c a4 00             mov    %edi,0x0(%rsp,%riz,4)
   15c94:       89 7c 65 00             mov    %edi,0x0(%rbp,%riz,2)
   15c98:       89 7c 64 00             mov    %edi,0x0(%rsp,%riz,2)
   15c9c:       89 7c 25 00             mov    %edi,0x0(%rbp,%riz,1)

   79022:       4d 89 04 e7             mov    %r8,(%r15,%riz,8)
   79026:       4d 89 04 a7             mov    %r8,(%r15,%riz,4)
   7902a:       4d 89 04 67             mov    %r8,(%r15,%riz,2)
   7902e:       4d 89 04 27             mov    %r8,(%r15,%riz,1)

ncdis disassembles these instructions in a way that is correct but that glosses over the fact that the encodings are redundant:

0000000000035c84: 89 7c e5 00                                  mov [%rbp], %edi
0000000000035c88: 89 7c e4 00                                  mov [%rsp], %edi
0000000000035c8c: 89 7c a5 00                                  mov [%rbp], %edi
0000000000035c90: 89 7c a4 00                                  mov [%rsp], %edi
0000000000035c94: 89 7c 65 00                                  mov [%rbp], %edi
0000000000035c98: 89 7c 64 00                                  mov [%rsp], %edi
0000000000035c9c: 89 7c 25 00                                  mov [%rbp], %edi

0000000000099022: 4d 89 04 e7                                  mov [%r15], %r8
0000000000099026: 4d 89 04 a7                                  mov [%r15], %r8
000000000009902a: 4d 89 04 67                                  mov [%r15], %r8
000000000009902e: 4d 89 04 27                                  mov [%r15], %r8

The canonical encodings of these instructions, produced by binutils' assembler, are shorter:

   201f1:	89 3c 24             	mov    %edi,(%rsp)
   201f4:	89 7d 00             	mov    %edi,0x0(%rbp)
   201f7:	4d 89 07             	mov    %r8,(%r15)

binutils' assembler will never generate the &amp;quot;%riz&amp;quot; addressing mode encoding.  It does not actually accept as input the output produced by binutils' disassembler.  For example, &amp;quot;mov %edi,0x0(%rbp,%riz,8)&amp;quot; produces the error:

nacl_asm64.S: Assembler messages:
nacl_asm64.S:1: Error: bad register name `%riz,8)'

For minimalism, and because the &amp;quot;%riz&amp;quot; encoding will never be generated in practice, the validator should disallow this encoding (except for the instruction 0f 1f ('nop') and perhaps 'lea').
</ns0:content><ns0:updated>2012-02-12T19:42:20.000Z</ns0:updated><ns0:published>2012-02-12T19:42:20.000Z</ns0:published><ns2:status>New</ns2:status><ns2:cc>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>x86-64 validator allows addressing mode with the redundant "%riz" encoding</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2590/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2590" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2590" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2590</ns2:id></ns0:entry>