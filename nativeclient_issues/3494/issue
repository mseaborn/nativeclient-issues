<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0EFQX47eCl7ImA9WhFSEEs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3494</ns0:id><ns0:author>
			<ns0:name>leonida...@gmail.com</ns0:name><ns0:uri>/u/117284709521987861353/</ns0:uri></ns0:author><ns0:content type="html">- How NaCl works today:
As NativeClient works now it forbids applications to declare static objects that make use of NativeClient APIs in their constructors.

Lets suppose that in an application I have written a class constructor which needs access to the pp:Module object. If I decide to create a static object of this class, the constructor will try to access the pp::Module before it has even been created.

This limitation is not present in other OS like Unix where developer can make system calls at every point of his application code.

- Proposed enhancement:
The pp::Module and pp::Instance objects is ensured to be the first objects created and initialized for every NativeClient application.
Thus developers can access these objects at any time of their program, even inside constructors of static objects.
</ns0:content><ns0:updated>2013-06-12T20:40:10.000Z</ns0:updated><ns0:published>2013-06-12T20:40:10.000Z</ns0:published><ns2:status>New</ns2:status><ns2:state>open</ns2:state><ns0:title>pp::Module and pp:Instance are not the first objects that are created in a NaCl application.</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-</ns2:label><ns2:label>OS-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3494/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3494" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3494" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3494</ns2:id></ns0:entry>