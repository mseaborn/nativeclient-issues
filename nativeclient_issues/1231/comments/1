<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A04BRn47eCl7ImA9Wx9SGE4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1231/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">This is a Linux/glibc bug -- the syscall is inconsistent with the usual syscall calling conventions.  The problem is described on the man page for times():

BUGS
       A  limitation  of  the Linux system call conventions on some architectures (notably i386) means
       that on Linux 2.6 there is a small time window (41 seconds) soon after boot  when  times()  can
       return  -1,  falsely  indicating  that  an error occurred.  The same problem can occur when the
       return value wraps passed the maximum value that can be stored in clockid_t.

http://www.kernel.org/doc/man-pages/online/pages/man2/times.2.html

I imagine the build slave had been rebooted.  The problem was that our build is too fast!

Possible fixes:
 * Catch the exception and carry on.
 * Upgrade the build slave to x86-64 (which we should do anyway).
 * If the build slave is rebooting automatically, stop it from doing that.  We don't really want it to be rebooting anyway.</ns0:content><ns0:updated>2010-12-08T20:25:57.000Z</ns0:updated><ns0:published>2010-12-08T20:25:57.000Z</ns0:published><ns2:updates>
			<ns2:label>Arch-x86-32</ns2:label><ns2:ccUpdate>b...@google.com</ns2:ccUpdate><ns2:ccUpdate>bradnel...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1231#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1231/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>