<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUUNSH47eCl7ImA9WhNUE0k.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3243/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Since this only happens on Mac, the problem is probably caused by the segment register restoration workarounds in osx/thread_suspension.c.

On Linux and Windows, SetRegisters(natp, GetRegisters(natp)) will be idempotent, even if the thread is interrupted during a trusted/untrusted context switch.

That's not the case on Mac, though.  On Mac, if the thread was interrupted during a context switch, SetRegisters() will try to restore an untrusted context, which will be bad.

I suspect break_continue_test.py is interrupting a context switch (a syscall or thread creation).  However, I am not sure exactly how that would cause the test to hang or spin rather than crash.
</ns0:content><ns0:updated>2013-01-05T00:54:59.000Z</ns0:updated><ns0:published>2013-01-05T00:54:59.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3243#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3243/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>