<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0AFQX47eCl7ImA9WhZQEUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1685/comments/full/8</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">Well, I don't think we should fix this in the validator.

I filed the issue so that the compiler/binutils team does not forget to fix this :-)

These are definitely the standard TLS access patterns together with alignment NOPs, and we handle those specially in binutils already. I think it's time to revise all the related code and fix the compiler/binutils to produce valid patterns and to enable TLS models rewrites.

Roland, am I right that we actually can replace that extra prefix with NOPs? Or we'll have a problem with recognizing such a sequence?
</ns0:content><ns0:updated>2011-04-18T19:41:50.000Z</ns0:updated><ns0:published>2011-04-18T19:41:50.000Z</ns0:published><ns2:updates /><ns0:title>Comment 8 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1685#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1685/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>