<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4FR347eCl7ImA9WhZQEUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1685/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">This is the standard GD sequence from the TLS x86 ABI.  The extraneous prefixes are there to provide padding for the case when the linker determines it can rewrite the sequence into IE model.  (For example, if this file is compiled as PIC but then linked into the main program rather than a DSO.)

One option would be for the nacl linker to replace the extraneous prefixes with distinct nop instructions.  But I think these sequences were chosen because they perform better than separate nops.  Moreover, it is IMHO highly desireable to avoid nacl-specific changes to the linker whenever possible.

I think the best solution here is to relax the validator's constraint on extraneous prefixes to accept known-harmless cases such as this.</ns0:content><ns0:updated>2011-04-18T16:41:56.000Z</ns0:updated><ns0:published>2011-04-18T16:41:56.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1685#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1685/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>