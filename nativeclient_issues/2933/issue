<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0AEQ347eCl7ImA9WhNTFE4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2933</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Currently user code's TLS value may be fetched into rN by doing:

  mov rN, r9

I propose that we change this to:

  ldr rN, [r9]

and disallow other uses of r9.

This gives us room to use other indexes from r9 in future.  In particular:

1) r9 can point into NaClAppThread/NaClThreadContext, allowing us to do an untrusted-&amp;gt;trusted context switch without having to rely on the host OS's TLS facilities.  This is similar to how %gs now points into NaClAppThread on x86-32.

Currently nacl_syscall.S relies on __aeabi_read_tp.  We rely on __aeabi_read_tp not to use the stack or clobber any registers apart from r0.  This is a very strict constraint, which may not be available to NaCl on ARM Windows (if we ever want to run ARM NaCl on Windows).  ARM Windows might be like Mac OS X and not offer stable TLS facilities that we can use in nacl_syscall.S.

2) The IRT's TLS pointer could be fetched using:

   ldr rN, [r9, #4]
</ns0:content><ns0:updated>2012-10-17T02:08:22.000Z</ns0:updated><ns0:published>2012-07-31T02:57:55.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/109286297231979736865/</ns2:uri><ns2:username>mcgra...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/102292187274959663599/</ns2:uri><ns2:username>jvo...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/104270846665912603141/</ns2:uri><ns2:username>dsch...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/116152729282206039235/</ns2:uri><ns2:username>j...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>ARM: Consider using "ldr rN, [r9]" for fetching the user thread pointer</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-Linux</ns2:label><ns2:label>Arch-ARM</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2933/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2933" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2933" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2012-10-17T02:08:22.000Z</ns2:closedDate><ns2:id>2933</ns2:id></ns0:entry>