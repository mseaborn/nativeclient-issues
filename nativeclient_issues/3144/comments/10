<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0ECRH47eCl7ImA9WhNXFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3144/comments/full/10</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">No, hence "Pri-3".  The mitigations are quite low priority.  We haven't done any similar mitigation for x86-32 yet (issue 2397), and x86-32 is a more important platform.  Also, the x86-32 version is more exposed: untrusted code can set %esp out of range and fault.  For ARM, untrusted code can't set sp out of range and fault; the bug can only be triggered by an async signal, and currently there's no way for untrusted code to trigger an async signal.</ns0:content><ns0:updated>2012-12-04T19:34:25.000Z</ns0:updated><ns0:published>2012-12-04T19:34:25.000Z</ns0:published><ns2:updates /><ns0:title>Comment 10 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3144#c10" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3144/comments/full/10" rel="self" type="application/atom+xml" /></ns0:entry>