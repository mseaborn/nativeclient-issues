<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0YCRX47eCl7ImA9WhNXFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3144/comments/full/8</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">I won't mark as "Won't Fix" because we could still apply mitigations -- such as randomising the location of the sigaltstack() (more than Linux normally randomises) -- but I will change the labelling.

I think the change I made to longjmp() was useful because it reduces the exposure of this issue to PNaCl apps, and we might make further similar changes in the future.</ns0:content><ns0:updated>2012-12-04T19:26:04.000Z</ns0:updated><ns0:published>2012-12-04T19:26:04.000Z</ns0:published><ns2:updates>
			<ns2:label>-Pri-1</ns2:label><ns2:label>-Component-TCB-Validator</ns2:label><ns2:label>-ARMABI</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-Linux</ns2:label><ns2:summary>ARM: Temporary "sp &gt; 1GB" condition can cause out-of-stack in Linux signal handler</ns2:summary><ns2:ccUpdate>-kschi...@google.com</ns2:ccUpdate><ns2:ccUpdate>-jvo...@google.com</ns2:ccUpdate><ns2:ccUpdate>-dsch...@google.com</ns2:ccUpdate><ns2:ccUpdate>-s...@google.com</ns2:ccUpdate><ns2:ccUpdate>-b...@google.com</ns2:ccUpdate><ns2:ccUpdate>-mcgra...@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 8 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3144#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3144/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>