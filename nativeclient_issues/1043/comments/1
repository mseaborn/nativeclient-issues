<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkMHRX47eCl7ImA9Wx5UEUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1043/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Despite this misleading comment in nacl_syscall_common.c --
  /* we do not enforce stack alignment, just check for validity */
-- sel_ldr *does* enforce stack alignment at thread_create() time.
As the warning suggests, the stack pointer gets changed.
This happens in NaClCreateAdditionalThread() in sel_ldr_standard.c.

It is kind of annoying that sel_ldr provides a facility that we don't
actually want to use because it causes an overly verbose warning.

In glibc, the alignment used to be forced in the child thread, in
sysdeps/unix/sysv/linux/i386/clone.S, which we are not using.

I am reluctant to fix this in glibc because it involves arch-specific
code: the offset needed from 16 byte alignment is different on x86-32
(32-bit return address) and x86-64 (64-bit return address).</ns0:content><ns0:updated>2010-10-15T16:33:54.000Z</ns0:updated><ns0:published>2010-10-15T16:33:54.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1043#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1043/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>