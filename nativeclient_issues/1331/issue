<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUcCQn47eCl7ImA9Wx9UGUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1331</ns0:id><ns0:author>
			<ns0:name>kschi...@google.com</ns0:name><ns0:uri>/u/108470876877739532758/</ns0:uri></ns0:author><ns0:content type="html">&lt;b&gt;[Please summarize the enhancement so it will be comprehensible to someone&lt;/b&gt;
&lt;b&gt;from outside the Native Client team. A good summary will include:]&lt;/b&gt;

&lt;b&gt;- Where are we today?&lt;/b&gt;
The current implementation of the trie uses nodes an array indexed by the matched byte. It generates 96 such nodes. This results in 197K of memory to model the trie nodes.

&lt;b&gt;- Why is this a problem?&lt;/b&gt;

The trie is very sparse, and can be represented using the same number of nodes, but the nodes only have a success/fail edge. If we switched to the simplier representation, that 197k would be dropped to just a little over 2k (194k savings).

&lt;b&gt;- The proposed enhancement:&lt;/b&gt;

Change the representation of trie nodes to use success/fail edges.

&lt;b&gt;- Exit criteria:&lt;/b&gt;

The tests in testdata/64/ncdis_iter_test.input tests all possible combinations of instructions defined by trie nodes. If these instructions continue to work, it should show that the change in representation did not effect the ability of the validator to recognize such instructions.

&lt;b&gt;- Anticipated impact:&lt;/b&gt;

197k of memory will be saved. The number of trie node compares, per instruction matched should only go up by 2. This added cost should be negligible.</ns0:content><ns0:updated>2011-02-17T22:51:03.000Z</ns0:updated><ns0:published>2011-01-20T00:23:25.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Remove wasted space in the way the x86-64 bit validator represents trie of nop sequences</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Milestone-Baltic-Sea</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1331/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1331" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1331" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-01-24T20:54:59.000Z</ns2:closedDate><ns2:id>1331</ns2:id></ns0:entry>