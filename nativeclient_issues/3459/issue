<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkcMQn47eCl7ImA9WhFTEE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3459</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">I'm splitting this out from issue 3434.  We are disallowing the llvm.*.with.overflow.* intrinsics because they use struct types.  However, we'd still like to provide access to efficient integer arithmetic overflow checks.

We should implement option 2 from issue 3434, which is to provide intrinsics like this:

  declare i1 @llvm.nacl.sadd.overflows.i32(i32 %a, i32 %b)
  declare i1 @llvm.nacl.umul.overflows.i64(i64 %a, i64 %b)
  etc.
</ns0:content><ns0:updated>2013-05-31T18:14:43.000Z</ns0:updated><ns0:published>2013-05-29T02:41:51.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:state>open</ns2:state><ns0:title>PNaCl: Add intrinsics for detecting integer arithmetic overflow</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>PNaClABI</ns2:label><ns2:label>Performance</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3459/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3459" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3459" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3459</ns2:id></ns0:entry>