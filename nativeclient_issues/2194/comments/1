<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkYBRX47eCl7ImA9WhdXE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2194/comments/full/1</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">as i understand it, the loadend event never gets delivered if there are problems w/ the nexe, whether it is with the nexe itself (e.g., validation), or with startup resource allocation.

we should add events for all detectable errors.  for some, e.g., code for which the dynamic loader never finishes loading (maybe the web site hosting the shared library is very slow, as opposed to refusing connections, not responding, or returning an error) or for which an event handler takes too long, it's less clear what we should do.  if the site hosting the shared library is just being very slow, we shouldn't do anything except perhaps to ensure that progress indications faithfully report this (though informing the user so proper blame attribution is harder than just a progress bar).  in any case, for the latter i think the web page author could register a timeout event that can fire if the loadend event takes too long -- this is something we can do in our JavaScript example code, and is completely orthogonal to anything else that we might do in the plugin or in the service runtime.</ns0:content><ns0:updated>2011-08-26T00:22:34.000Z</ns0:updated><ns0:published>2011-08-26T00:22:34.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2194#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2194/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>