<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4NSH47eCl7ImA9Wx5aFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1167/comments/full/5</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Assuming int3 is the only instruction you have that won't validate, this is the same as issue 645.

You can use ncval_annotate.py to show the instruction that was rejected plus the source code line it came from.  "VALIDATOR: bafa3: Illegal instruction" gives the address of the instruction which doesn't help.

You could change "int3" to "hlt" in the source; "hlt" is allowed by the validator.  Alternatively, you can run the executable through the tool ncval_stubout, which replaces disallowed instructions with HLTs.

If ncval_annotate or ncval_stubout aren't included in the SDK, that ought to be fixed.</ns0:content><ns0:updated>2010-11-13T10:43:19.000Z</ns0:updated><ns0:published>2010-11-13T10:43:19.000Z</ns0:published><ns2:updates>
			<ns2:status>Duplicate</ns2:status><ns2:mergedIntoUpdate>645</ns2:mergedIntoUpdate></ns2:updates><ns0:title>Comment 5 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1167#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1167/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>