<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0YHRn47eCl7ImA9Wx5bEko.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1042</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">run_thread_test currently fails (non-deterministically) partly because
nacl-glibc's malloc() implementation assumes that mprotect() is
implemented, which it isn't (issue 895).

This occurs in the multi-threaded case: arena.c attempts to allocate a
heap for a thread, initially mapped with PROT_NONE, with pages later
made accessible with mprotect().

When this fails, malloc() fails with ENOSYS.  This causes the
assertion &amp;quot;assert (errno == ENOMEM);&amp;quot; in glibc's allocatestack.c to
fail.

malloc() also attempts to use mremap(), which is also not implemented,
but I think this case has a fallback.</ns0:content><ns0:updated>2010-10-28T13:05:37.000Z</ns0:updated><ns0:published>2010-10-15T12:04:50.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>nacl-glibc: malloc() implementation currently attempts to use mprotect()</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Component-GLibC</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1042/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1042" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1042" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2010-10-28T13:05:37.000Z</ns2:closedDate><ns2:id>1042</ns2:id></ns0:entry>