<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEYAQn47eCl7ImA9WhdUFkg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2293/comments/full/7</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">I am not so sure about whether the copy elision performed by gcc is legit.

Strangely, I could neither talk gcc out of the optimization  (-00) nor clang into
it (-felide-constructors')

My concern is that gcc avoids the copy of and object with a visible side
effect. I am not a language lawyer, though. Maybe we should run it by one.</ns0:content><ns0:updated>2011-10-03T15:35:43.000Z</ns0:updated><ns0:published>2011-10-03T15:35:43.000Z</ns0:published><ns2:updates /><ns0:title>Comment 7 by robertm@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2293#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2293/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>