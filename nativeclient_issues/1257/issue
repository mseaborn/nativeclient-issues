<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEUBSX47eCl7ImA9WhVTFUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1257</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">NaClInstIterCreate{,WithLookBack} mallocs and uses returned pointer w/o checking that it is non-NULL.  probable result when in out-of-memory situation is immediate segfault, but it would be nice if the service runtime can report failure (and ENOMEM) to untrusted code when the untrusted code tries to dynamically modify dynamic code.

This error propagation applies to (pending CL) NaClValidateSegmentPair, and thus to NaClValidateCodeReplacement, NaClTextSysDynCode_Modify, etc.</ns0:content><ns0:updated>2012-02-29T22:57:38.000Z</ns0:updated><ns0:published>2010-12-15T23:15:35.000Z</ns0:published><ns2:status>Started</ns2:status><ns2:owner>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>malloc not checked in validator</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:label>Mstone-19</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1257/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1257" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1257" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>1257</ns2:id></ns0:entry>