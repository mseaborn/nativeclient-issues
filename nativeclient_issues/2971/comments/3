<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CE4HSH47eCl7ImA9WhJWEk8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2971/comments/full/3</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">I don't want to consider any of the innovations in the next-generation toolchain work to be entirely cooked yet, even if they are upstream somewhere.  Until we get ready to roll out the whole new regime, I think you should just stick with what works with the existing toolchains already, even if it's something deprecated like EI_OSABI.

The marker is an allocated ELF note (thus findable inside a PT_NOTE segment, but you can't assume it's the first or only note in the segment) with vendor string "NaCl".
So far I've used type 1, and description being the string "x86-32" or "arm", etc.
The tentative idea is that the type number might indicate different sandbox ABI versions in the future, but that might be encoded in the description string instead.
This is not generated by any built-in magic, but just by the compilers always feeding the assembler a prelude file (which also defines standard assembler macros) that defines a .note.NaCl.ABI.&lt;arch&gt; SHT_NOTE section in a COMDAT group of the same name.</ns0:content><ns0:updated>2012-08-17T17:02:19.000Z</ns0:updated><ns0:published>2012-08-17T17:02:19.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2971#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2971/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>