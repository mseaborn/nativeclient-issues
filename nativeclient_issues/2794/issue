<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C04GQH47eCl7ImA9WhVUE0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2794</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">In nacl-newlib's libpthread, creating a thread using pthread_attr_setdetachstate() and PTHREAD_CREATE_DETACHED appears to leak a condvar descriptor, because nc_tdb_init() creates the condvar descriptor via nc_pthread_condvar_ctor() and it never gets freed.

pthread_detach() does not have this problem because it calls nc_release_basic_data_mu().
</ns0:content><ns0:updated>2012-05-19T01:45:21.000Z</ns0:updated><ns0:published>2012-05-19T01:45:21.000Z</ns0:published><ns2:status>New</ns2:status><ns2:state>open</ns2:state><ns0:title>nacl-newlib pthreads: Using PTHREAD_CREATE_DETACHED leaks a condvar</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-Newlib</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2794/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2794" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2794" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2794</ns2:id></ns0:entry>