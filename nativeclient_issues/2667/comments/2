<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUEER347eCl7ImA9WhVSGU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2667/comments/full/2</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">Hmm, I wonder if this has nothing to do with 32-bitness, now that the 64-bit windows machine finished and also failed.

It may be because the toolchain buildbot for 32-bit mac, 32-bit linux, and windows all pull in a DEPs'ed in version of the translator, whereas the 64-bit linux builder builds its own translator, and there is some version skew from that?  The unsandboxed chrome browser tests work because it just uses the freshly built unsandboxed toolchain.

Will wait for a DEPs roll before looking into it more, but for now, I will try to go on the bot and save the pexes generated with the presumably-new frontend, and run it on an old backend from my machine.</ns0:content><ns0:updated>2012-03-16T22:40:06.000Z</ns0:updated><ns0:published>2012-03-16T22:40:06.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2667#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2667/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>