<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkMGQ347eCl7ImA9WhRTEUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2181</ns0:id><ns0:author>
			<ns0:name>elijahtaylor@google.com</ns0:name><ns0:uri>/u/elijahtaylor@google.com/</ns0:uri></ns0:author><ns0:content type="html">Current GC instrumentation with --finstrument-for-thread-suspension is slow (up to 50% overhead).

GC suspension needs to be inlined in order to be improved substantially.  As an example, the code sequence I hacked up a long time ago in Mono is below (in my prototype I wrapped main so I could move the stack area down and reserve space for a known address: 0x3fff0000 and 0xffff0000 were known addresses above the stack area for &amp;quot;suspend&amp;quot; flag).  This will need to be something that will work with glibc/DSOs as well.

x86:
testl $0xffffffff,0x3fff0000
je label
naclcall __nacl_suspend_thread_if_needed
label:

x86-64:
mov $0xffff0000,%r11d
mov (%r15,%r11,1)%r11d
test $0xffffffff,%r11d
je label
naclcall __nacl_suspend_thread_if_needed
label:

The above instrumentation yielded slowdowns of less than 10% on x86-64 compared to no instrumentation.
</ns0:content><ns0:updated>2011-11-01T12:27:02.000Z</ns0:updated><ns0:published>2011-08-23T22:28:43.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/110304265766688778552/</ns2:uri><ns2:username>bradc...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/elijahtaylor@google.com/</ns2:uri><ns2:username>elijahtaylor@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/103360015124260446450/</ns2:uri><ns2:username>eaelt...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>GC instrumentation is slow</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-GCC</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>CoreRuntime</ns2:label><ns2:label>Mstone-17</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2181/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2181" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2181" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2011-11-01T12:27:02.000Z</ns2:closedDate><ns2:id>2181</ns2:id></ns0:entry>