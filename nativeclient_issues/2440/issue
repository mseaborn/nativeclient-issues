<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0cESH47eCl7ImA9WhRQGUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2440</ns0:id><ns0:author>
			<ns0:name>s...@google.com</ns0:name><ns0:uri>/u/108394971971967673680/</ns0:uri></ns0:author><ns0:content type="html">In the current scheme the coordinator builds command lines and passes arguments and descriptors to the nexes according to a baked-in scheme.
This is not very flexible for a dogfood, as it requires new chrome releases to change the coordinator.

We should change the coordinator to use a manifest file that contains, among other things, the command lines to be used by llc.nexe and ld.nexe.  The SRPC service implemented by llc would look like:

&amp;quot;StartLookupService:C:&amp;quot;
    // Establishes a reverse channel for looking up handles
&amp;quot;Run:C:iss&amp;quot;
    // Does the compilation.  The input sets the text command line for
    // this module to the input argument.
    // This is a NUL (\0) separated list of argv entries.
    // The returns are:
    //     a boolean to indicate whether we are translating a shared lib.
    //     the soname of the shared lib.
    //     a NUL-separated list of library dependencies.

llc communicates with the plugin through the reverse direction of a bidirectional SRPC channel.  The service exported there is:

&amp;quot;LookupInputFile:s:hi&amp;quot;
    // Returns the descriptor and size for the filename passed in.
&amp;quot;RememberOutputFile:shi:&amp;quot;
    // Adds an association between the filename and the descriptor/size.

Similarly to llc, ld will implement a simple interface like:

&amp;quot;StartLookupService:C:&amp;quot;
    // Establishes a reverse channel for looking up handles
&amp;quot;Run:Ciss&amp;quot;
    // Links the translated object file.  The arguments are:
    // The command line for this module to the input argument.
    // A boolean to indicate whether we are translating a shared lib.
    // The soname of the shared lib.
    // A NUL-separated list of library dependencies.

ld will also use the coordinator's lookup service.
</ns0:content><ns0:updated>2011-12-15T14:56:49.000Z</ns0:updated><ns0:published>2011-11-14T20:46:30.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Move translator command-line parsing to llc and ld</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2440/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2440" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2440" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-12-15T14:56:49.000Z</ns2:closedDate><ns2:id>2440</ns2:id></ns0:entry>