<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEYAQ347eCl7ImA9WhVTEU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/704</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">In issue 690, Bennet pointed out another way in which IMC sockets
differ between platforms:

  &amp;quot;the what's-your-pid protocol in the imc sendmsg/recvmsg code for
  getting the peer pid for the duplicatehandle needs to move to the
  connect, and the pids remembered for subsequent use.  the windows
  implementation essentially requires a rendezvous and does not permit
  queuing of messages, making simultaneous send and receives
  impossible for yet another reason.&amp;quot;

On Linux and Mac OS X, imc_sendmsg() will not block even if there is
currently no receiver, unless the socket's buffer is full.  So it
should not block on a newly-created socket.

On Windows, imc_sendmsg() will block if there is no receiver (i.e. no
process/thread doing a corresponding imc_recvmsg()) and if the sendmsg
involves sending Windows handles.  This will be true for some kinds of
NaCl FD (file FDs), but not all (SocketAddress FDs).
</ns0:content><ns0:updated>2012-02-24T17:55:42.000Z</ns0:updated><ns0:published>2010-07-16T10:04:38.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>imc_sendmsg() with handles blocks on Windows but not Linux/Mac</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>PlatformDifference</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>Component-IRT</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/704/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=704" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/704" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>704</ns2:id></ns0:entry>