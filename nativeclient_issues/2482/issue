<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkMFRX47eCl7ImA9WhRQGU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2482</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">Demonstrate with (from native_client/):

toolchain/linux_x86/bin/x86_64-nacl-gcc -shared -fPIC foo.c -Wl,-soname=libfoo.so -o libfoo.so
toolchain/linux_x86/bin/x86_64-nacl-gcc main.c -L. -lfoo -o main.nexe
./run.py -L. main.nexe

Output is:

test1
test3
Counter is 2

---- main.c -----------------------------------------------

#include &amp;lt;stdio.h&amp;gt;

extern int get_counter(void);

int main() {
  printf(&amp;quot;Counter is %d&amp;quot;, get_counter());
  return 0;
}
---- foo.c -----------------------------------------------
#include &amp;lt;stdio.h&amp;gt;

int counter;
int get_counter(void) { return counter; }

typedef void (*funcptr)(void);

void test1(void) { printf(&amp;quot;test1\n&amp;quot;); counter++; }
void test2(void) { printf(&amp;quot;test2\n&amp;quot;); counter++; }
void test3(void) { printf(&amp;quot;test3\n&amp;quot;); counter++; }
void test4(void) { printf(&amp;quot;test4\n&amp;quot;); counter++; }

#define ATTR __attribute__ ((__used__, section(&amp;quot;.init_array&amp;quot;)))
static funcptr entry1[] ATTR = { test1 };
static funcptr entry2[] ATTR = { test2 };
static funcptr entry3[] ATTR = { test3 };
static funcptr entry4[] ATTR = { test4 };

</ns0:content><ns0:updated>2011-12-14T22:06:54.000Z</ns0:updated><ns0:published>2011-12-09T20:25:54.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/109286297231979736865/</ns2:uri><ns2:username>mcgra...@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/112856509894568708731/</ns2:uri><ns2:username>halya...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Dynamic loader skips alternating init_array entries in shared objects on X86-64</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2482/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2482" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2482" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>1096</ns2:id></ns2:blocking><ns2:closedDate>2011-12-14T22:06:54.000Z</ns2:closedDate><ns2:id>2482</ns2:id></ns0:entry>