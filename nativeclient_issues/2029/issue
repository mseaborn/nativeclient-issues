<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkcEQ347eCl7ImA9WhdRFEU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2029</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The function of zero_extends.c is to whitelist instructions that can be used as 32-bit masking instructions before memory accesses.

However, zero_extends.c contains a number of entries that are not actually allowed for this purpose.  These entries could be removed.  This would make reviewing the code easier.

For example:

  InstCmpxchg,        /* 0F B1 */

Allowing cmpxchg before a memory access is not safe, and fortunately the validator does not allow this.

However, suppose I make the following change:

--- a/src/native_client/src/trusted/validator_x86/ncdecode_OF.c
+++ b/src/native_client/src/trusted/validator_x86/ncdecode_OF.c
@@ -257,7 +257,7 @@ void NaClDef0FInsts(struct NaClSymbolTable* st) {
-  NaClDefine(&amp;quot;     0fb1:     Cmpxchg {$rAXv}, $Ev, $Gv&amp;quot;,
+  NaClDefine(&amp;quot;     0fb1:     Cmpxchg $Ev, $Gv, {$rAXv}&amp;quot;,

(The '{}' indicates an implicit argument.  It's not clear to me whether the relative positioning of the implicit arguments is supposed to be significant.)

As a result, the validator will allow the following unsafe sequence (which permits an exploit similar to issue 2010), but no test cases fail:

      cmpxchg %ebx, %ecx
      mov %rdx, (%r15, %rcx)

This is because NaClAssignsRegisterWithZeroExtends() checks the first operand, and the validator's operand list includes implicit operands like '{$rAXv}'.

The list in zero_extends.c is therefore not robust against refactoring in ncdecode_OF.c.  InstCmpxchg ought to be removed from the list in zero_extends.c.
</ns0:content><ns0:updated>2011-08-04T17:46:42.000Z</ns0:updated><ns0:published>2011-07-14T18:05:13.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>x86-64 validator: zero_extends.c contains unneeded entries</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>Mstone-15</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2029/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2029" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2029" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-08-04T17:46:42.000Z</ns2:closedDate><ns2:id>2029</ns2:id></ns0:entry>