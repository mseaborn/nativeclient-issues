<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CE8NQ347eCl7ImA9WxVVFks.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/46/comments/full/2</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105678638446503189415/</ns0:uri></ns0:author><ns0:content type="html">this is primarily a documentation error.  the same origin policy is the same as that
specified in

https://developer.mozilla.org/En/Same_origin_policy_for_JavaScript

so the origin is considered the same if the protospec, hostname, and port triple are
identical, after canonicalization.  so since the HTML page is loaded from localhost,
any file on the local machine is accessible.

as for fetching but not making the contents of an arbitrary URL available, this
essentially gives the attacker the same power as she/he already had via HTML and
JavaScript:  by using an &lt;IMG SRC="..."&gt; tag, a web page can cause a fetch to an
arbitrary URL to occur, including sending cookies to that site (if any); however, the
data fetched is inaccessible.  similarly, by scripting the IMG tag, JavaScript code
can cause an unbounded number of fetches, at least until the user surfs away from the
page.</ns0:content><ns0:updated>2009-03-10T05:28:12.000Z</ns0:updated><ns0:published>2009-03-10T05:28:12.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=46#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/46/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>