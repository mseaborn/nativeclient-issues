<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0QFQX47eCl7ImA9WhdRGU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2131/comments/full/11</ns0:id><ns0:author>
			<ns0:name>erik...@chromium.org</ns0:name><ns0:uri>/u/104389777848534510881/</ns0:uri></ns0:author><ns0:content type="html">I think that this is likely being caused by dlls loading at their (scattered) preferred addresses in a way that's not leaving a 1GB gap in the address space.  This could be because of externally injected dlls when someone has a lot of random crap installed on their system (many windows programs inject dlls into every other process).

Chatting with cpu about this, he suggested two ideas to deal with this:
- Turn the soft failure into a crash dump, then we could find out what's been loaded into the process and get an idea about its address space layout
- When we create the process, we can use VirtualAllocEx to pre-allocate 1GB of RAM from the parent process.  This should be possible before any code runs.

However, Mark Seaborn recently started seeing this on his virtual machine and believes this to be a recent regression as the original reporter describes.  If that's the case, then perhaps it's not third party dlls to blame.  It could be something odd like chrome.dll getting large enough that it's affecting the available contiguous address space.  Since Mark appears to have a repro case, he's going to try to get a crash dump of the process and we'll get a bit more info.

In the meantime, if somebody else would like to take a swing at Carlos' VirtualAllocEx idea, we could get a build to Mark to see if it fixes his repro case.</ns0:content><ns0:updated>2011-08-09T23:08:30.000Z</ns0:updated><ns0:published>2011-08-09T23:08:30.000Z</ns0:published><ns2:updates>
			<ns2:ownerUpdate>mseaborn@chromium.org</ns2:ownerUpdate><ns2:ccUpdate>cpu@chromium.org</ns2:ccUpdate><ns2:ccUpdate>noelal...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 11 by erik...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2131#c11" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2131/comments/full/11" rel="self" type="application/atom+xml" /></ns0:entry>