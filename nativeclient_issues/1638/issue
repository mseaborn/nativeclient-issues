<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0QER347eCl7ImA9WhZRGEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1638</ns0:id><ns0:author>
			<ns0:name>euge...@google.com</ns0:name><ns0:uri>/u/101600367715055138223/</ns0:uri></ns0:author><ns0:content type="html">__nacl_futex_wait can return without removing the current thread from waiters_list. This can happen, for instance, in the case of a spurious wakeup from condvar_wait. On the next call to __nacl_futex_wait from the same thread, it will be added to waiters_list again, completely messing it up. This is usually visible as an infinite loop in nacl_futex_wake_nolock.

Note that by removing the current thread from the waiters list on a spurious wake up we risk missing the real wake up. It seems that the right way to do this is to leave it there and add a check to the beginning of __nacl_futex_wait to prevent adding it the second time.</ns0:content><ns0:updated>2011-04-15T18:15:06.000Z</ns0:updated><ns0:published>2011-04-11T07:47:23.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/103360015124260446450/</ns2:uri><ns2:username>eaelt...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/112856509894568708731/</ns2:uri><ns2:username>halya...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/114701340294105671768/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/114422503853293445745/</ns2:uri><ns2:username>dvyu...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>GLibC futex emulation does not handle spurious wakeup correctly</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-Linux</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>Milestone-Baltic-Brill</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1638/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1638" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1638" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2011-04-15T18:15:06.000Z</ns2:closedDate><ns2:id>1638</ns2:id></ns0:entry>