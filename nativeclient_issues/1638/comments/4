<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4GQX47eCl7ImA9WhZRFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1638/comments/full/4</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">Good catch.

Futex interface absolute DOES allow spurious wakeups. It's responsibility of the caller to check the condition and sleep again if the wakeup is indeed spurious.

It's the only possible interface, actually: there inherited race between time where thread is waken up and time where userspace has a chance to react - userspace must cope.

Let's discuss how can we do that safely when I'll be in office.</ns0:content><ns0:updated>2011-04-11T09:42:00.000Z</ns0:updated><ns0:published>2011-04-11T09:42:00.000Z</ns0:published><ns2:updates /><ns0:title>Comment 4 by k...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1638#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1638/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>