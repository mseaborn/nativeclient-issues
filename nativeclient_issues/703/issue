<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEYAQ347eCl7ImA9WhVTEU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/703</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">This is another way in which IMC sockets differ between platforms.  I
introduced it in issue 344 (r2697).

In the new implementation of imc_accept()/imc_connect() (enabled on
Mac OS X so far), the following will not block:

  boundsock_fd, sockaddr_fd = imc_makeboundsock()
  close(sockaddr_fd)
  imc_accept(boundsock_fd)

The implementation knows that sockaddr_fd has been dropped and
imc_accept() can return EOF (as errno=EIO).

However, in the old implementation (on Windows and currently on Linux
too), sockaddr_fd is implemented using a string token and so
boundsock_fd can't detect when sockaddr_fd has been dropped.

This is tested in tests/imc_sockets.  See
test_imc_accept_end_of_stream().

I could have removed the platform difference by making imc_accept()
block forever if it detected an EOF internally, but that seemed
perverse.
</ns0:content><ns0:updated>2012-02-24T17:55:42.000Z</ns0:updated><ns0:published>2010-07-16T09:42:40.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>imc_accept() can return an EOF on Mac/Linux but not on Windows</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>PlatformDifference</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>Component-IRT</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/703/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=703" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/703" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>703</ns2:id></ns0:entry>