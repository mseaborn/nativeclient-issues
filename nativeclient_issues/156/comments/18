<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0EHQ347eCl7ImA9WhZQGEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/156/comments/full/18</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">For future reference, the meaning of an ET_DYN object is that its first PT_LOAD segment can be loaded anywhere, regardless of the p_vaddr value.  The only constraint is that the runtime distance between the address at which PT_LOADs are loaded match the distance between their respective p_vaddr values in the file.

Normally an ET_DYN file has a nonzero starting PT_LOAD only when it has been prelinked.  This means that this address is the preferred loading address (and hence runtime relocation will be far more efficient if that one is used), but there is no hard constraint on where the kernel/loader decides to put it (except for the page alignment, of course).

The Right Answer is to make sel_ldr behave just like other ELF loaders do with ET_DYN objects: load at whatever address it chooses (maintaining the distance between PT_LOAD segments), with the first PT_LOAD's p_vaddr being 0 indicating there is no preference whatsoever expressed statically (system chooses as it likes) and that being nonzero indicating it would be optimal to use that address if that is otherwise acceptable to the system.  An ET_DYN object loaded by the system loader (i.e. ld.so or a PIE) itself copes directly with finding itself at whatever address at runtime, and does not expect the system to do anything to relocate it or inform it.</ns0:content><ns0:updated>2011-04-26T23:13:52.000Z</ns0:updated><ns0:published>2011-04-26T23:13:52.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>mcgra...@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 18 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=156#c18" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/156/comments/full/18" rel="self" type="application/atom+xml" /></ns0:entry>