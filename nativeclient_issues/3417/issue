<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A08CQX47eCl7ImA9WhBUFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3417</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">&amp;quot;The &#8216;unreachable&#8216; instruction has no defined semantics. This instruction is used to inform the optimizer that a particular portion of the code is not reachable. This can be used to indicate that the code after a no-return function cannot be reached, and other facts.&amp;quot;

We want to have fewer undefined behaviors in the bitcode, so that the code is consistent across platforms.  We can convert them to trap after optimizations have been run.</ns0:content><ns0:updated>2013-05-02T18:37:40.000Z</ns0:updated><ns0:published>2013-04-30T22:18:21.000Z</ns0:published><ns2:status>New</ns2:status><ns2:cc>
			<ns2:uri>/u/dschuff@chromium.org/</ns2:uri><ns2:username>dschuff@chromium.org</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>PNaCl: Make reaching "unreachable" LLVM instructions trap (rather than be undefined)</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-29</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>PNaClABI</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3417/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3417" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3417" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:id>3417</ns2:id></ns0:entry>