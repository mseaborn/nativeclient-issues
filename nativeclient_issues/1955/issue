<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkQCSX47eCl7ImA9WhdSGEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1955</ns0:id><ns0:author>
			<ns0:name>mseaborn%chromium.org@gtempaccount.com</ns0:name><ns0:uri>/u/mseaborn%25chromium.org@gtempaccount.com/</ns0:uri></ns0:author><ns0:content type="html">The x86-32 validator currently requires that CALL instructions are aligned so that they end at an instruction bundle boundary.

This is a linting measure only:  Normally the toolchain must ensure that CALL-ends are bundle-aligned so that the return address that is pushed onto the stack is bundle aligned.  Otherwise, returning from the function call will go wrong.

However, the validator is not supposed to be a linter.  A lint mode might be useful but should not normally be enforced.

This validator restriction should be dropped because unaligned CALLs are not unsafe.

There is a legitimate use for unaligned CALLs, as described in issue 229.  CALL can be used only for its ability to push %eip onto the stack.  gcc can use this in PIC code.  This is more compact than gcc's get_pc_thunk code, and probably not slower if NaCl's avoidance of RET defeats return prediction.</ns0:content><ns0:updated>2011-07-29T00:12:48.000Z</ns0:updated><ns0:published>2011-06-27T17:16:55.000Z</ns0:published><ns2:status>New</ns2:status><ns2:cc>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>x86 validator's requirement that CALLs be aligned is unnecessarily restrictive</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1955/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1955" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1955" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>2048</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:id>1955</ns2:id></ns0:entry>