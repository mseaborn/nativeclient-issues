<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkQBQX47eCl7ImA9WxVWFk0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/23</ns0:id><ns0:author>
			<ns0:name>defend.t...@gmail.com</ns0:name><ns0:uri>/u/108455829539447697631/</ns0:uri></ns0:author><ns0:content type="html">There's an inner sandbox breakout. Apologies for not listing the versions,
i'm on my way out the door. I tested this on mac os x using the latest and
greatest versions.


When checking calls the disassembler fails to check for memory dereferences. 


  andl $0xffffffe0, %edx\n
  call *(%edx)

vs

  andl $0xffffffe0, %edx\n
  call %edx

Suggested fix:

static void ValidateIndirect5(const struct NCDecoderState *mstate) {

    if (jmpopcode[0] != 0xff) break;
    if ((modrm_reg(mrm) != 2) &amp;amp;&amp;amp; (modrm_reg(mrm) != 4)) break;
+    if ((modrm_mod(mrm)) break;
    if (targetreg == kReg_ESP) break;



I've attached the nexe demonstrating this. hownow() code gets executed @
+0x10461</ns0:content><ns0:updated>2009-02-25T23:25:50.000Z</ns0:updated><ns0:published>2008-12-11T18:30:13.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/108782782163151845439/</ns2:uri><ns2:username>bradc...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Inner Sandbox Escape (call memory dereference)</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-0</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/23/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=23" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/23" rel="self" type="application/atom+xml" /><ns2:stars>6</ns2:stars><ns2:closedDate>2009-02-25T23:25:50.000Z</ns2:closedDate><ns2:id>23</ns2:id></ns0:entry>