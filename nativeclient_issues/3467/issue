<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkcBRX47eCl7ImA9WhFTEE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3467</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">In issue 3443, we disallowed LLVM's lifetime.start/end intrinsics for PNaCl's stable ABI.  This means we don't get the benefit of the StackColoring backend pass, which merges stack slots.  This reduces stack frame size, which reduces memory pressure and reduces the chance of overflowing the stack.

We could get back this benefit by implementing StackColoring as a user-toolchain IR pass.

I expect this will have most benefit in functions that make a lot of varargs calls.  Currently, ExpandVarArgs creates a separate stack slot (alloca) for each varargs call, but the lifetimes of these stack slots are always disjoint.

A quicker-to-implement fix for reducing stack frame size would be to have ExpandVarArgs create one alloca per function instead, although such usage would be harder to optimise for a more general StackColoring pass.
</ns0:content><ns0:updated>2013-05-31T18:14:14.000Z</ns0:updated><ns0:published>2013-05-31T18:14:14.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:state>open</ns2:state><ns0:title>PNaCl: Optimise pexes by merging stack slots ("StackColoring" pass)</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Performance</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3467/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3467" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3467" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3467</ns2:id></ns0:entry>