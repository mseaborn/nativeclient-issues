<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkIBRn47eCl7ImA9WhdbEE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2330/comments/full/10</ns0:id><ns0:author>
			<ns0:name>krasin@google.com</ns0:name><ns0:uri>/u/krasin@google.com/</ns0:uri></ns0:author><ns0:content type="html">"Good" (llvm-gcc) @__newlib_thread_exit:

define void @__newlib_thread_exit() nounwind {
entry:
  %0 = load %struct._reent** @_impure_ptr, align 4
  %1 = call i32 (...)* @_cleanup_r(%struct._reent* %0) nounwind
  br label %return

return:                                           ; preds = %entry
  ret void
}

"Bad" (Clang) @__newlib_thread_exit:

define void @__newlib_thread_exit() nounwind {
entry:
  %0 = load %struct._reent** @_impure_ptr, align 4
  %call = call i32 bitcast (i32 (...)* @_cleanup_r to i32 (%struct._reent*)*)(%struct._reent* %0)
  ret void
}

The significant difference is only in one line.
GCC:
  %1 = call i32 (...)* @_cleanup_r(%struct._reent* %0) nounwind
Clang:
  %call = call i32 bitcast (i32 (...)* @_cleanup_r to i32 (%struct._reent*)*)(%struct._reent* %0)

Will return to this after the break. </ns0:content><ns0:updated>2011-10-07T23:02:37.000Z</ns0:updated><ns0:published>2011-10-07T23:02:37.000Z</ns0:published><ns2:updates /><ns0:title>Comment 10 by krasin@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2330#c10" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2330/comments/full/10" rel="self" type="application/atom+xml" /></ns0:entry>