<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0MCQn47eCl7ImA9WhZbFko.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1553</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">We want our bitcode linking process to detect and report undefined symbols so that our toolchain's linking step acts like a real linker. (especially for &amp;quot;configure&amp;quot;, which uses linker errors to detect the absence of symbols)

However, gold has no &amp;quot;bitcode-linking-only&amp;quot; mode, and must instead complete through native linking to perform symbol resolution.

As a temporary solution, we have driver option --pnacl-bcld-finish which forces the linker to finish, but as a result, wastes computational time.
</ns0:content><ns0:updated>2011-06-21T16:57:43.000Z</ns0:updated><ns0:published>2011-03-18T22:10:44.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/104735739662288482898/</ns2:uri><ns2:username>pdox%goo...@gtempaccount.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Gold needs to finish native linking to detect undefined symbols</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-PNaCl</ns2:label><ns2:label>Milestone-Caviar</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1553/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1553" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1553" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-06-21T16:57:43.000Z</ns2:closedDate><ns2:id>1553</ns2:id></ns0:entry>