<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkUASX47eCl7ImA9WhRVE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2508/comments/full/2</ns0:id><ns0:author>
			<ns0:name>bjornstar</ns0:name><ns0:uri>/u/bjornstar/</ns0:uri></ns0:author><ns0:content type="html">Thanks for replying bradc...@google.com,

Generally, when checking for CPU features, you would ask the CPU what features it supports instead of relying on the existence of a vendor string on the CPU.

Another instance of using vendor strings instead of features is in the Check386CPU function:

static bool Check386CPU() {
  const size_t kCPUID0Length = 12;
  char *cpuversionid;
  int hascpuid = asm_HasCPUID();

  if (!hascpuid) return 0;
  cpuversionid = CPUVersionID();
  if (strncmp(cpuversionid, Intel_CPUID0, kCPUID0Length) == 0) {
    return CheckCPUFeature(CPUFeature_386);
  } else if (strncmp(cpuversionid, AMD_CPUID0, kCPUID0Length) == 0) {
    return CheckCPUFeature(CPUFeature_386);
  } else {
    return 0;
  }
}

This seems to be saying that being 386 compatible means having a CPU vendor string of "GenuineIntel" or "AuthenticAMD"

Why wouldn't you just return the value of CheckCPUFeature(CPUFeature_386)?</ns0:content><ns0:updated>2012-01-11T20:37:28.000Z</ns0:updated><ns0:published>2012-01-11T20:37:28.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by bjornstar</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2508#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2508/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>