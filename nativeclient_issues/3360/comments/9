<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkEBRH47eCl7ImA9WhBVE0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3360/comments/full/9</ns0:id><ns0:author>
			<ns0:name>dschuff@chromium.org</ns0:name><ns0:uri>/u/dschuff@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">In terms of a pass to legalize int types, we may actually want to use it (or a variant) both on the front/middle end and the backend. i16 is not a legal type on ARM (integer ops will need to be promoted and memory ops may need to be expanded), and i64s will need to be expanded on x86-32 and ARM. I'm pretty sure fast isel doesn't support any non-legal types, so we would either have to use an IR pass or augment fast isel directly.
This would be the case regardless of what we do with bitfields in clang. it may actually make sense to do some of both.</ns0:content><ns0:updated>2013-04-19T18:04:15.000Z</ns0:updated><ns0:published>2013-04-19T18:04:15.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by dschuff@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3360#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3360/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>