<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4FQH47eCl7ImA9WhBWEUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3360/comments/full/1</ns0:id><ns0:author>
			<ns0:name>dschuff@chromium.org</ns0:name><ns0:uri>/u/dschuff@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Update:
https://gerrit.chromium.org/gerrit/gitweb?p=native_client/pnacl-llvm.git;a=commit;h=99681c41b0bf46e9973cf4b3ef6d0b792103f29d
prevents instcombine from introducing odd integer sizes, and
https://codereview.chromium.org/13667003
prevents SROA from introducing some as well.
SROA can (and does) still introduce smaller sizes like i24 but these seem to be getting promoted by instcombine and not showing up in the final pexe.

However it seems that clang still does use unusual types at least for bitfields.
e.g. in 930126-1.c from the torture tests:
struct s {
  unsigned long long a:8, b:32;
};
struct s
f(struct s x)
{
  x.b = 0xcdef1234;
  return x;
}

becomes

%struct.s = type { [5 x i8], [3 x i8] }

define void @f(%struct.s* noalias sret %agg.result, %struct.s* byval %x) #0 {
entry:
  %0 = bitcast %struct.s* %x to i40*
  %bf.load = load i40* %0, align 8
  %bf.clear = and i40 %bf.load, 255
  %bf.set = or i40 %bf.clear, -215032384512
  store i40 %bf.set, i40* %0, align 8
  %1 = bitcast %struct.s* %agg.result to i8*
  %2 = bitcast %struct.s* %x to i8*
  call void @llvm.memcpy.p0i8.p0i8.i32(i8* %1, i8* %2, i32 8, i32 8, i1 false)
  ret void
}
</ns0:content><ns0:updated>2013-04-04T22:35:11.000Z</ns0:updated><ns0:published>2013-04-04T22:35:11.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by dschuff@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3360#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3360/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>