<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEEHQn47eCl7ImA9WhdQEUQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1051</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Although x86-32 NaCl works on x86-based Macs, it would be nice to port x86-64 NaCl to OS X:

 * The x86-64 sandbox is said to be faster in some cases, because of the larger number of registers.
 * It would allow x86-64 NaCl code to be tested on Macs.
 * It would demonstrate that the x86-64 sandbox can be ported to other OSes.

The main obstacle is TLS support on OS X.  Unlike Linux and Windows, OS X does not support TLS variables (those declared with &amp;quot;__thread&amp;quot;).  We rely on these when control passes from untrusted to trusted code on x86-64, during NaCl syscalls.  This code sequence relies on being able to retrieve the address of the thread's trusted stack from TLS without doing a function call.</ns0:content><ns0:updated>2011-08-13T00:50:33.000Z</ns0:updated><ns0:published>2010-10-16T16:10:45.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:state>closed</ns2:state><ns0:title>Port NaCl's x86-64 sandbox to Mac OS X</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-Mac</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1051/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1051" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1051" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2010-10-20T15:28:53.000Z</ns2:closedDate><ns2:id>1051</ns2:id></ns0:entry>