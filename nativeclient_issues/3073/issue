<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0cFQ347eCl7ImA9WhBQGE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3073</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Currently, PNaCl's system code expects user code (the pexe) to define the symbol __nacl_read_tp().  If user code doesn't define this, translation on x86-64 fails with a link error.  On other architectures, however, translation succeeds.

This is problematic because it makes it easy to write a minimal program that works fine when tested on x86-32 and ARM but fails on x86-64.

The following test program demonstrates the problem, which only occurs if the program uses a TLS variable:

$ cat tls_var.c

__thread int tls_var;
void _start(void *info) {
  while (1) {
    tls_var = 1;
  }
}

$ ./toolchain/pnacl_linux_x86_64/newlib/bin/pnacl-clang tls_var.c -nostdlib -o tls_var.pexe -Wall -Werror
$ ./toolchain/pnacl_linux_x86_64/newlib/bin/pnacl-translate tls_var.pexe -arch arm -nostdlib -o tls_var.nexe
$ ./toolchain/pnacl_linux_x86_64/newlib/bin/pnacl-translate tls_var.pexe -arch x86-32 -nostdlib -o tls_var.nexe
$ ./toolchain/pnacl_linux_x86_64/newlib/bin/pnacl-translate tls_var.pexe -arch x86-64 -nostdlib -o tls_var.nexe
tls_var.nexe---tls_var.pexe---.o:tls_var.pexe:function _start: error: undefined reference to '__nacl_read_tp'


How to fix this:

The PNaCl system code that's linked into the nexe (pnacl/support/crtbegin.c) should define __nacl_read_tp() itself.  Normally it will need to query the IRT itself to find the tls_get() routine.

I think we will want to PNaCl toolchain to provide two builds of crtbegin.c:

 1) One should use the IRT's tls_get() in order to follow the stable ABI.
 2) Another should call the tls_get syscall directly, because we run some NaCl tests without the IRT.
</ns0:content><ns0:updated>2013-03-20T23:10:12.000Z</ns0:updated><ns0:published>2012-10-04T17:31:03.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/102292187274959663599/</ns2:uri><ns2:username>jvo...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/dschuff@chromium.org/</ns2:uri><ns2:username>dschuff@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>PNaCl: System code expects user code to define __nacl_read_tp(), but on x86-64 only</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>PNaClABI</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3073/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3073" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3073" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:blocking>
			<ns2:id>3339</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2013-03-20T23:10:12.000Z</ns2:closedDate><ns2:id>3073</ns2:id></ns0:entry>