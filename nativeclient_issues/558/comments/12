<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEENQn47eCl7ImA9WxFWF08.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/558/comments/full/12</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">Security of TCB is not the goal - security of the whole system is. Usually it means 
we try to simplify the TCB at the expense of the UCB, but if something only increases 
complexity and does not protect you from potential attacks then this change us bad 
and no amount of hand-waving and appellations to "best security principles" can 
change that fact.

If we are "committed to reducing attack surfaces whenever feasible" then we should 
allow non-PT_LOAD sections and stop this pointless discussion.

Unknown non-PT_LOAD sections are not processed by TCB at all so they can only affect 
code which decides if to accept them or to reject them. This is code is simpler 
(albeit marginally) if we don't include whitelist.

Now, let's talk about other tools - tools used by programmers and security 
researchers. These tools will be more complex (and consequently more vulnerable) if 
we'll use current strict scheme. Why? Well, the fact that sel_ldr forbids some 
sections does not mean they'll not be used. We DON'T control and, more importantly, 
DON'T WANT to control all tools people are using to create NaCl modules (we are not 
Apple). People will just stuff the data in other, already existing sections. This 
will lead to different, incompatible, extensions schemes. To find this info parsers 
will be extended - and since they'll need to include different kind of heuristics (to 
support different extensions schemes) this code will be complex and will potentially 
contain more vulnerabilities then simpler scheme.

Yes, it's generally agreed that whitelisting is better then blacklisting - but this 
is not because white is better color then black, it's because whitelisting tends to 
decrease attack surface. Here it does the opposite and so should be rejected.</ns0:content><ns0:updated>2010-06-05T08:31:33.000Z</ns0:updated><ns0:published>2010-06-05T08:31:33.000Z</ns0:published><ns2:updates /><ns0:title>Comment 12 by k...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=558#c12" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/558/comments/full/12" rel="self" type="application/atom+xml" /></ns0:entry>