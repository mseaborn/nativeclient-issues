<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CU4GRn47eCl7ImA9WhdVF04.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2271/comments/full/9</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">Commit: 1cf1bb9c077b677e06549ad55bb746c3706d0551
 Email: mcgrathr@chromium.org@fcba33aa-ac0c-11dd-b9e7-8d5594d729c2

Replace newlib's malloc with one of our own

Build our own copy of dlmalloc 2.8.5 as the allocator for the newlib-based
C library (i.e. put it in libnacl).  We are already using a different
incarnation of this same source for the IRT's private allocator, and it
works well.  The malloc implementation in newlib is based on a much older
version of dlmalloc, and it's also using pthread_mutex_lock for its
locking, while here we use simple spin locks.

Note: This must be committed along with a toolchain DEPS update that
brings in a newlib build that excludes its malloc.

BUG= http://code.google.com/p/nativeclient/issues/detail?id=2271
TEST= trybots

R=pasko@google.com,jvoung@google.com

Review URL: http://codereview.chromium.org/7991006

git-svn-id: svn://svn.chromium.org/native_client/trunk/src/native_client@6759 fcba33aa-ac0c-11dd-b9e7-8d5594d729c2

M	DEPS
A	src/untrusted/nacl/malloc.c
M	src/untrusted/nacl/nacl.scons</ns0:content><ns0:updated>2011-09-22T23:25:27.000Z</ns0:updated><ns0:published>2011-09-22T23:25:27.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2271#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2271/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>