<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkIDSX47eCl7ImA9WhZUFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1903/comments/full/3</ns0:id><ns0:author>
			<ns0:name>kschi...@google.com</ns0:name><ns0:uri>/u/108470876877739532758/</ns0:uri></ns0:author><ns0:content type="html">The problem with the x86-64 validator is that the code for allowing a lock prefix on cmpxchg8b and cmpxchg16b instructions was commented out.

The problem with the x86-32 validator is more complex. It points out a potential problem with the way the potential parser works. We certainly can close the gap (and at least fix this issue) by overloading the hasmodrm byte. It currently is only 0 or 1. We can extend it to handle that the modrm mod field must be 0x3 or not 0x3 (i.e. define if memory access is allowed). Looking into how large this change is.</ns0:content><ns0:updated>2011-06-09T19:42:58.000Z</ns0:updated><ns0:published>2011-06-09T19:42:58.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by kschi...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1903#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1903/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>