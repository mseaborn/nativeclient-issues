<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MHRX47eCl7ImA9Wx5TFU8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/732/comments/full/8</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">Ah-ha.  When loaded at the normal entry address of 0x20000, this binary's text+fini sections end exactly on a 64KiB boundary (just south of 0x30000).  Its rodata begins at 0x30000.

(Note: this is actually invalid.  We're supposed to have enough room for at least a couple halt instructions between code and data.  I'll file a separate linker script bug, but ignore that for now.)

This causes the sel_ldr to write halts to the next 64KiB of memory, completely destroying the binary's rodata.  I'm honestly amazed that the program gets as far as it does, given the damage it sustains!

So, really, we have two problems:
1. The toolchain used to make sure there was room between end-of-text and start-of-data.  It no longer does this.
2. The sel_ldr should *reject* this binary, not stomp blindly through memory destroying things.

I'll put together tests for each case.  I'm repurposing this bug for the second issue and will file a new one for the first.</ns0:content><ns0:updated>2010-07-30T22:37:14.000Z</ns0:updated><ns0:published>2010-07-30T22:37:14.000Z</ns0:published><ns2:updates>
			<ns2:label>-Pri-0</ns2:label><ns2:label>-Arch-ARM</ns2:label><ns2:label>-Component-DevTools</ns2:label><ns2:label>-Test</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-TrustedRT</ns2:label><ns2:label>OS-All</ns2:label><ns2:ownerUpdate>b...@google.com</ns2:ownerUpdate><ns2:summary>sel_ldr behaves very rudely when text ends at exact 64KiB boundary</ns2:summary><ns2:ccUpdate>cbif...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 8 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=732#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/732/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>