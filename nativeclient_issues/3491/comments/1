<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEENSX47eCl7ImA9WhFSEUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3491/comments/full/1</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">I think I will go with converting llvm.flt.rounds to "1" (round-to-nearest) for now, since there is no way to change the rounding mode w/ PNaCl right now (without adding an intrinsic).

Then we can just test that the initial rounding mode is the same everywhere.

Later on, we can add the "set" intrinsic, say, llvm.flt.set.round.  It seems possible to do for x86, arm, mips without extra privileges.

We can provide an "fenv.h" with fesetround(), fegetround().  We would also define and consistent mode-constants, instead of the arch-specific bit patterns you would see from glibc.  E.g., we could just make fegetround() return the "portable" results that FLT_ROUNDS gives you.

Then the fesetround() can be implemented with llvm.flt.set.round, and fegetround() by llvm.flt.rounds.  We won't have the rest of the fenv.h functions though.

======

One thing about setting the initial value to "1" is that this corresponds to round-to-nearest.  I don't know if that is the preferred default.  For some reason, Javascript's preferred default appears to be round-to-plus-infinity:

https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round</ns0:content><ns0:updated>2013-06-13T20:51:38.000Z</ns0:updated><ns0:published>2013-06-13T20:51:38.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3491#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3491/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>