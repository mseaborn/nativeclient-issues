<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUYHQn47eCl7ImA9Wx5bEkU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1086</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Our CommandTest() function (defined in SConstruct) has the ability to
take a mixture of target objects and strings.  When given a target
object, it declares a dependency on that target and converts it to a
string (the target's filename).

However, it gets it wrong when one of the program arguments is a list
of multiple target objects.  This happens often because
ComponentProgram() returns a list of targets on Windows.


Consider the following fragment from src/trusted/plugin/build.scons:

  ppapi_plugin = ppapi_env.ComponentProgram(ppNaClPlugin,
                                            common_inputs + ppapi_inputs,
                                            no_import_lib=True)
  unittest = env.ComponentProgram('ppapi_plugin_unittest',
                                  unittest_sources,
                                  no_import_lib=True)
  node = env.CommandTest('ppapi_plugin_unittest.out',
                         command=[unittest,
                                  ppapi_plugin,
                                  env['BUILD_ISA_NAME']])

The expected test program invocation is:
  .../ppapi_plugin_unittest.exe .../ppNaClPlugin.dll x86-32

The actual test program invocation is:
  .../ppapi_plugin_unittest.exe .../ppapi_plugin_unittest.pdb x86-32

This is because ComponentProgram() actually returns a list of 2 targets:
[env.File(&amp;quot;.../ppapi_plugin_unittest.exe&amp;quot;),
 env.File(&amp;quot;.../ppapi_plugin_unittest.pdb&amp;quot;)]

and CommandTest() converts its inputs to:
dependencies:
  0: &amp;quot;.../ppapi_plugin_unittest.exe&amp;quot;
  1: &amp;quot;.../ppapi_plugin_unittest.pdb&amp;quot;
  2: &amp;quot;.../ppNaClPlugin.dll&amp;quot;
argument list:
  ${SOURCES[0].abspath}
  ${SOURCES[1].abspath}
  x86-32
(where SOURCES[n] is a reference to the dependency list)


Proposed fix:

1) Change CommandTest() to check its inputs more carefully.

2) Change ComponentProgram() to return just the .exe, so that &amp;quot;[0]&amp;quot;
isn't needed all over the place.  We seldom care about the .pdb
target.</ns0:content><ns0:updated>2010-10-28T16:25:33.000Z</ns0:updated><ns0:published>2010-10-25T14:58:38.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/112723007196297768207/</ns2:uri><ns2:username>dsprin...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Scons gotcha requires "[0]" sometimes</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-Infrastructure</ns2:label><ns2:label>OS-Windows</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1086/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1086" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1086" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2010-10-28T16:25:33.000Z</ns2:closedDate><ns2:id>1086</ns2:id></ns0:entry>