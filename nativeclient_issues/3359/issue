<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0EAR347eCl7ImA9WhBaEkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3359</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Example:

$ cat addition_folding.ll
define i8 @fetch_add_gep(i8* %ptr, i32 %offset) {
  %p = getelementptr i8* %ptr, i32 %offset
  %val = load i8* %p
  ret i8 %val
}

Expected output is to use &amp;quot;(%ecx,%eax)&amp;quot; addressing:

$ .../native_client/toolchain/pnacl_linux_x86/host_x86_64/bin/llc addition_folding.ll -o - -mtriple=i686-none-gnu -O0
...
fetch_add_gep:                          # @fetch_add_gep
        .cfi_startproc
# BB#0:
        movl    8(%esp), %eax
        movl    4(%esp), %ecx
        movb    (%ecx,%eax), %al
        ret
...

Actual output:

$ .../native_client/toolchain/pnacl_linux_x86/host_x86_64/bin/llc addition_folding.ll -o - -mtriple=i686-none-nacl-gnu -O0
fetch_add_gep:                          # @fetch_add_gep
        .cfi_startproc
# BB#0:
        movl    8(%esp), %eax
        movl    4(%esp), %ecx
        addl    %eax, %ecx
        movb    (,%ecx), %al
...

For some reason, adding &amp;quot;nacl&amp;quot; to the triple generates worse code.

Maybe a constraint from x86-64 is leaking over into x86-32?  On x86-64, we can't use &amp;quot;(%rcx,%rax)&amp;quot; because it has to be &amp;quot;(%r15,%rax)&amp;quot;.
</ns0:content><ns0:updated>2013-05-22T19:07:26.000Z</ns0:updated><ns0:published>2013-03-29T23:34:54.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/115553580108938459101/</ns2:uri><ns2:username>stich...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/109636895838879576326/</ns2:uri><ns2:username>j...@chromium.org</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>PNaCl x86-32: llc -O0 generates worse addressing mode when in NaCl mode</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:label>Performance</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3359/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3359" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3359" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3359</ns2:id></ns0:entry>