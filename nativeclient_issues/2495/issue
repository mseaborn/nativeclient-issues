<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ak8DRX47eCl7ImA9WhRXEEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2495</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">PNaCl's runtime (crtbegin/crtend) does not support .init/.fini. Adding machine code to sections is inherently non-portable, so this is not a desirable feature. For backwards compatibility, _init and _fini are always provided as empty functions.

However, the GCC toolchain does produce .init/.fini entries. This is not an issue for DSO compatibility, because shared objects produced by nacl-gcc will have been linked against GCC's runtime, which does support .init/.fini.

However, if an object file which uses .init/.fini is linked into a PNaCl application, then then the resulting nexe will not execute the contents of .init/.fini.  This usage case is unusual and likely to be considered unsupported. However, it would still be nice if we could have consistent behavior across both toolchains.
</ns0:content><ns0:updated>2011-12-16T18:07:54.000Z</ns0:updated><ns0:published>2011-12-16T07:55:35.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/109286297231979736865/</ns2:uri><ns2:username>mcgra...@chromium.org</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>Eliminate .init/.fini in favor of .init_array and .fini_array in GCC toolchain</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Mstone-</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GCC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2495/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2495" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2495" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2495</ns2:id></ns0:entry>