<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkIERX47eCl7ImA9WhVUGE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2805</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">When the host OS is POSIX-compliant, clock(3) returns the CPU time used by the process.  When the host OS is Windows, clock(3) returns the wall clock time.  The NaCl clock syscall is a thin wrapper that just returns what the host-OS-side C library clock(3) function returns.  This means this is a platform difference, and any NaCl code that depends on learning the CPU time used is not portable.

We should consider:

- removing/deprecating the clock syscall
- emulating the proper functionality on Windows (according to noel, there's no ready API for this, so it may be expensive to do)

- do both: emulate equivalent functionality but expose it via getrusage
- do nothing.  having clock as-is is still useful (e.g., the cond_timedwait test), but as long as NaCl developers know not to depend on it on Windows, we're &amp;quot;ok&amp;quot;.
- ???</ns0:content><ns0:updated>2012-05-23T21:28:24.000Z</ns0:updated><ns0:published>2012-05-23T18:48:00.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>clock syscall on Windows returns wallclock time not CPU time used</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-Windows</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2805/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2805" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2805" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2805</ns2:id></ns0:entry>