<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4BQn47eCl7ImA9WhJaF08.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2902/comments/full/4</ns0:id><ns0:author>
			<ns0:name>dsch...@google.com</ns0:name><ns0:uri>/u/104270846665912603141/</ns0:uri></ns0:author><ns0:content type="html">No test case that I know of (note that this would be a perfect use case for the LLVM-style tests which can check codegen for small snippets of bitcode). I see the same thing with this test case though. Maybe some upstream change has added a new place where this kind of mode is introduced? You might try adding a log in the nacl rewrite pass to see if the new base-&gt;index code is being triggered, or running llc with -debug to see if you can see where that addressing mode is being introduced, but it might still be worth just manually taking a look at our diff from upstream to see if we have disabled some relevant bits.</ns0:content><ns0:updated>2012-10-08T19:35:53.000Z</ns0:updated><ns0:published>2012-10-08T19:35:53.000Z</ns0:published><ns2:updates>
			<ns2:status>Assigned</ns2:status></ns2:updates><ns0:title>Comment 4 by dsch...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2902#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2902/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>