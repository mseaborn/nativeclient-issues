<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0UGRX47eCl7ImA9Wx5UFkU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/947/comments/full/6</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">I agree with Robert.  We should ensure that the *initial* stack pointer conforms to the AAPCS, since we're claiming to conform to it (and enforcing parts of it).

If the program subsequently decides to set up stacks that do not enforce 8-byte alignment (i.e using pthread_create), I agree with Mark that it is not our problem.  If the program truly ignores AAPCS, it won't be able to use trampolines or our libc...but if it knows what it's doing this may be just fine.  (Think green Erlang threads that don't make direct syscalls.)</ns0:content><ns0:updated>2010-10-21T17:13:44.000Z</ns0:updated><ns0:published>2010-10-21T17:13:44.000Z</ns0:published><ns2:updates>
			<ns2:label>-Pri-2</ns2:label><ns2:label>Pri-1</ns2:label><ns2:status>Available</ns2:status><ns2:ownerUpdate>---</ns2:ownerUpdate></ns2:updates><ns0:title>Comment 6 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=947#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/947/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>