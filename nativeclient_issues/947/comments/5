<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck8CSX47eCl7ImA9Wx5UFkU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/947/comments/full/5</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">The calling conventions are up to the untrusted code (so, for example, sel_ldr should leave stack supplied by threading library alone), yet Linux, in particular, aligns stack to the 16 bytes boundary (all architectures, no exceptions). Since we are mostly tracking Linux in our environment it makes sense to do the same in sel_ldr.

Note: it does this even if IA32 ABI does not require such alignment (formally it only requires 32bit alignment even if modern GCC and GLibC enforce 128bit alignment).</ns0:content><ns0:updated>2010-10-21T17:07:48.000Z</ns0:updated><ns0:published>2010-10-21T17:07:48.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by k...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=947#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/947/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>