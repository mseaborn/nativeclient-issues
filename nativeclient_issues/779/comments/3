<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CE8EQ347eCl7ImA9Wx5TGU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/779/comments/full/3</ns0:id><ns0:author>
			<ns0:name>dpolukhin@google.com</ns0:name><ns0:uri>/u/dpolukhin@google.com/</ns0:uri></ns0:author><ns0:content type="html">I suspect we will see more such reports when NaCl will be actively used inside Chrome on end user machines with lot's of different software installed like antiviruses and other programs that use some kind of code injection. It would be good to produce core dump if allocation failed, it should contain all required information to debug this issue i.e. list of loaded DLL, memory map, etc.

I see two possible solutions: (1) reduce address space or (2) allocate address space at the very earlier stages of sel_ldr execution. For example we can write simple launcher that will create suspended stub process, the launcher allocates 1G in the stub address space and resumes the stub which loads sel_ldr as a DLL. Doing this we will be able to reserve 1G for NaCl program before injected code is able to pollute address space significantly (it still may not work in certain cases when system DLLs base addresses very unfavorable but probability should be very low).</ns0:content><ns0:updated>2010-08-04T06:20:02.000Z</ns0:updated><ns0:published>2010-08-04T06:20:02.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by dpolukhin@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=779#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/779/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>