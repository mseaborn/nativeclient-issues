<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkIHQ347eCl7ImA9WhRaGUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1316</ns0:id><ns0:author>
			<ns0:name>halya...@google.com</ns0:name><ns0:uri>/u/112856509894568708731/</ns0:uri></ns0:author><ns0:content type="html">Currently 32-bit glibc uses assembler long double math functions from SRC/glibc/sysdeps/i386/fpu. These functions operate with 10-byte arguments but sizeof(long double)=8.

This could be due NO_LONG_DOUBLE define not being set.

The program in the attachment calculates sin(1) using double and long double functions. In 32-bit mode it prints
&amp;quot;nan 0.841470984807897&amp;quot;
In 64-bit mode it correctly prints
&amp;quot;0.841470984807897 0.841470984807897&amp;quot;
</ns0:content><ns0:updated>2012-02-22T22:42:12.000Z</ns0:updated><ns0:published>2011-01-14T11:18:25.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:owner>
			<ns2:uri>/u/robertm@google.com/</ns2:uri><ns2:username>robertm@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/103360015124260446450/</ns2:uri><ns2:username>eaelt...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>long double functions assume that arguments are 10-byte while they are really only 8 byte in 32-bit glibc.</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1316/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1316" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1316" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>1316</ns2:id></ns0:entry>