<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEUMQX47eCl7ImA9WhZWF0k.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1816/comments/full/2</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">Thanks Mark. Your suggestion for the stubs seems reasonable, we should use "bx %r7" instead of "mov pc, %r7", though
We probably need to revisit our mask, right now the mask actually limits us to 256MB for code anyway.

Regarding the first entry in the PLT: We can probably just use a data bundle for this, e.g.:

10000:       e52de004        push    {lr}            
10004:       e59fe004        ldr     lr, [pc, #4]    # fix offset to use data_bundle+4  
10008:       e08fe00e        add     lr, pc, lr
                             add     lr, lr #8       # could be avoided if 8 is added to "payload"
                             bic     lr, lr, #0xf000000f
                             bx      lr                            
                             nop
                             nop
data_bundle:
                             .illegal
10010:       00018068        .word   0x00018068          
                             .pad
                             .pad


The code for this is generated by here  binutils-2.20/bfd/elf32-arm.c

(look for elf32_arm_plt_entry and  elf32_arm_plt0_entry and should be straight forward to adjust</ns0:content><ns0:updated>2011-05-18T19:18:00.000Z</ns0:updated><ns0:published>2011-05-18T19:18:00.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by robertm@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1816#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1816/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>