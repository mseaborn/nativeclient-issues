<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0EBSH47eCl7ImA9WhJWFEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2898/comments/full/8</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=9511

------------------------------------------------------------------------
r9511 | eaeltsin@google.com | 2012-08-20T09:36:51.569543Z

Changed paths:
   D http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/gdb/break_inside_function.py?r1=9511&amp;r2=9510&amp;pathrev=9511
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/gdb/nacl.scons?r1=9511&amp;r2=9510&amp;pathrev=9511
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/gdb/gdb_test.py?r1=9511&amp;r2=9510&amp;pathrev=9511

Debug stub: remove wrong break_inside_function test

The test tries to check breakpoints set by 'b &lt;file&gt;:&lt;line&gt;' instead of 'b &lt;function&gt;'. This was needed when we had problems with breakpoints on function start (those set by 'b &lt;function&gt;').

Hard thing in this test was to determine valid line number to set the breakpoint, and the test does this in a wrong way. It does this by setting breakpoint on function and parsing GDB reply that contains source line where the breakpoint was set, then removes that breakpoint (as they didn't work :)) But, to set the breakpoint by function name symbols for the file have to be loaded at that point, which is not the case with dynamic linking. Test was fixing that by loading symbols by symbol-file explicitly.

That approach has several problems: first, symbol-file loads symbols for main executable, which is runnable-ld.so from GDB's point of view (that was not hitting us, as test was not using symbols from runnable-ld.so, and because real main executable has absolute location different from runnable-ld.so location, so there was no clashes).

Second, and more important, is that having symbols GDB actually tries to set the breakpoint before the code is actually loaded (instead of making it pending). That was failing because of memory write failure, but GDB considered that not fatal.

However, now we are fixing the problem of breakpoints on function start, and the fix needs to examine function code. With the inconsistent situation mentioned above (having symbols but not having memory) this leads to fatal failure at memory reading while examining function code.

Probably the test can be fixed, however, that's not easy. Moreover, the test is not so useful anymore. I'd prefer t delete it and to reimplement it later if needed.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=2898

Review URL: https://chromiumcodereview.appspot.com/10823395
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-08-20T09:40:59.000Z</ns0:updated><ns0:published>2012-08-20T09:40:59.000Z</ns0:published><ns2:updates /><ns0:title>Comment 8 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2898#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2898/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>