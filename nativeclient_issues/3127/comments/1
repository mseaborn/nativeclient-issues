<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0cNRn47eCl7ImA9WhBXE04.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3127/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">I've done a prototype of a code editor for this, attached.
It works fine (ARM and x86-32), using objdump to decode and Python to match instructions and perform the edits.

We know from the experience of the check_tls.py test script that it will be too slow on Windows.  A pure C version could be done easily enough except for the problem of discerning x86 instruction boundaries.  Mark suggested using a subset of the R-DFA for x86 just for the purpose of finding the instruction boundaries, if that's simple.  (Given instruction boundaries, the actual recognition of the cases in question could be done with simple hand-coded matchers, but doing that too with the DFA would be peachy if it's easy enough.)  Perhaps Vlad and/or Victor can comment on the feasibility, ease, and maintainability of using a subset of the R-DFA work for this.</ns0:content><ns0:updated>2013-03-26T23:04:57.000Z</ns0:updated><ns0:published>2013-03-26T23:04:57.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>shcherb...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3127#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3127/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>