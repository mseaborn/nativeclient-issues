<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0MDQH47eCl7ImA9Wx9SEkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1205</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">One of the defining characteristics of x86-64 is that pointers are 64-bit and so it is reasonable for existing codebases to assume that &amp;quot;defined(__x86_64__)&amp;quot; implies sizeof(void*) == 8.

However, under NaCl, sizeof(void*) == 4 on all architectures.  But nacl-gcc still #defines __x86_64__ when targetting x86-64.  This breaks code that assumes that this implies sizeof(void*) == 8, such as Chromium's headers (see issue 1162).

Arguably we should not #define __x86_64__ because it breaks the compilation of programs that make reasonable assumptions.  We should #define something else instead, such as __native_client_x86_64__ or __nacl_x86_64__.</ns0:content><ns0:updated>2010-12-01T13:51:11.000Z</ns0:updated><ns0:published>2010-12-01T06:24:13.000Z</ns0:published><ns2:status>Invalid</ns2:status><ns2:cc>
			<ns2:uri>/u/110783171813691645727/</ns2:uri><ns2:username>dpoluk...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>nacl-gcc should not #define __x86_64__, because sizeof(void*) != 8</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-GCC</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1205/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1205" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1205" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2010-12-01T13:48:20.000Z</ns2:closedDate><ns2:id>1205</ns2:id></ns0:entry>