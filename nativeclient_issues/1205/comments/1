<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkYMRH47eCl7ImA9Wx9SEkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1205/comments/full/1</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">I can't easily agree with this.

Ideally, macro definitions that tell about the host arch should not be used for detecting sizes of data types, as data models on the same arch can vary.

I don't see why introducing __native_client_x86_64__ and not using
  #if defined(__x86_64__) &amp;&amp; defined(_native_client_)

We can probably think on some way (or tool) for helping to detect these non-portable uses of that macro...
</ns0:content><ns0:updated>2010-12-01T13:29:45.000Z</ns0:updated><ns0:published>2010-12-01T13:29:45.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>dpoluk...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1205#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1205/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>