<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEMCQX47eCl7ImA9WxFRFUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/232/comments/full/9</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">I'm taking this over.  All architectures that need a low-memory sandbox are blocked on this work.  Here's a 
brief status update.

- Dennis's suggestion of arranging for the ELF headers to be mapped at 0x8000 is not going to work.  This is 
still within the untrusted region; at best it's an information leak -- at worst, the sel_ldr's ELF headers might 
contain an executable sequence.  While other architectures have page-granularity no-execute protection, x86-
32 does not.

- I've attempted to replicate Dennis's "untrusted section" -- which definitely seems like the right way to go -- 
and had all manner of problems.  (I'm trying to make this work on architectures other than ARM, so there are 
some additional variables to deal with.)  The primary issue at the moment appears to be a bug in glibc's TLS 
setup routine.  I'm not sure if it's using hardcoded phdr indices, but it appears to get confused if too many 
loadable segments appear before the text.  (Like, &gt;0 loadable segments.)  Still debugging.

- Separate fixes should have relieved the need for adjustments to the overcommit policy.</ns0:content><ns0:updated>2010-04-29T15:54:20.000Z</ns0:updated><ns0:published>2010-04-29T15:54:20.000Z</ns0:published><ns2:updates>
			<ns2:status>Started</ns2:status><ns2:ownerUpdate>cbif...@google.com</ns2:ownerUpdate></ns2:updates><ns0:title>Comment 9 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=232#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/232/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>