<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkIDRn47eCl7ImA9WhdbE0s.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/232/comments/full/21</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">It is probably appropriate to make sel_ldr always build as a PIE and then use the same bootstrap-loader scheme we're now using in Chrome (i.e. move nacl_helper_bootstrap over to the native_client tree, and use it to run sel_ldr).  That's the only truly reliable way to get the address space reservation right every time with all possible details of ASLR.  (It also makes these issues match exactly in the sel_ldr cases what we do in deployment in Chrome, which seems like a good thing.)  For ARM, being a PIE is also the clean way not to require ugly nonsense like a custom linker script for building sel_ldr (in fact, today what we do is munge our ARM cross-tools to use a slightly-custom linker script for everything they build, just because of this need for sel_ldr).</ns0:content><ns0:updated>2011-10-11T20:22:57.000Z</ns0:updated><ns0:published>2011-10-11T20:22:57.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>-mcgra...@google.com</ns2:ccUpdate><ns2:ccUpdate>mcgra...@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 21 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=232#c21" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/232/comments/full/21" rel="self" type="application/atom+xml" /></ns0:entry>