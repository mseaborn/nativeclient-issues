<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0EER347eCl7ImA9WhdUEUo.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2312/comments/full/15</ns0:id><ns0:author>
			<ns0:name>krasin@google.com</ns0:name><ns0:uri>/u/krasin@google.com/</ns0:uri></ns0:author><ns0:content type="html">1) What do you mean by "llvm-gcc that is used by translators" ?
Can llvm-gcc produce NNaCl code?

2)ARM trusted toolchain is handled in a different script, trusted-toolchain-creator.sh
utman.sh has some functionality related to the trusted toolchain. It does not create the toolchain, but it checks for it, can download and so on. That's not required to have in utman.sh

3) ??? Are you suggesting we use python? There are shared paths and flags.
I suggest to do something with the mess we have now. I see several options (Makefile, python (with different flavours of it), a proper shell script), but I can miss something.

&gt;Clang doesn't actually simplify the picture too much.
Is it an accuse to keep the mess forever? Yes, the Clang is the first part that would be placed separately, but it's mostly because I don't want to increase the complexity anymore.

&gt;It only looks simpler because Clang's build process is hidden inside LLVM's.
How the Clang's complexity related to us? It's not maintained by us.

&gt;The most messy part still involves the interaction between libgcc_so, libstdc++, the SDK, and newlib.

The most messy parts is our patched binutils. The interaction between libgcc_so, libstdc++, the SDK, and newlib is also the issue.

All of these should be addressed and it's really hard to do if we keep the current utman.sh</ns0:content><ns0:updated>2011-09-28T01:00:06.000Z</ns0:updated><ns0:published>2011-09-28T01:00:06.000Z</ns0:published><ns2:updates /><ns0:title>Comment 15 by krasin@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2312#c15" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2312/comments/full/15" rel="self" type="application/atom+xml" /></ns0:entry>