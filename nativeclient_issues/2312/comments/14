<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MERX47eCl7ImA9WhdUEUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2312/comments/full/14</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">1) What do you mean by "llvm-gcc that is used by translators" ?

2) ARM trusted toolchain is handled in a different script, trusted-toolchain-creator.sh

3) ??? Are you suggesting we use python? There are shared paths and flags.

Clang doesn't actually simplify the picture too much. It only looks simpler because Clang's build process is hidden inside LLVM's.

The most messy part still involves the interaction between libgcc_so, libstdc++, the SDK, and newlib.
</ns0:content><ns0:updated>2011-09-28T00:23:24.000Z</ns0:updated><ns0:published>2011-09-28T00:23:24.000Z</ns0:published><ns2:updates /><ns0:title>Comment 14 by pdox%goo...@gtempaccount.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2312#c14" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2312/comments/full/14" rel="self" type="application/atom+xml" /></ns0:entry>