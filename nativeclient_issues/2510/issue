<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkUNQH47eCl7ImA9WhVQFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2510</ns0:id><ns0:author>
			<ns0:name>elijahtaylor@google.com</ns0:name><ns0:uri>/u/elijahtaylor@google.com/</ns0:uri></ns0:author><ns0:content type="html">All calls to stat and fstat in NaCl return a 'struct stat' with the same fake inode number filled in.  From an fstat standpoint, all files reference the same device and inode, so they look like the same file.

If we already are enabling file system calls in sel_ldr (which I believe is required in order to even use a 'stat', why can't we just pass back the actual inode.  Or if that's deemed an unacceptable risk, can we at least fill out a fake inode that is unique for each actual file?

In particular this interferes with self-hosting Mono.  Sharing protections are enabled for all opened files, and if Mono tries to open a file for writing, it looks like it's trying to open an existing read-only file.</ns0:content><ns0:updated>2012-04-05T17:51:31.000Z</ns0:updated><ns0:published>2011-12-22T21:00:06.000Z</ns0:published><ns2:status>Accepted</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>stat/fstat return same fake inode number for all files</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-18</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2510/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2510" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2510" rel="self" type="application/atom+xml" /><ns2:stars>3</ns2:stars><ns2:blockedOn>
			<ns2:id>2712</ns2:id></ns2:blockedOn><ns2:id>2510</ns2:id></ns0:entry>