<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ak4NRX47eCl7ImA9WhZREUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1612/comments/full/4</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">I'm not sure I like this plan. Yes, we can serve them from any address, but if everything is served from a single prefix ("/usr" or even "/") then we'll need to somehow send, for example

/usr/lib/local/ru_RU.utf8/LC_CTYPE to http://nacl.chromium.org/glibc/2.9.0/...
/usr/lib/python2.6/json/decoder.py to http://www.python.org/nacl/python-2.6.5/...
/usr/lib/python2.6/dist-packages/lxml/etree.so to http://lxml.de/nacl/lxml-2.2.4/...
...

Who will create this map? And how? I think we need some wider discussion about what we are planning to do with this. This mechanism should support thousand of files (perl5 installation includes over 1'500 files, for example) so I'm not sure full map makes sense: it'll be easier to operate with prefixes, but in this it's better to use unique per-package prefixed to make sure there are no collisions...
</ns0:content><ns0:updated>2011-04-06T19:43:14.000Z</ns0:updated><ns0:published>2011-04-06T19:43:14.000Z</ns0:published><ns2:updates /><ns0:title>Comment 4 by k...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1612#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1612/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>