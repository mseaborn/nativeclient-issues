<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkIAR347eCl7ImA9WhBQE0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2227</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">Our backends do not support complex va-args such as structs.
This is probably OK - we have only ever seen those being used
in toolchain tests. 

It would be nice if we could improve the diagnostics a little, though.
Usually there is only an assert in the backend:


 UNREACHABLE executed at /mnt/data/b/build/slave/linux-pnacl-x86_64-newlib/build/native_client/hg/upstream/llvm/lib/VMCore/ValueTypes.cpp:193!
0  llc             0x0000000000d4649f
1  llc             0x0000000000d48712
2  libpthread.so.0 0x00007ff49a1728f0
3  libc.so.6       0x00007ff499461a75 gsignal + 53
4  libc.so.6       0x00007ff4994655c0 abort + 384
5  llc             0x0000000000d32492 llvm::llvm_unreachable_internal(char const*, char const*, unsigned int) + 354
6  llc             0x0000000000c7a702
7  llc             0x0000000000813d27 llvm::SelectionDAGBuilder::visitVAArg(llvm::VAArgInst const&amp;amp;) + 167
8  llc             0x000000000083568d llvm::SelectionDAGBuilder::visit(unsigned int, llvm::User const&amp;amp;) + 349
9  llc             0x000000000084007d llvm::SelectionDAGBuilder::visit(llvm::Instruction const&amp;amp;) + 45


this can be reproduced with 
gcc-4.6.1/gcc/testsuite/gcc.c-torture/execute/va-arg-22.c

===

There is also a case where the frontend asserts:

stderr        : Unhandled expression!
TREE_CODE: 154
 &amp;lt;with_size_expr 0x7f2bc10db5f0
    type &amp;lt;record_type 0x7f2bc10d92c0 sizes-gimplified type_0 type_1 BLK
        size &amp;lt;var_decl 0x7f2bc10da600 D.1137 type &amp;lt;integer_type 0x7f2bc1013210 bit_size_type&amp;gt;


This can be reproduced with:
gcc-4.6.1/gcc/testsuite/gcc.c-torture/execute/20020412-1.c
</ns0:content><ns0:updated>2013-03-15T21:55:46.000Z</ns0:updated><ns0:published>2011-09-01T14:24:38.000Z</ns0:published><ns2:status>WontFix</ns2:status><ns2:state>closed</ns2:state><ns0:title>pnacl: emit compiler error when bitcode with complex va-args is encountered</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2227/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2227" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2227" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>2381</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:blocking>
			<ns2:id>2381</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:blocking>
			<ns2:id>2523</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:blocking>
			<ns2:id>2523</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2013-03-15T21:55:46.000Z</ns2:closedDate><ns2:id>2227</ns2:id></ns0:entry>