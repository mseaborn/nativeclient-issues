<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkAMQH47eCl7ImA9WxFaEE4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/689/comments/full/2</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">This will also permanently require us to allocate significant guards beneath the sandbox (pdox originally suggested 20GiB, and the math seems about right).

Can you explain why this is helpful to the LLVM code generator effort?</ns0:content><ns0:updated>2010-07-13T16:33:01.000Z</ns0:updated><ns0:published>2010-07-13T16:33:01.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>p...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 2 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=689#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/689/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>