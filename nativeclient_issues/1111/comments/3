<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0cDRH47eCl7ImA9Wx5bE0o.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1111/comments/full/3</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">See issue 239 for context.  The integrity of the ARM and x86-64 sandboxes relies on our ability to mark data as non-executable.  Because we were unable to settle on OS mechanisms that don't lie about this, we run a practical test on every sel_ldr startup to verify that it works.  This platform qualification test relies on the ability to get a signal correctly delivered.

The check malfunctions under VMware (which lies about the ability to use NX bits) and on QEMU/ARM in process mode (which does not provide ARM's XN bit).  In both cases the sandbox is compromised so we block startup without -Q.  It also malfunctions under Valgrind, which sees it as a program error -- I can't really blame it for this, but we run the sel_ldr Valgrind tests with -Q to avoid this.  Apparently it also malfunctions when gdb is attached at sel_ldr startup on 64-bit Linux.

I believe the current behavior is correct, but I won't get in a revert-war with you on the milestone.  Let's see what comes out of the triage meeting.</ns0:content><ns0:updated>2010-10-29T16:51:15.000Z</ns0:updated><ns0:published>2010-10-29T16:51:15.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by cbiffle@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1111#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1111/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>