<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0ACSX47eCl7ImA9WhNXGU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/562/comments/full/28</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=10408

------------------------------------------------------------------------
r10408 | mseaborn@chromium.org | 2012-12-07T17:32:09.058090Z

Changed paths:
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/pthread/nc_mutex.c?r1=10408&amp;r2=10407&amp;pathrev=10408

libpthread: Mutexes: Remove some code from the fast path

Don't set owner_thread_id or recursion_counter on the fast path of
PTHREAD_MUTEX_FAST_NP/NORMAL mutexes.

On ARM, this speeds up TestUncontendedMutexLock from ~0.70us to
~0.17us on a Panda board, because pthread_self() currently does a NaCl
syscall to get the thread pointer (though that performance bug could
be fixed independently).

This is also saving us a fast-path syscall on x86-64, though that
syscall is less expensive.

Split out mutex_lock_nonrecursive() so that we check mutex_type only
once when locking (in the fast path) rather than twice.

BUG=https://code.google.com/p/nativeclient/issues/detail?id=562
TEST=run_thread_test run_performance_test

Review URL: https://codereview.chromium.org/11471019
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-12-07T17:36:08.000Z</ns0:updated><ns0:published>2012-12-07T17:36:08.000Z</ns0:published><ns2:updates /><ns0:title>Comment 28 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=562#c28" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/562/comments/full/28" rel="self" type="application/atom+xml" /></ns0:entry>