<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CEIGRX47eCl7ImA9WhNXFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/562/comments/full/21</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=10374

------------------------------------------------------------------------
r10374 | mseaborn@chromium.org | 2012-12-04T17:32:23.577437Z

Changed paths:
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/performance/perf_test_threads.cc?r1=10374&amp;r2=10373&amp;pathrev=10374

Performance tests: Fix TestThreadWakeup, which was accidentally spinning

The logic in TestThreadWakeup's child thread was wrong: After setting
"state = REPLY_TO_PARENT", the wait loop's condition "state == WAIT"
is false so we immediately fall through to setting "state =
REPLY_TO_PARENT" again.  In the worst case, the parent rarely gets a
chance to run because the child thread is claiming the mutex so
frequently.

I realised this test was wrong after trying to switch nacl-newlib to
using futex-based mutexes and condvars and getting a huge slowdown in
this test.

BUG=https://code.google.com/p/nativeclient/issues/detail?id=3161
BUG=https://code.google.com/p/nativeclient/issues/detail?id=562
TEST=run_performance_test

Review URL: https://codereview.chromium.org/11421217
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-12-04T17:35:24.000Z</ns0:updated><ns0:published>2012-12-04T17:35:24.000Z</ns0:published><ns2:updates /><ns0:title>Comment 21 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=562#c21" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/562/comments/full/21" rel="self" type="application/atom+xml" /></ns0:entry>