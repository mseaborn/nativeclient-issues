<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0ECRX47eCl7ImA9Wx9UGUQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1425/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">I found the cause of this error:
  *** errlist.c count 132 vs Versions sys_errlist@GLIBC_2.0 count 123
(Note that 132 != 123, but they look similar so this is easy to misread!)

132 comes from extracting ERR_MAX from errlist.c.

123 comes from scraping #errlist-compat notes from Versions files.

The problem is that OS X's version of awk does not implement the
ARGIND variable, so ARGIND silently evaluates to 0.  This causes
errlist-compat.awk's loop to exit early without processing the whole
Versions file.

For example, this happens on Linux (Ubuntu):

$ cat file1
file1
blah
$ cat file2
file 2
blah
$ cat prog.awk
1 {
  printf "ARGIND=%i %s %s\n", ARGIND, $1, $2;
  ARGC = ARGIND + 1;
  next;
}
$ gawk -f prog.awk file1 file2
ARGIND=1 file1 
ARGIND=1 blah 
$ mawk -f prog.awk file1 file2
ARGIND=0 file1 
ARGIND=0 blah 
$ original-awk -f prog.awk file1 file2
ARGIND=0 file1 

original-awk behaves the same as OS X's awk.  mawk does not support
ARGIND either, but behaves differently when assigning to ARGC aborts
the iteration.
</ns0:content><ns0:updated>2011-02-18T02:21:04.000Z</ns0:updated><ns0:published>2011-02-18T02:21:04.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1425#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1425/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>