<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A04GSX47eCl7ImA9WxFaFkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/660/comments/full/5</ns0:id><ns0:author>
			<ns0:name>pa...@google.com</ns0:name><ns0:uri>/u/101628056640429344673/</ns0:uri></ns0:author><ns0:content type="html">The Comment 1 and the first line of Comment 2 present a problem alternative to x86-64 PIC, i.e. libctdc++ being configured for newlib.

There are two ways to deal with this:
1. build nacl-glibc with newlib toolchain, then build GCC into a nacl-glibc toolchain
(As I understood this is what Mark was trying)
2. build nacl-glibc with pregcc, then build nacl-glibc using it

for (1) we have roughly 5 stages: pregcc, newlib, newlib-gcc, nacl-glibc, gcc
for (2) we have roughly 3 stages: pregcc, nacl-glibc, gcc

Cons for (1):
* 6 hours to build on the vista buildbot is an optimistic estimate
* non-standard cross gcc build sequence, expect quirks
* will need to be redone to become the standard cross-glibc build

Cons for (2):
* it does not exist even for C, though (1) can compile and run C in modular-build configuration

Right now I cannot estimate the hardness of the route to (1) and (2). Sounds comparable. Given the Cons for (1) I support Victor in experimenting with (2). It does not matter much whether it is the tools/Makefile or the modular-build. Porting between the two is less of a problem than making C++ work.</ns0:content><ns0:updated>2010-07-20T09:58:48.000Z</ns0:updated><ns0:published>2010-07-20T09:58:48.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by pa...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=660#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/660/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>