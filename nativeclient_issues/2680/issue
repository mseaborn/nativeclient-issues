<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkINQH47eCl7ImA9WhJWF0s.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2680</ns0:id><ns0:author>
			<ns0:name>pa...@google.com</ns0:name><ns0:uri>/u/101628056640429344673/</ns0:uri></ns0:author><ns0:content type="html">The current validator accepts very specific instruction sequences for validating memory operands of string instructions (cmps, lods, movs, scas, stos).

Examples:
1. single operand:
mov %edi,%edi
lea (%r15,%rdi,1),%rdi
[rep] scas (%rdi),%al

2. two operands:
mov %esi,%esi
lea (%r15,%rsi,1),%rsi
mov %edi,%edi
lea (%r15,%rdi,1),%rdi
[rep] cmps (%rdi),(%rsi)
(sensitive to the order of operands)

Generally:

String instructions with one memory operand need to sandbox their memory argument (%esi or %edi) and add %r15 to them with lea (%r15,%rsi,1),%rsi or lea (%r15,%rdi,1),%rdi correspondingly. Reverse order of registers in lea (like lea (%rsi,%r15,1),%rsi) is _not_ allowed. Only movl zero-extend operation can be used for sandboxing a memory argument.

String instructions with two operands need to sandbox both arguments. Register %esi must be sandboxed first, register %edi is sandboxed second. Only movl zero-extend operation can be used to sandbox %esi and %edi.

validator_ragel behaves differently (allows more zero-extending variants) and should be fixed to match the existing validator.</ns0:content><ns0:updated>2012-08-23T22:23:11.000Z</ns0:updated><ns0:published>2012-03-21T10:53:48.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>validator_ragel: x86-64: make memory sandboxing sequences for string instructions stricter</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>CoreRuntime</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2680/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2680" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2680" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>2597</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:blocking>
			<ns2:id>2597</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2012-08-23T21:00:48.000Z</ns2:closedDate><ns2:id>2680</ns2:id></ns0:entry>