<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUMGR347eCl7ImA9WhBWFk4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3113/comments/full/9</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">@jvoung: Nothing prevents that.  It really depends whether this IR form is:

 a) an implementation detail of the PNaCl translator, when the wire format contains the simpler bytes+relocations form (diverging from upstream LLVM's bitcode format);
 b) a normal form required by the PNaCl ABI checker, when the wire format uses upstream LLVM bitcode's format for initialisers.

If it's (b), we might want to keep the normal form as simple as possible.  If it's (a), it really doesn't matter how exactly we convert the bytes+relocations back to LLVM IR.</ns0:content><ns0:updated>2013-04-10T23:43:46.000Z</ns0:updated><ns0:published>2013-04-10T23:43:46.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3113#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3113/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>