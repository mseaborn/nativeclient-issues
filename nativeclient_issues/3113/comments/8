<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DE8ASH47eCl7ImA9WhBWFk4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3113/comments/full/8</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">What prevents (2) from using i32 along with the &lt;{packed}&gt; structs for the In-Memory representation?

E.g., 

@global = external global i32

%flattened_data = type &lt;{ i8, i32, i32, i32, i32 }&gt;

@x_flattened_as_struct = global %flattened_data &lt;{
  i8 1,
  i32 513,
  i32 ptrtoint (i32* @global to i32),
  i32 1027,
  i32 add (i32 ptrtoint (i32* @global to i32), i32 4)
}&gt;
</ns0:content><ns0:updated>2013-04-10T23:34:09.000Z</ns0:updated><ns0:published>2013-04-10T23:34:09.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>-robertm@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 8 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3113#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3113/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>