<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0AGSH47eCl7ImA9WhJbEEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2554/comments/full/14</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">LTOModule is what requests the TargetMachine. This is mostly used to determine name mangling.  E.g., for Darwin Targets you need "_" prefixes, and X86/ARM use ".L" for private symbols, while other machines don't etc.

We can build a dummy Mangler in LTOModule, but the object lifetimes are bit uglier.  This seems to work, but I guess it's just which approach is messier?

I can send a patch and you guys can compare the invasive of the changes, or maybe we can ask llvm devs for opinions...</ns0:content><ns0:updated>2012-09-20T00:08:49.000Z</ns0:updated><ns0:published>2012-09-20T00:08:49.000Z</ns0:published><ns2:updates /><ns0:title>Comment 14 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2554#c14" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2554/comments/full/14" rel="self" type="application/atom+xml" /></ns0:entry>