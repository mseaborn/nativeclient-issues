<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0AMRn47eCl7ImA9Wx9WFkg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/829/comments/full/6</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=3517

------------------------------------------------------------------------
r3517 | cbiffle@google.com | Wed Oct 20 15:10:59 PDT 2010

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/service_runtime/nacl_text.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/service_runtime/nacl_syscall_common.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/shared/srpc/imc_buffer.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/service_runtime/gio_shm_test.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/desc/linux/nacl_desc_sysv_shm.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/desc/nacl_desc_imc_shm.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/desc/nrd_xfer.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/desc/nacl_desc_base.c?r1=3517&amp;r2=3516&amp;pathrev=3517
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/shared/platform/nacl_host_desc.h?r1=3517&amp;r2=3516&amp;pathrev=3517

Split NaClIsNegErrno into two functions: NaClPtrIsNegErrno for use on (u)intptr_t, and NaClSSizeIsNegErrno for use on ssize_t.  Both functions take a pointer operand instead of a value.  This avoids implicit promotion that can prevent any values from being detected as negative, as discussed in the bug.  In turn, this should prevent this bug from resurfacing.

GCC, at least, does the right thing here when optimizations are enabled.  Despite having its address taken, the local is not spilled.  NaClDescSysvShmUnmapCommon, in nacl_desc_sysv_shm.c, is the best example of this: I had to introduce a local to hold the result, but the assembly output is as simple as can be (x86-32 shown):
 8065b13:       ff 50 08                call   *0x8(%eax)
 8065b16:       66 31 c0                xor    %ax,%ax
 8065b19:       3d 00 00 ff ff          cmp    $0xffff0000,%eax
 ...and so on.

To GCC's credit, it was completely optimizing out the old function, which was never capable of returning 1. :-)

BUG= http://code.google.com/p/nativeclient/issues/detail?id=829
Review URL: http://codereview.chromium.org/3777010
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-01-21T23:16:27.000Z</ns0:updated><ns0:published>2011-01-21T23:16:27.000Z</ns0:published><ns2:updates /><ns0:title>Comment 6 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=829#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/829/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>