<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CE4DQH47eCl7ImA9Wx9UGUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/642</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">In order for Javascript objects to handle requests on behalf of a NaCl
subprocess, as described in issue 607, there needs to be a mechanism
for Javascript to be able to asynchronously receive messages from the
NaCl subprocess.

There is some support for this in the NPAPI interface provided by the
plugin, but it has some problems:

1) Every message sent to the Javascript object actually requires 5 IMC
messages:

 * NaCl -&amp;gt; plugin: NPN_PluginThreadAsyncCall(closure_id)
 * plugin -&amp;gt; NaCl: call closure_id
    * NaCl -&amp;gt; plugin: synchronously invoke Javascript object: obj(args)
    * plugin -&amp;gt; NaCl: return result of obj(args)
 * NaCl -&amp;gt; plugin: return from closure

2) This leaves the renderer/browser process blocking, waiting for the
NaCl subprocess.

3) The plugin's NPAPI layer must be initialised by the NaCl subprocess
before this can be used, but the dynamic linker is not in a good
position to do this.


I propose to add a new mechanism by which a Javascript object can
receive asynchronous messages.  This should be simple to use from
untrusted code.

The basic idea is to add a new method to the plugin object:

  plugin.makeSocket(callback) -&amp;gt; fd

This creates a socket pair, returning an FD that can be passed to the
NaCl process via existing mechanisms (including SRPC calls).  It
listens for messages sent to this FD and invokes the callback for each
message.</ns0:content><ns0:updated>2011-02-17T22:49:31.000Z</ns0:updated><ns0:published>2010-06-23T22:24:13.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/cbiffle@google.com/</ns2:uri><ns2:username>cbiffle@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/krasin@google.com/</ns2:uri><ns2:username>krasin@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Plugin: Add ability to receive messages asynchronously in Javascript</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-Pepper</ns2:label><ns2:label>Milestone-Baltic-Sea</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/642/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=642" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/642" rel="self" type="application/atom+xml" /><ns2:stars>4</ns2:stars><ns2:blockedOn>
			<ns2:id>652</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blockedOn><ns2:blocking>
			<ns2:id>607</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2011-02-03T22:54:11.000Z</ns2:closedDate><ns2:id>642</ns2:id></ns0:entry>