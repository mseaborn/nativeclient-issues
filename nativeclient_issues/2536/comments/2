<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkcDRX47eCl7ImA9WhRUEEU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2536/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Two problems with this approach occurred to me:

* Stack overflow:  We won't be able to catch untrusted stack overflows.  The Windows kernel will fail to write a stack frame to an unwritable page and will kill the process.

Handling stack exhaustion is an important use case, though, especially since stack exhaustion will vary across architectures, and PNaCl will not make this consistent.

I think Windows' "guard pages" feature is how Windows allows processes to recover from stack exhaustion enough to report these crashes.  Making this usable by NaCl is probably difficult.

* Red zone:  It's very unlikely that the Windows kernel will respect the red zone -- the 128 bytes below %rsp that is part of the Unix x86-64 ABI, that Unix kernels won't clobber when invoking a signal handler.  The Windows kernel will likely clobber this.  This is an issue if we want to return from a fault or dump local variables that might have been stored in the red zone.

The solution is to disable the red zone on NaCl.  We can make "-mno-red-zone" the default for nacl-gcc.  This is an ABI change of sorts, but existing code doesn't have to be recompiled unless it wants to use exception handling for certain use cases.
</ns0:content><ns0:updated>2012-01-20T19:34:34.000Z</ns0:updated><ns0:published>2012-01-20T19:34:34.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>k...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2536#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2536/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>