<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0IGRH47eCl7ImA9Wx5WFkU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/777/comments/full/7</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">I discovered that tests/syscall_return_sandboxing could easily be
re-enabled, and I have done so.  It only got disabled for ARM because
it handled constants wrongly and would fail validation if the linker
moved symbols around.  See http://codereview.chromium.org/3436015

I think we should re-enable tests/dynamic_code_loading in the same
way.  There is a special case in llvm-fake.py that handles
tests/syscall_return_sandboxing but it should be possible to
generalise it.</ns0:content><ns0:updated>2010-09-28T14:52:05.000Z</ns0:updated><ns0:published>2010-09-28T14:52:05.000Z</ns0:published><ns2:updates /><ns0:title>Comment 7 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=777#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/777/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>