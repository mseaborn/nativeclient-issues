<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUMGQ347eCl7ImA9Wx5WFkQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/777/comments/full/8</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">It is not a good idea to use assembler in any test involving pnacl.

While this may work today due to some lucky circumstance, e.g. the special casing
you observed in  llvm-fake.py this likely to break in the future and/or will cause
us tremendous support problems.

The problem is that pnacl's .o files are really  bitcode files and should not contain any
assembler. How you got the  syscall_return_sandboxing test to work is actually rather mysterious to me. 

I would much rather follow the two pronged approach we started two weeks ago.
1) Reduce the assembler code  as much as possible 2) convert the remaining assembler into data arrays.

"2)" might sound horrible at first but we also switched the verifier test operate this way. cbiffle posted his rationale for that here:

http://code.google.com/p/nativeclient/issues/detail?id=823

</ns0:content><ns0:updated>2010-09-28T17:03:42.000Z</ns0:updated><ns0:published>2010-09-28T17:03:42.000Z</ns0:published><ns2:updates /><ns0:title>Comment 8 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=777#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/777/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>