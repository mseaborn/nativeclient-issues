<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0QCSX47eCl7ImA9WhNXFUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3158/comments/full/8</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=10364

------------------------------------------------------------------------
r10364 | bsy@google.com | 2012-12-03T21:11:26.766806Z

Changed paths:
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/SConstruct?r1=10364&amp;r2=10363&amp;pathrev=10364
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/memcheck_test/nacl.scons?r1=10364&amp;r2=10363&amp;pathrev=10364

Add testing scons option tsan_command to work the same way as memcheck_command, and memcheck_trusted_only to skip untrusted code valgrind memcheck tests

These new scons flags helps to enable developers who are using Ubuntu Precise run the valgrind-based tests when there is a valgrind bot failure.  They should also help testing replacement versions of memcheck / tsan scripts too.

Since only valgrind with NaCl patches will be able to pass leak_test, add a scons argument to allow testing with running valgrind on trusted code only.  This is for using vanilla valgrind; this flag would not be used the memcheck_command points to a NaCl-patched version of valgrind.

Add tsan_command option to SConstruct, the same way that memcheck_command works.  This allows testing on Ubuntu Precise machines to pick an alternate version of tsan from the checked-in binary.  In the absence of a new version of tsan, giving the path of a script that skips the tsan command-line arguments and then runs the command that would have run under tsan (currently) works, since we (currently) have no negative tests.

For example, running:

$ buildbot/buildbot_valgrind.sh newlib memcheck_command=/usr/local/valgrind/bin/valgrind,-tool=memcheck memcheck_trusted_only=1 tsan_command=/usr/local/tsan.sh

on a Precise machine works (where /usr/local/tsan.h skips initial --* flags and runs the rest as a command, and /usr/local/valgrind/ is the --prefix location of a build of valgrind 3.8.1).

R= eugenis@google.com,sehr@google.com
BUG= http://code.google.com/p/nativeclient/issues/detail?id=3158

Review URL: https://codereview.chromium.org/11416301
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-12-03T21:16:08.000Z</ns0:updated><ns0:published>2012-12-03T21:16:08.000Z</ns0:published><ns2:updates /><ns0:title>Comment 8 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3158#c8" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3158/comments/full/8" rel="self" type="application/atom+xml" /></ns0:entry>