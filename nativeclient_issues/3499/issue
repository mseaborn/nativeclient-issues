<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck4BRX47eCl7ImA9WhFSFUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3499</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">LLVM's ARM GlobalMerge pass merges global variables so that they can be accessed through a common base pointer to reduce register pressure.

I had to turn this off in https://gerrit.chromium.org/gerrit/gitweb?p=native_client/pnacl-llvm.git;a=commit;h=139165f, because it breaks the PNaCl ABI verifier in streaming mode (see issue 3465).  It would be nice to find a way to turn it back on.

With the FlattenGlobals pass applied, GlobalMerge isn't very useful because it only merges variables with &amp;quot;align 1&amp;quot;.  It would be nice to fix this too.
</ns0:content><ns0:updated>2013-06-18T18:42:34.000Z</ns0:updated><ns0:published>2013-06-18T18:42:34.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:state>open</ns2:state><ns0:title>PNaCl: Get back the benefits of the GlobalMerge pass on ARM</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-ARM</ns2:label><ns2:label>Performance</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3499/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3499" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3499" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3499</ns2:id></ns0:entry>