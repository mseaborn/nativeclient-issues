<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0IDSX47eCl7ImA9Wx9SF0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1230/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Python IMC bindings for trusted processes would be tricky to fit into our build system.

One problem is that Python doesn't do multilib on Linux (32-bit and 64-bit on the same system), but we tend to rely on multilib during development/testing.  Trying to #include &lt;Python.h&gt; when compiling with -m32 on an x86-64 system fails with:
  /usr/include/python2.6/pyport.h:685:2: error: #error "LONG_BIT definition appears wrong for platform (bad gcc/glibc config?)."
We'd have to drop "-m32" when building this and use gcc's default arch.

Other problems are:
 * Using distutils (setup.py) wouldn't fit well with Scons.  But if we compile an extension ourselves we have to work out where the Python headers are installed (e.g. /usr/include/python2.5 vs. /usr/include/python2.6).
 * The "hermetic" Python we pull in on Windows probably doesn't come with header files.

Maybe I should give up on this idea and write C code instead.</ns0:content><ns0:updated>2010-12-08T05:19:38.000Z</ns0:updated><ns0:published>2010-12-08T05:19:38.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1230#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1230/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>