<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEUNQ347eCl7ImA9WhVTEU8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1140</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">As of r3620, we have another confusing build situation.

If you sync to 3620 right now and try to build, it will fail: you'll download a toolchain using pre-r3620 SRPC libraries, and then try to build incompatible code using post-r3620 SRPC APIs.

The bots are green, because the bots run an additional build phase that (as far as I can tell) no developer actually runs: partial_sdk.  This locally rebuilds the libraries that ship with the toolchain.  For example, on Linux, I was able to get unstuck by running:

 ./scons --verbose --mode=nacl_extra_sdk platform=x86-32 --download extra_sdk_update_header install_libpthread extra_sdk_update 

The bots are running this phase to avoid this sort of breaking change.  I suggest that we make the bot way of doing things the official way of doing things: distribute these pre-compiled libraries with the external SDK, but build them during the native_client developer workflow instead of packaging them with the internal toolchain tarball.  The current way of doing this is an optimization, but the partial_sdk build doesn't take that long -- so it's of questionable value and causes cases like right now, when we have to wait minutes to hours for the toolchain bots to catch up.</ns0:content><ns0:updated>2012-02-24T23:31:32.000Z</ns0:updated><ns0:published>2010-11-04T22:15:15.000Z</ns0:published><ns2:status>Obsolete</ns2:status><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Bot partial_sdk phase can mean bots stay green when developer workflows break</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-Infrastructure</ns2:label><ns2:label>Mstone-16</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1140/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1140" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1140" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2012-02-24T23:31:32.000Z</ns2:closedDate><ns2:id>1140</ns2:id></ns0:entry>