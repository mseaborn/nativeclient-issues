<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MNRX47eCl7ImA9WhZVFUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1872/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Actually the performance measurements show a considerable improvement from issue 503's changes, so although I guessed that Mac was 'still slow', this might not be an issue.

mac10.6-newlib-opt:
before: RESULT browser_startup_time.out: MakeDynText_x86-32_nnacl_newlib_static_irt= 396.656000 millisecs
after:  RESULT browser_startup_time.out: MakeDynText_x86-32_nnacl_newlib_static_irt= 14.434000 millisecs

I suppose this is because we're not faulting in and writing to all these pages.  That said, we may be paying a hidden cost if the kernel is writing out all these zeroed pages to /tmp's filesystem in the background.</ns0:content><ns0:updated>2011-05-28T02:24:54.000Z</ns0:updated><ns0:published>2011-05-28T02:24:54.000Z</ns0:published><ns2:updates>
			<ns2:label>Performance</ns2:label></ns2:updates><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1872#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1872/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>