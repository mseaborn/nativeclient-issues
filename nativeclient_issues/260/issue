<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkIBQn47eCl7ImA9WxBVFEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/260</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">32bit validator rejected btX instructions because it never makes sense to 
use them, but for 64bit situation is different (comment is copy-pasted from 
GCC sources):

;; %%% bts, btr, btc, bt.
;; In general these instructions are *slow* when applied to memory,
;; since they enforce atomic operation.  When applied to registers,
;; it depends on the cpu implementation.  They're never faster than
;; the corresponding and/ior/xor operations, so with 32-bit there's
;; no point.  But in 64-bit, we can't hold the relevant immediates
;; within the instruction itself, so operating on bits in the high
;; 32-bits of a register becomes easier.
;;
;; These are slow on Nocona, but fast on Athlon64.  We do require the use
;; of btrq and btcq for corner cases of post-reload expansion of absdf and
;; negdf respectively, so they can never be disabled entirely.

Note especially the last sentence.</ns0:content><ns0:updated>2010-02-17T23:49:13.000Z</ns0:updated><ns0:published>2010-01-15T19:05:34.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Resolve bts issue</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Milestone-GLQuake-x86-64</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>OS-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/260/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=260" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/260" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>134</ns2:id></ns2:blocking><ns2:closedDate>2010-02-17T23:49:13.000Z</ns2:closedDate><ns2:id>260</ns2:id></ns0:entry>