<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CEYNR347eCl7ImA9WhZTF0g.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1561/comments/full/5</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">here abort and _exit are being called from trusted code on trusted stacks.  the defense-in-depth concern is that in the case of a zero-day that permits untrusted code to write to trusted memory (in a less-than-fully-controlled fashion), we want to not depend on the contents of vtables, export function tables, etc, when we detect inconsistencies and decide to bail.  the less dependency on memory contents, the better.</ns0:content><ns0:updated>2011-03-22T00:03:16.000Z</ns0:updated><ns0:published>2011-03-22T00:03:16.000Z</ns0:published><ns2:updates>
			<ns2:label>-Pri-1</ns2:label><ns2:label>Pri-2</ns2:label></ns2:updates><ns0:title>Comment 5 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1561#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1561/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>