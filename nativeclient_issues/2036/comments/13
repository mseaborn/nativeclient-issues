<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkYBRn47eCl7ImA9WhdXGE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2036/comments/full/13</ns0:id><ns0:author>
			<ns0:name>pdox%goo...@gtempaccount.com</ns0:name><ns0:uri>/u/104735739662288482898/</ns0:uri></ns0:author><ns0:content type="html">The code in 254.gap which is being mis-compiled is:

    /* subtract two small integers with a small difference                 */
    /* sub and compare top two bits to check that no overflow occured      */
    if ( (long)hdL &amp; (long)hdR &amp; T_INT ) {
        result = (long)hdL - (long)hdR;
        ov = (int)result;
        if ( ((ov &lt;&lt; 1) &gt;&gt; 1) == ov )
            return (TypHandle)(ov + T_INT);
    }

This code is doing signed bitshift, and expecting certain behavior if an overflow occurs. This seems to be undefined behavior in C?</ns0:content><ns0:updated>2011-08-31T14:15:57.000Z</ns0:updated><ns0:published>2011-08-31T14:15:57.000Z</ns0:published><ns2:updates /><ns0:title>Comment 13 by pdox%goo...@gtempaccount.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2036#c13" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2036/comments/full/13" rel="self" type="application/atom+xml" /></ns0:entry>