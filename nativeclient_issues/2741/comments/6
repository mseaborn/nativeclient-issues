<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D04AR347eCl7ImA9WhVVFkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2741/comments/full/6</ns0:id><ns0:author>
			<ns0:name>jbauman@chromium.org</ns0:name><ns0:uri>/u/jbauman@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Thanks, that patch helps. Now I'm seeing issues with the locks associated with condition variables with NaClAppThreadSetSuspendState, NaClIntrMutexUnlock, and NaClIntrMutexLock. Is there anything that would prevent the fast mutex implementation from working with condition variables?

Also, NaClCopyInTakeLock and NaClCopyInDropLock can be slow due to locks.</ns0:content><ns0:updated>2012-05-10T02:12:26.000Z</ns0:updated><ns0:published>2012-05-10T02:12:26.000Z</ns0:published><ns2:updates /><ns0:title>Comment 6 by jbauman@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2741#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2741/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>