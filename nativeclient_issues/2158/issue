<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkMDQ347eCl7ImA9WhVVFk0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2158</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">If a crash occurs during the shutdown of a NaCl untrusted thread (a NaClAppThread), the signal handler can itself crash while handling it.

This is because NaClSysCommonThreadSuicide() unsets these:
  nacl_sys[thread_idx] = NULL;
  nacl_user[thread_idx] = NULL;
  nacl_thread[thread_idx] = NULL;
and frees the NaClAppThread, but the TLS variable containing thread_idx is left set -- it is set by NaClTlsSetIdx(), but this does not get unset during shutdown.

The signal handler calls NaClTlsGetIdx() and expects to be able to use this index.

Luckily the crash is safe: it should just be a NULL pointer dereference.

The fix is to make setup and teardown mirror each other better.
</ns0:content><ns0:updated>2012-05-09T23:01:12.000Z</ns0:updated><ns0:published>2011-08-17T00:06:22.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>x86-64 signal handler can crash if invoked during NaClAppThread shutdown</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>FaultHandler</ns2:label><ns2:label>Mstone-15</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2158/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2158" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2158" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2158</ns2:id></ns0:entry>