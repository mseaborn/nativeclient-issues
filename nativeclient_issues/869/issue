<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkMNSX47eCl7ImA9WhZbFko.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/869</ns0:id><ns0:author>
			<ns0:name>espind...@google.com</ns0:name><ns0:uri>/u/101432766050863658364/</ns0:uri></ns0:author><ns0:content type="html">Current PNaCl has two different ways of compiling stuff:

*) Use the ARM cc1 and then target the resulting IL to ARM, X86 or X86-64. This is used by almost all the code and is the only user visible one right now.

*) Use the corresponding cc1. This is used to build libgcc. This is needed because the ARM cc1 has no idea what the x86 registers are for example and cannot understand inline asm for X86.

The second mode looks better, but it is known to broken for things like the x86-64 cc1 using 64 bit pointers. This is what was breaking crtend.o for example. There are likely more subtle issues in which the the cc1 differ.

We have some options for fixing it:

*) Modify all 3 cc1 binary to behave correctly. This looks like a lot of work and *very* brittle.
*) Switch to a compiler that supports multiple targets and implement support for the arm-nacl, x86-nacl, x86-64-nacl and pnacl-nacl triples. Doing this in gcc would be a tremendous amount of work, so it is probably better to just switch to clang.

To switch to clang it is probably better to first switch off the other bits of infrastructure included in gcc:

*) libgcc gets replaced with compiler-rt + libunwind
*) crtbegin.o and crtend.o get replaced with bsd equivalents.
*) libstc++ gets extracted so that it builds independently
</ns0:content><ns0:updated>2011-06-21T16:41:38.000Z</ns0:updated><ns0:published>2010-09-03T18:04:36.000Z</ns0:published><ns2:status>Obsolete</ns2:status><ns2:owner>
			<ns2:uri>/u/robertm@google.com/</ns2:uri><ns2:username>robertm@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/104735739662288482898/</ns2:uri><ns2:username>pdox%goo...@gtempaccount.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/102292187274959663599/</ns2:uri><ns2:username>jvo...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>We need a new compiler</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>Milestone-Caviar</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/869/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=869" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/869" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-06-21T16:41:38.000Z</ns2:closedDate><ns2:id>869</ns2:id></ns0:entry>