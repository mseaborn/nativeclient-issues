<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkMCSX47eCl7ImA9Wx5QFU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/869/comments/full/1</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">I am not quite sure whether I understand the problem compeletely.
Gcc contains a bunch of code which is part of differet libraries.

libstdc++ ends up as a bitcode library so it better does not contain any inline assembly.

libgcc ends up as a native libray but there are three different cases to consider
depending on the filetype of the input source files:
 
* pure .c source files: I assume those will be converted to bitcode first and then
                       via llvm-fake to assembler 
* pure .s/.S files: we have to fix them up by hand, 

* mixed, .c with inline asm: this is the hard case, I assume we could break those up
                             in .c and .s files.

Which one of these is causing us problems?
What is compiler-rt + libunwind doing different to avoid the problem?

</ns0:content><ns0:updated>2010-09-03T18:27:48.000Z</ns0:updated><ns0:published>2010-09-03T18:27:48.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=869#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/869/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>