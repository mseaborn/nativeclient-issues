<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkIHRH47eCl7ImA9WhNUGEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2031</ns0:id><ns0:author>
			<ns0:name>chris.ro...@gmail.com</ns0:name><ns0:uri>/u/109476958443797771315/</ns0:uri></ns0:author><ns0:content type="html">The PpbPdfRpcServer::PPB_PDF_SearchString interface contains an integer overflow that may lead to heap memory corruption. On 32bit x86 this is very low severity due to memory constraints. This code should only be reachable by the Google PDF plugin so the severity is even lower.
                         
Starting on line 129 of native_client/src/shared/ppapi_proxy/browser_ppb_pdf_rpc_server.cc

...
  int pp_result_count = 0;
  PPBPDFInterface()-&amp;gt;SearchString(
      instance,
      reinterpret_cast&amp;lt;unsigned short*&amp;gt;(string),
      reinterpret_cast&amp;lt;unsigned short*&amp;gt;(term),
      case_sensitive ? PP_TRUE : PP_FALSE,                                
      &amp;amp;pp_results,
      &amp;amp;pp_result_count);
  *results_size = std::min(*results_size,
                           pp_result_count * kPpbPrivateFindResultBytes);
  memcpy(results, pp_results, *results_size);
  free(pp_results);
  *count = static_cast&amp;lt;int32_t&amp;gt;(pp_result_count);
...

The 'pp_result_count * kPpbPrivateFindResultBytes' multiplication on line 138 may overflow if pp_result_count = (MAX_INT/8)+1 which would assign a negative value to results_size (which is of type nacl_abi_size_t) which would overflow the buffer in the memcpy.</ns0:content><ns0:updated>2013-01-10T21:48:55.000Z</ns0:updated><ns0:published>2011-07-14T21:53:56.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/106710594185928520364/</ns2:uri><ns2:username>bbu...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/101953680983947802512/</ns2:uri><ns2:username>pol...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/brettw@chromium.org/</ns2:uri><ns2:username>brettw@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/113511172007743761909/</ns2:uri><ns2:username>cstefan...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/110088500044003719179/</ns2:uri><ns2:username>jsc...@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>PpbPdfRpcServer::PPB_PDF_SearchString Potential Heap Overflow</ns0:title><ns2:label>Security</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>Mstone-15</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2031/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2031" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2031" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-08-12T18:54:53.000Z</ns2:closedDate><ns2:id>2031</ns2:id></ns0:entry>