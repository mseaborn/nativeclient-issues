<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ak8MQn47eCl7ImA9WhJaE0g.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3069/comments/full/1</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">The "heavy" dependencies like malloc, etc. can be eliminated by switching to a more standard nexe layout where phdr becomes visible to the program.

IIRC:
With the phdr we will get access to the EH_FRAME segment which is generated by the linker and contains a address sorted table of eh entries/ranges.
Without this table libgcc_eh does the sorting itself requiring extra storage
which it allocates via malloc().
Another way to disable this use of malloc is to comment out that sorting code (there are probably already some #defines for that) and switch the unwinder to use 
linear seach (instead of binary search) when determining unwind regions. 
</ns0:content><ns0:updated>2012-10-04T13:54:43.000Z</ns0:updated><ns0:published>2012-10-04T13:54:43.000Z</ns0:published><ns2:updates>
			<ns2:blockedOnUpdate>nativeclient:2775</ns2:blockedOnUpdate></ns2:updates><ns0:title>Comment 1 by robertm@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3069#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3069/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>