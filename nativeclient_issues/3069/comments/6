<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUIERX47eCl7ImA9WhBVGE4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3069/comments/full/6</ns0:id><ns0:author>
			<ns0:name>eli...@chromium.org</ns0:name><ns0:uri>/u/112264824292994369940/</ns0:uri></ns0:author><ns0:content type="html">One of the proposed approaches to simplify the solution was to declare __[de]register_frame_info as __attribute__((weak)), so that they don't actually fail resolving when libgcc_eh.a isn't linked. Unfortunately, this approach doesn't work due to the way the linker handles weak symbols and .a archives. In practice, the linker doesn't link libgcc_eh.o from libgcc_eh.a if the only requests for its symbols are weak. This means that there will be no way to support an unstable build in which we do want libgcc_eh to be linked.

From 'man ld':

  "The linker will search an archive only once, at the location where it is specified on the command line.  If the archive defines   a symbol which was undefined in some object which appeared before the archive on the command line, the linker will include the appropriate file(s) from the archive."

A weak symbol is not "undefined". Therefore, the linker does not pull libgcc_eh from the archive.
</ns0:content><ns0:updated>2013-04-24T19:58:24.000Z</ns0:updated><ns0:published>2013-04-24T19:58:24.000Z</ns0:published><ns2:updates /><ns0:title>Comment 6 by eli...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3069#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3069/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>