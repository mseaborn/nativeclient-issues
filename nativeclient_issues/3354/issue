<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0AMQH47eCl7ImA9WhBVEUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3354</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">On windows, MapViewOfFileEx does not permit a PROT_NONE equivalent mapping.  In our current mmap code, we just simulate PROT_NONE by removing the file mapping and then VirtualAlloc with PAGE_NOACCESS.  This is a hack, but was okay, since there wasn't any way to &amp;quot;reopen&amp;quot; the access.

With the introduction of mprotect, we should allow for the use case of mmap with PROT_NONE, then mprotect with PROT_READ to enable access to the file contents.  This means:

We have to continue to use VirtualAlloc with PAGE_NOACCESS, since MapViewOfFileEx does not have a FILE_MAP_NONE access, and even if we mapped it initially with FILE_MAP_READ and tried to use VirtualProtect to close the access (creating a timing window), the use VirtualProtect with PAGE_NOACESS is incompatible with file mapping objects (!?@#$) and will fail.  So, this means that we should continue to substitute in pages using VirtualAlloc with PAGE_NOACCESS when mmap with PROT_NONE is used, and mprotect will have to understand this and on shm pages the transition from PROT_NONE to anything else will have to undo this page substitution, restoring the mapping by unmapping the VirtualAlloc'd memory and restoring from the file mapping object associated with that memory region.

And this implies that NaClVmmapEntry must retain references to the objects -- and ranges/offsets etc -- used to provide backing store, since the NaClDescEffLdr interface must have the memory object, when on Windows, to restore the memory mapping.  (This reference was removed in an earlier &amp;quot;cleanup&amp;quot; CL.)</ns0:content><ns0:updated>2013-04-16T23:43:01.000Z</ns0:updated><ns0:published>2013-03-26T18:29:44.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:cc>
			<ns2:uri>/u/117980525918552686609/</ns2:uri><ns2:username>pho...@chromium.org</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>shm mmap PROT_NONE and later mprotect PROT_READ (or PROT_WRITE) exposes ZFOD page instead of file contents</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-Windows</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>PlatformDifference</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3354/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3354" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3354" rel="self" type="application/atom+xml" /><ns2:stars>3</ns2:stars><ns2:blockedOn>
			<ns2:id>3355</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blockedOn><ns2:id>3354</ns2:id></ns0:entry>