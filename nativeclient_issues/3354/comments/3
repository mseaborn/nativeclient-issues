<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEIEQH47eCl7ImA9WhBXE04.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3354/comments/full/3</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">One problem with the page mapping swizzling approach is that on mprotect PROT_NONE, the unmapping of the shm page that is MAP_PRIVATE may lose the dirty pages that were MapViewOfFileEx with MAP_COPY.  The fact we can retain a reference to the file mapping object may make the kernel retain these pages anyway until all references (including implicit ones from the kernel's virtual memory map) go to zero.

An experiment is needed to check this.

If holding the file mapping object reference allows us to get at diritied MAP_PRIVATE pages, that would be great.  If the file mapping object only keeps changes to changes when MAP_SHARED is used, then what this implies is that the transition to / from PROT_NONE may have to be more expensive in order to maintain POSIX semantics:  we can diff the pages to determine which are dirty, and keep a copy of the dirty pages on transition to PROT_NONE, so that on transition away from PROT_NONE we can replay the changes after we re-map the file mapping object, again with MAP_COPY, possibly having to temporarily make the page writable before VirtualProtecting it to PAGE_READ (if target is PROT_READ) or PAGE_WRITECOPY (if restoring a MAP_PRIVATE mapping to PROT_READ|PROT_WRITE).

If we feel that this POSIX emulation is too expensive -- we want approximate performance parity -- then we might consider requiring that mprotect PROT_NONE on mmap'd file pages to be disallowed.  This has its own ugly implications, however, wrt portability.</ns0:content><ns0:updated>2013-03-26T22:21:41.000Z</ns0:updated><ns0:published>2013-03-26T22:21:41.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3354#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3354/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>