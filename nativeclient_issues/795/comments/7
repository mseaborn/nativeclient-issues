<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck4EQ347eCl7ImA9Wx5bE0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/795/comments/full/7</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">we current already get an fd for /dev/urandom from chrome on linux and osx.  this is used by the service runtime's internal random number generator.  on windows we can call rand_s directly.

exposing an rng NaCl descriptor that allows nexes to read from this (or a cryptographically secure pseudorandom number generator seeded from this) should be relatively easy -- a few days of work at most.  the harder part is deciding on a nice namespace for accessing such resources, since we don't implement our own file system.</ns0:content><ns0:updated>2010-10-29T22:21:42.000Z</ns0:updated><ns0:published>2010-10-29T22:21:42.000Z</ns0:published><ns2:updates /><ns0:title>Comment 7 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=795#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/795/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>