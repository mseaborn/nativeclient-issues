<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DU8MQH47eCl7ImA9Wx9WFkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/251/comments/full/13</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=1328

------------------------------------------------------------------------
r1328 | cbiffle@google.com | Thu Jan 14 16:47:15 PST 2010

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/service_runtime/linux/sel_memory.c?r1=1328&amp;r2=1327&amp;pathrev=1328

Altered the page_alloc_intern operation, on Linux, to allocate but not commit memory.  This allows us to squat on our address space on Linux ARM systems with relatively little RAM+swap.  It also appears critical for x86-64, where we allocate (without committing) 84GB of virtual for each untrusted module.

Opinions requested: is changing this particular operation a bad idea?  Should I instead allow callers to pass in MMAP options, and have the Linux squat code pass in NORESERVE?  FWIW the change here does appear to work.

See bug http://code.google.com/p/nativeclient/issues/detail?id=251
Review URL: http://codereview.chromium.org/545062
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-01-21T22:11:21.000Z</ns0:updated><ns0:published>2011-01-21T22:11:21.000Z</ns0:published><ns2:updates /><ns0:title>Comment 13 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=251#c13" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/251/comments/full/13" rel="self" type="application/atom+xml" /></ns0:entry>