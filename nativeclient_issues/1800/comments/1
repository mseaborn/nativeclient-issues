<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUAHRH47eCl7ImA9WhZWEU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1800/comments/full/1</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">is this a win32 app running on a 64-bit windows OS?  if so, this is known and we do not plan on trying to run the 32-bit sandbox on a 64-bit windows OS -- when windows is 64 bits, we will only use the x86-64 sandbox.  if this refers to the 32-bit sandbox running a 32-bit windows OS, then this is a major concern:  we did this experiment a couple of years ago, and we verified that GS was preserved across context switches, so this is a recent change to windows and, if not viewed as a bug by MSFT and fixed, would require major revisions to the 32-bit sandbox design to accommodate 32-bit windows.</ns0:content><ns0:updated>2011-05-11T18:15:35.000Z</ns0:updated><ns0:published>2011-05-11T18:15:35.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1800#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1800/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>