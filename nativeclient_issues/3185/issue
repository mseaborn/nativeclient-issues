<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck8ARH47eCl7ImA9WhNbEUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3185</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">On ARM, the following TLS initialisation code (used in irt_thread.c, nc_thread.c etc.) can overrun the malloc()'d block:

  size_t combined_size = __nacl_tls_combined_size(sizeof(*tdb));
  void *combined_area = malloc(combined_size);
  void *irt_tp = __nacl_tls_initialize_memory(combined_area, sizeof(*tdb));

__nacl_tls_combined_size() returns a size value that is too small for what __nacl_tls_initialize_memory() writes.

The reason is that combined_area is laid out as follows:

 * padding1:  padding so that thread_pointer is aligned to tls_alignment
 * tdb:  libpthread's thread info struct
 --- thread_pointer points here
 * header:  8-byte header for ARM
 * padding2:  padding so that tls_data is aligned to tls_alignment
 * tls_data:  TLS variables (tdata and tbss)

Both padding1 and padding2 may be upto tls_alignment bytes each, but __nacl_tls_combined_size() only adds enough padding to account for one of these padding regions.

The attached patch adds an assertion which demonstrates the problem and causes the IRT's initialisation to fail with the following output:

combined_area=0x3eff0008
tp=0x3eff0050
assertion &amp;quot;((char *) combined_area)[combined_size] == 99&amp;quot; failed: file &amp;quot;src/untrusted/irt/irt_thread.c&amp;quot;, line 72, function: __pthread_initialize
</ns0:content><ns0:updated>2013-01-14T16:27:25.000Z</ns0:updated><ns0:published>2012-12-01T18:32:33.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/109286297231979736865/</ns2:uri><ns2:username>mcgra...@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>ARM TLS initialisation can write outside of allocated memory block</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-Newlib</ns2:label><ns2:label>Arch-ARM</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3185/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3185" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3185" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>3184</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2013-01-11T23:12:18.000Z</ns2:closedDate><ns2:id>3185</ns2:id></ns0:entry>