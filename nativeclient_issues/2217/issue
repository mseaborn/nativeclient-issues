<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUUGQH47eCl7ImA9WhRaE0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2217</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">nacl-gcc generates inefficient code for accessing TLS variables.  It fails to reuse the result of __nacl_read_tp.

For example:

$ cat nacl_tls_access.c
__thread int tls_var;
void bar();
void foo() {
  tls_var++;
  bar();
  tls_var++;
  bar();
  tls_var++;
}

$ nacl nacl-gcc -m64 nacl_tls_access.c -S -o - -O3
...
foo:
.LFB0:
        .cfi_startproc
        pushq   %rbx
        .cfi_def_cfa_offset 16
        .cfi_offset 3, -16
        call    __nacl_read_tp
        movq    %rax, %rbx
        call    __nacl_read_tp
        movl    %nacl:tls_var@TPOFF(%r15,%rax), %eax
        addl    $1, %eax
        movl    %eax, %nacl:tls_var@TPOFF(%r15,%rbx)
        xorl    %eax, %eax
        call    bar
        call    __nacl_read_tp
        movq    %rax, %rbx
        call    __nacl_read_tp
        movl    %nacl:tls_var@TPOFF(%r15,%rax), %eax
        addl    $1, %eax
        movl    %eax, %nacl:tls_var@TPOFF(%r15,%rbx)
        xorl    %eax, %eax
        call    bar
        call    __nacl_read_tp
        movq    %rax, %rbx
        call    __nacl_read_tp
        movl    %nacl:tls_var@TPOFF(%r15,%rax), %eax
        addl    $1, %eax
        movl    %eax, %nacl:tls_var@TPOFF(%r15,%rbx)
        popq    %rbx
        popq    %r11
        nacljmp %r11d,%r15
...

This applies to x86-64 for all code, and to x86-32 for IRT code.

This issue is for the toolchain only.  Issue 221 is similar but vaguer since it suggests TCB changes.
</ns0:content><ns0:updated>2012-02-16T09:07:01.000Z</ns0:updated><ns0:published>2011-08-30T23:39:02.000Z</ns0:published><ns2:status>Accepted</ns2:status><ns2:owner>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>nacl-gcc generates multiple calls to __nacl_read_tp per function</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GCC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:label>Performance</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>CoreRuntime</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2217/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2217" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2217" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2217</ns2:id></ns0:entry>