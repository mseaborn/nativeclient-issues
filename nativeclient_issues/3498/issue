<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkEFRH47eCl7ImA9WhFSFEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3498</ns0:id><ns0:author>
			<ns0:name>kschi...@google.com</ns0:name><ns0:uri>/u/108470876877739532758/</ns0:uri></ns0:author><ns0:content type="html">The current PNaCl bitcode reader and writer assume that instructions are processed one at a time, and a separate record is generated for each instruction. There are several patterns within the bitcode file where if instructions were merged (while in the bitcode file), the bitcode file could be shrunk.

For example, we commonly generate the instruction pair
    %j = inttoptr i32 %i to typ*
    %k = load typ* %j, align n
in IR. The inttoptr instruction can be merged into a single load instruction when writing (by lifting %i in place of %j), so long as the reader adds back the corresponding intoptr.
</ns0:content><ns0:updated>2013-06-17T17:36:55.000Z</ns0:updated><ns0:published>2013-06-17T17:36:55.000Z</ns0:published><ns2:status>Started</ns2:status><ns2:owner>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>Add ability to merge multiple instructions in the PNaCl bitcode file format</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>PNaCLABI</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3498/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3498" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3498" rel="self" type="application/atom+xml" /><ns2:stars>3</ns2:stars><ns2:id>3498</ns2:id></ns0:entry>