<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUMAQn47eCl7ImA9WhBQF0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3347/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The plan for PNaCl ABI stability is to expand out any GlobalAliases in the LLVM IR.  Once we have a pass to do that, we can run it before the ExpandTls pass.  That might be simpler than extending ExpandTls to know how to deal with GlobalAliases.

Where does the GlobalAlias come from in the source code being compiled?  Is someone using __attribute__((alias("foo")))?

The reference to "__libc_resp" in the reproducer suggests that this comes from using PNaCl with nacl-glibc, which we probably need to drop support for.  Is the reproducer the SSH client?</ns0:content><ns0:updated>2013-03-20T16:37:23.000Z</ns0:updated><ns0:published>2013-03-20T16:37:23.000Z</ns0:published><ns2:updates>
			<ns2:summary>"-nacl-expand-tls" pass gives an assertion failure on GlobalAliases</ns2:summary></ns2:updates><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3347#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3347/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>