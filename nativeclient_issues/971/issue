<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUYNQH47eCl7ImA9WhdXE0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/971</ns0:id><ns0:author>
			<ns0:name>dmichael@google.com</ns0:name><ns0:uri>/u/dmichael@google.com/</ns0:uri></ns0:author><ns0:content type="html">&lt;b&gt;What version of the SDK are you using?&lt;/b&gt;
native_client r3419
&lt;b&gt;What version of the runtime are you using?&lt;/b&gt;
r3419
&lt;b&gt;On what operating system?&lt;/b&gt;
Linux
&lt;b&gt;What browser are you using?&lt;/b&gt;
N/A
&lt;b&gt;Please include version information for both the OS and the browser.&lt;/b&gt;
Goobuntu Lucid Lynx

&lt;b&gt;What steps will reproduce the problem?&lt;/b&gt;
1.  Try to use printf with the C99 PRId32 format specifier, e.g.:
#include &amp;lt;inttypes.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main()
{
  uint32_t i = 0;
  printf(&amp;quot;%&amp;quot; PRIu32, i);
}
2.  Attempt to compile.

&lt;b&gt;What is the expected output? What do you see instead?&lt;/b&gt;
Successful compile, &amp;quot;0&amp;quot; as output.

Instead, I get the following:
inttype_test.cc:7: error: format '%u' expects type 'unsigned int', but argument 5 has type 'uint32_t' [-Wformat]


&lt;b&gt;Please provide any additional information below and attach any relevant&lt;/b&gt;
&lt;b&gt;source files.&lt;/b&gt;
If I use nacl_inttypes.h and use NACL_PRIu32, it works fine, but I don't think I should have to resort to non-standard code for this.  (Note PRIu64 works fine;  I haven't tested other types to see how extensive the inconsistency might be).

I looked at nacl_inttypes.h, and it has the following comment:

/*
 * This works around a bug in nacl-newlib.  Newlib's stdint.h defines
 * uint32_t as unsigned long int for NaCl, while newlib's inttypes.h
 * seems to think that uint32_t is unsigned int.  This means that
 * using newlib's PRIu32 causes a -Wformat warning from gcc.
 */

So why don't we modify/patch nacl-newlib so this problem doesn't exist, and possibly file a bug for newlib to get the change upstream?

Maybe this is a philosophical issue that's been well covered...  but I would have thought the preference would be to let standards-conforming code &amp;quot;just work&amp;quot; without requiring nacl-specific modifications.</ns0:content><ns0:updated>2011-08-26T18:26:31.000Z</ns0:updated><ns0:published>2010-10-11T16:23:47.000Z</ns0:published><ns2:status>WontFix</ns2:status><ns2:state>closed</ns2:state><ns0:title>PRIu32 format specifier not recognized (must use NACL_PRIu32)</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-Newlib</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Mstone-15</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/971/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=971" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/971" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-08-26T18:26:31.000Z</ns2:closedDate><ns2:id>971</ns2:id></ns0:entry>