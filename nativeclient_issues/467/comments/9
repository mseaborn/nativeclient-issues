<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ak8GSX47eCl7ImA9WxFRFUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/467/comments/full/9</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">This was my fault.  I didn't take into account that switching from shm_open() to open() was obviously not 
going to work in the Mac sandbox.  Doh.  Thanks for looking into this.  I missed your note that "NaCl 
change 2097 fails because of the Mac sandbox" when I skimmed your post yesterday but the problem is obvious 
now.

I have posted http://codereview.chromium.org/1810007/show.  It's a temporary fix which will allow the Mac 
sandbox and dynamic loading to work, but not at the same time.

FWIW, I investigated the Mac shm_open() + PROT_EXEC issue a bit more today, in case NaCl was doing 
something avoidable that prevented PROT_EXEC from working.  It seems not.

In xnu-1228.12.14/bsd/kern/posix_shm.c, pshm_map() passes max_protection=VM_PROT_DEFAULT 
(VM_PROT_READ|VM_PROT_WRITE) to vm_map_enter_mem_object().  So it seems that blocking PROT_EXEC is built 
in.  I found the code at &lt;http://www.opensource.apple.com/release/mac-os-x-1057/&gt;.
</ns0:content><ns0:updated>2010-04-29T13:47:08.000Z</ns0:updated><ns0:published>2010-04-29T13:47:08.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=467#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/467/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>