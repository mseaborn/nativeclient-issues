<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CU8NQH47eCl7ImA9WxBbEk8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/344/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">&gt; We can allow bind/connect from within the sandbox, but in general
&gt; that is something we'd prefer to avoid -- we don't want an exploited
&gt; renderer to be able to connect to the local dbus daemon, etc.

Right.  NaCl's IMC library allocates random abstract-namespace domain
socket names, which it bind()s and connect()s on.  It passes around
these randomly-allocated names (which *mostly* are not exposed to
"userland" but are wrapped as NaCl descriptors) instead of passing
around socket FDs.

Now, the seccomp sandbox *could* apply a prefix to these
abstract-namespace strings so that sel_ldr can't connect() to DBus
etc.  But I would prefer to replace the randomly-allocated names with
SOCK_SEQPACKET socket FDs created with socketpair(), and not use
bind()/connect() at all (at least on Linux).

The randomly-allocated names are mostly a hangover from the
corresponding Windows and Mac OS X implementations.


&gt; I went to some length to have the browser create sockets on behalf
&gt; of the renderer in the plugin implementation: to open a channel
&gt; between the renderer and a plugin, the browser creates a socketpair,
&gt; then hands one end to the renderer and one end to the plugin.

Makes sense.  You don't want the browser to read/write/poll an FD that
it has received from another process in case it is an unexpected type
of FD (not a socket) with unusual behaviour.  However, in
render_sandbox_host_linux.cc the browser does sendmsg() on an FD it
has received from a renderer process.
</ns0:content><ns0:updated>2010-03-10T12:24:51.000Z</ns0:updated><ns0:published>2010-03-10T12:24:51.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>e...@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=344#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/344/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>