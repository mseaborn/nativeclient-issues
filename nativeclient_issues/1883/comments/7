<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkcASX47eCl7ImA9WhZUE0Q.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1883/comments/full/7</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Ivan and I realised that there is a hack that allows MAP_ANONYMOUS-allocated pages to be mapped twice with different permissions -- but only as long as they are mapped into different processes, via fork()!  Hence, in NaCl, we could safely write to the dynamic code region by fork()ing a subprocess which mprotect()s the dynamic code area in place to make it locally writable.  An example is attached.

Incidentally, seccomp-sandbox uses a similar trick.</ns0:content><ns0:updated>2011-06-06T22:07:28.000Z</ns0:updated><ns0:published>2011-06-06T22:07:28.000Z</ns0:published><ns2:updates /><ns0:title>Comment 7 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1883#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1883/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>