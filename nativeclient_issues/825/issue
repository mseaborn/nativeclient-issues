<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0YAQn47eCl7ImA9WhZXEUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/825</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">Currently, the ARM validator tests use canned program fragments.  Most of these fragments were written by the same chap who wrote the validator itself, making them somewhat suspect: it's possible that they contain unstated assumptions and miss corner cases.  (I mean, would *you* trust an engineer who talks about himself in the third person in bug reports?)

The proper fix to this will be general test-pattern generation (TPG), but since that's at least a couple months out, we can add some simple test-pattern *modulation*.  Specifically,
- Parameterize the code fragments in terms of the registers they operate on, and modulate them.  My Haskell TPG framework does this and it hasn't been hard, despite being in Haskell.
- For patterns that contain &amp;quot;don't-care&amp;quot; instruction slots -- for example, patterns that just need to *not* contain a mask -- we could swap out the instruction in that slot to test interactions.
- Automagically bump the address alignment around, since most two-instruction ARM patterns can appear at any address that isn't 0xC mod 0xF.

Our current test harness doesn't permit this sort of trickery, so this will have to wait on issue 823.</ns0:content><ns0:updated>2011-04-29T23:19:03.000Z</ns0:updated><ns0:published>2010-08-16T17:18:21.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/cbiffle@google.com/</ns2:uri><ns2:username>cbiffle@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Modulate ARM validator test patterns</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Arch-ARM</ns2:label><ns2:label>test</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>Milestone-Caviar</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/825/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=825" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/825" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blockedOn>
			<ns2:id>823</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blockedOn><ns2:closedDate>2011-04-29T23:19:03.000Z</ns2:closedDate><ns2:id>825</ns2:id></ns0:entry>