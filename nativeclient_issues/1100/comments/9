<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkcBQ347eCl7ImA9WhNXEks.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1100/comments/full/9</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=10357

------------------------------------------------------------------------
r10357 | mseaborn@chromium.org | 2012-11-30T07:19:13.008005Z

Changed paths:
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/irt/nacl.scons?r1=10357&amp;r2=10356&amp;pathrev=10357
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/pthread/nc_thread.c?r1=10357&amp;r2=10356&amp;pathrev=10357
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/futexes/nacl.scons?r1=10357&amp;r2=10356&amp;pathrev=10357
   A http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/pthread/futex.c?r1=10357&amp;r2=10356&amp;pathrev=10357
   A http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/pthread/futex.h?r1=10357&amp;r2=10356&amp;pathrev=10357
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/pthread/nacl.scons?r1=10357&amp;r2=10356&amp;pathrev=10357
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/irt/irt.gyp?r1=10357&amp;r2=10356&amp;pathrev=10357
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/untrusted/pthread/pthread.gyp?r1=10357&amp;r2=10356&amp;pathrev=10357
   M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/tests/futexes/futex_test.c?r1=10357&amp;r2=10356&amp;pathrev=10357

Add a futex implementation for use in nacl-newlib's libpthread

This is based on nacl-glibc's implementation, but stripped down to
remove features we won't need for newlib, such as bitsets and the
"requeue" operation.  This also includes a couple of fixes for bugs
that were in nacl-glibc's implementation:

 * We don't leak condvars on thread exit
   (https://code.google.com/p/nativeclient/issues/detail?id=1100).
 * futex_wait() returns EWOULDBLOCK properly.

This is initially only used by futex_test.c.  I will change
src/untrusted/pthread's mutex and condvar implementations to use
futexes in a following change.

We change futex_test.c to clarify that NaCl's futex_wait() currently
takes an absolute time rather than a relative timeout.

Also add some checks to futex_test.c to test that threads are removed
from the wait queue properly (on timeouts and after futex_wake()).

BUG=https://code.google.com/p/nativeclient/issues/detail?id=562
TEST=run_futex_test

Review URL: https://codereview.chromium.org/11421108
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-11-30T07:20:52.000Z</ns0:updated><ns0:published>2012-11-30T07:20:52.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1100#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1100/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>