<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0cNQn47eCl7ImA9WhZQFE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1704</ns0:id><ns0:author>
			<ns0:name>mli...@google.com</ns0:name><ns0:uri>/u/109474787648168037085/</ns0:uri></ns0:author><ns0:content type="html">This issues is closely related to 1656.  Once nacl_debug is removed from TCB, a few more changes to it are appropriate to ensure that the debug_stub will not turn on when it is not specifically enabled by the service_runtime.

Several changes are to be made:
1. The debug stub should simply turn on and off when sel_ldr calls NaClDebugInit and NaClDebugStop.  It should not contain any logic that could conflict with those functions and enable the debug stub.

2. Debug stub should only open a port on the local loopback interface

3. The debug stub and gdb_rsp code cannot contain any static instances that could result in code execution.

&lt;b&gt;- Where are we today?&lt;/b&gt;
[e.g. &amp;quot;Currently each platform uses a different address space size.&amp;quot;]

Currently we have an in-process debugger in sel_ldr but it cannot be compiled in without modifying the code and recompiling it or modifying scons.  

&lt;b&gt;- Why is this a problem?&lt;/b&gt;
[e.g. &amp;quot;This can make portability complicated.&amp;quot;]

We have a dilemma because the SDK requires a sel_ldr build that can be generated automatically and that includes the debug_stub.  We also want to be able to run the regular sel_ldr tests on the sel_ldr that includes the debug stub so we can ensure that the debug_stub doesn't break anything. This issue is blocking progress on Visual Studio integration.

&lt;b&gt;- The proposed enhancement:&lt;/b&gt;
[e.g. &amp;quot;All platforms should move to 1GB untrusted space.&amp;quot;]

The only way to achieve both is to make the debug stub code clean enough so that it can be compiled into sel_ldr and we can make sure that it stays off unless the user asks for it to run.

&lt;b&gt;- Exit criteria:&lt;/b&gt;
&lt;b&gt;[How do we know we're done?]&lt;/b&gt;

The SDK team can enable the debug stub with a command line flag and the nacl team is confident that that is the only way it will run.

&lt;b&gt;- Anticipated impact:&lt;/b&gt;
&lt;b&gt;[for users as well as other parts of the system]&lt;/b&gt;
</ns0:content><ns0:updated>2011-04-21T15:51:33.000Z</ns0:updated><ns0:published>2011-04-20T15:19:37.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/109474787648168037085/</ns2:uri><ns2:username>mli...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/112723007196297768207/</ns2:uri><ns2:username>dsprin...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/100268164290167392978/</ns2:uri><ns2:username>mmorten...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/104626697121361476101/</ns2:uri><ns2:username>gw...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/mseaborn@google.com/</ns2:uri><ns2:username>mseaborn@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Prepare debug_stub and gdb_rsp so nacl_debug functions can be compiled in by default, at least until Baltic Brill</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-DebugStub</ns2:label><ns2:label>OS-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1704/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1704" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1704" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-04-21T15:51:33.000Z</ns2:closedDate><ns2:id>1704</ns2:id></ns0:entry>