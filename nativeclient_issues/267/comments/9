<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEcCRX47eCl7ImA9WxBUGEk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/267/comments/full/9</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">the limit for arm is 4096 threads.  well, the min of 4096 and the underlying host-OS 
thread limit.  i believe that src/trusted/service_runtime/arch/arm/nacl_tls.c 
currently aborts the whole program if the thread limit is reached, rather than 
returning an error to say that thread creation failed.  this is a bug.

if the thread test blithely assumes that it can create 10,000 threads w/o checking 
for ENOMEM, then it's a bug in the test.  of course, this cannot currently happen on 
the arm, since sel_ldr will LOG_FATAL in arch/arm/nacl_tls.c.

on the x86-32, the limit is ~8192.  we may want to artificially limit this to 4096 to 
make things more similar.  on x86-64, the limit is just the underlying OS thread 
limit, and again we may want to artificially limit things to 4096.

with our default thread stack size, it's not clear that the thread test is going to 
work properly with larger numbers anyway.  i think it's 512K, so 10,000 threads means 
nc_thread library is trying to allocate 5G, more than there's address space.  sehr 
recently checked in code to allow the thread stack size to be specified in the 
pthread_attr_t, and that should be used to drastically reduce the stack size used to 
something more reasonable, since the test threads actually use very little stack.

we do not currently have tests to stress test thread creation.

-bsy</ns0:content><ns0:updated>2010-03-06T03:27:44.000Z</ns0:updated><ns0:published>2010-03-06T03:27:44.000Z</ns0:published><ns2:updates /><ns0:title>Comment 9 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=267#c9" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/267/comments/full/9" rel="self" type="application/atom+xml" /></ns0:entry>