<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUAHSH47eCl7ImA9WhdWFUQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2027</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">mmap permission flipping is used to force cache consistency by requiring underlying OS to change page tables shared among cores executing threads of a single process.  PROT_EXEC is probably needed in one of the permissions so that icache flush is ensured (otherwise the underlying OS might realize that only a dcache flush is needed, if there is separate i/d caches).

however, the page that we allocate (done once, while holding the vm lock) contains zeros or random garbage (unices vs windows or mmap vs valloc).  in either case, it would be better to fill the page with the architecture-specific HALT instruction.  while it is unlikely that an attacker could find this page and cause control to transfer to it (as opposed to some other executable page for ROP-style attacks), HALT filling would be better defense-in-depth.</ns0:content><ns0:updated>2011-09-09T18:42:19.000Z</ns0:updated><ns0:published>2011-07-14T17:49:00.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/109286297231979736865/</ns2:uri><ns2:username>mcgra...@chromium.org</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>dynamic code SerializeAllProcessors</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-16</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Security</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2027/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2027" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2027" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2027</ns2:id></ns0:entry>