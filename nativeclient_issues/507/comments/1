<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CU4HQ347eCl7ImA9WxFXEkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/507/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Please be aware of previous work in this area.

Plash is a sandboxing system that implements a POSIX API over RPC.
See http://plash.beasts.org.  It provides an symlink-race-free,
object-based file API, on top of which is layered the legacy POSIX
filename-based API.  The advantage of this is that it supports nested
sandboxes.  I think any interfaces you design should be capable of
supporting nested sandboxes too.

nacl-glibc supports a small subset of POSIX (open() and stat()) over
RPC, which I implemented to get Python to work.
</ns0:content><ns0:updated>2010-05-18T20:18:52.000Z</ns0:updated><ns0:published>2010-05-18T20:18:52.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>mseab...@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=507#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/507/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>