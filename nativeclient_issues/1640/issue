<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0UGRX47eCl7ImA9WhZRFUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1640</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">service runtime trusted thread stack size is too small if a thread is to run an SRPC service loop that invokes trusted sendmsg.

this appears to be a problem only on x86-64 -- objects are larger -- but rather than conditionalizing on x86-64, i think it's okay to bump it up from 32KB to 64KB everywhere.  egyptian cotton doesn't seem to be affected, so there's no significant impact on the number of available threads, though the total memory footprint of a thread-intensive application is increased.</ns0:content><ns0:updated>2011-04-11T20:53:44.000Z</ns0:updated><ns0:published>2011-04-11T18:33:06.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>service runtime trusted thread stack too small</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1640/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1640" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1640" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-04-11T20:53:44.000Z</ns2:closedDate><ns2:id>1640</ns2:id></ns0:entry>