<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DUEMSH47eCl7ImA9WhZXGUs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1784/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">The change to use a new malloc per se is more or less ready.
I was just waiting for Doug Lea to finish his new release so I could use it unmodified in third_party rather than importing a trivially-modified version in third_party_mod.  But it's not clear how soon he will actually publish the new one (I have prerelease versions that include my change, but I don't want to import a prerelease).

However, there is an unresolved issue about the sbrk hack.  With the replacement malloc, the sole use of sbrk is in __pthread_initialize_minimal.  When I tried to hack an even simpler one-purpose sbrk just for that use, I ran into strange test failures and didn't get to the bottom of that.</ns0:content><ns0:updated>2011-05-09T19:01:29.000Z</ns0:updated><ns0:published>2011-05-09T19:01:29.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mcgra...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1784#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1784/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>