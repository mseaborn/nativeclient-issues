<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0UNSH47eCl7ImA9WhRUEEU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2335</ns0:id><ns0:author>
			<ns0:name>krasin@google.com</ns0:name><ns0:uri>/u/krasin@google.com/</ns0:uri></ns0:author><ns0:content type="html">
&lt;b&gt;- Where are we today?&lt;/b&gt;
Currently, we put nacl syscall headers into all toolchains. See:

$ find toolchain -name nacl_syscalls.h
toolchain/pnacl_linux_x86_64_newlib/sysroot/include/bits/nacl_syscalls.h
toolchain/pnacl_linux_x86_64_newlib/sysroot/include/nacl/abi/bits/nacl_syscalls.h
toolchain/pnacl_linux_x86_64_newlib/sysroot/include/nacl/abi/sys/nacl_syscalls.h
toolchain/pnacl_linux_x86_64_newlib/sysroot/include/sys/nacl_syscalls.h
toolchain/pnacl_linux_x86_64_newlib/pkg/newlib/arm-none-linux-gnueabi/include/sys/nacl_syscalls.h
toolchain/linux_x86_newlib/x86_64-nacl/include/bits/nacl_syscalls.h
toolchain/linux_x86_newlib/x86_64-nacl/include/sys/nacl_syscalls.h
toolchain/pnacl_linux_x86_64_glibc/pkg/glibc/include/bits/nacl_syscalls.h
toolchain/pnacl_linux_x86_64_glibc/pkg/glibc/include/sys/nacl_syscalls.h
toolchain/linux_x86/x86_64-nacl/include/bits/nacl_syscalls.h
toolchain/linux_x86/x86_64-nacl/include/sys/nacl_syscalls.h


&lt;b&gt;- Why is this a problem?&lt;/b&gt;
We have introduced IRT in order to isolate the user from nacl syscalls, srpc, imc and other stuff that is the internal implementation of the platform which can change over time.

We put these headers into toolchains and it means that developers will likely use them and will complain when their nacl program would stop working.

Basically, it's a problem because it's an inconsistency.

&lt;b&gt;- The proposed enhancement:&lt;/b&gt;
We should not put these headers into toolchains. The only reason to do that now is that there's some code in src/{untrusted,shared} that includes these headers like &amp;lt;sys/nacl_syscalls.h&amp;gt;. These sources are only needed to build IRT which happens inside Native Client tree, so that these headers could be referred by the whole path: native_client/src/trusted/service_runtime/include/...

&lt;b&gt;- Exit criteria:&lt;/b&gt;

nacl syscall headers don't propagate into the toolchains

&lt;b&gt;- Anticipated impact:&lt;/b&gt;

Native Client toolchains and SDK will become consistent with the IRT interface.
</ns0:content><ns0:updated>2012-01-20T18:48:19.000Z</ns0:updated><ns0:published>2011-10-04T01:05:44.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/109286297231979736865/</ns2:uri><ns2:username>mcgra...@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/104389777848534510881/</ns2:uri><ns2:username>erik...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/110304265766688778552/</ns2:uri><ns2:username>bradc...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/113000403807150741221/</ns2:uri><ns2:username>noelal...@google.com</ns2:username></ns2:cc><ns2:state>open</ns2:state><ns0:title>nacl syscall headers should not go into toolchains</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-Infrastructure</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>CoreRuntime</ns2:label><ns2:label>Mstone-17</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2335/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2335" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2335" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>2333</ns2:id></ns2:blocking><ns2:id>2335</ns2:id></ns0:entry>