<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DE8ARn47eCl7ImA9WxVQGUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/29/comments/full/1</ns0:id><ns0:author>
			<ns0:name>frank.l...@gmail.com</ns0:name><ns0:uri>/u/117045785640964847441/</ns0:uri></ns0:author><ns0:content type="html">I'm no expert in NPAPI, but I think you need to allocate the string using
NPN_MemAlloc(). When you pass a string literal like that, it's undefined behavior
since that string lives on the stack. Try something like:

const char* test = "ABCDEFG";
char* str = (char*)NPN_MemAlloc(strlen(test));
memcpy(str, test, strlen(test));
STRINGN_TO_NPVARIANT(str, 1, arg);


</ns0:content><ns0:updated>2009-02-07T06:07:27.000Z</ns0:updated><ns0:published>2009-02-07T06:07:27.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by frank.l...@gmail.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=29#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/29/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>