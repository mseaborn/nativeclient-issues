<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0QHQn47eCl7ImA9WhBUFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3302</ns0:id><ns0:author>
			<ns0:name>darthbe...@gmail.com</ns0:name><ns0:uri>/u/106829083582171393452/</ns0:uri></ns0:author><ns0:content type="html">Array indexes whose calculations overflow are not created properly during the translate stage to x86_64.  The 32-bit binary works as expected.

uint16_t a[1]={2};
int32_t pre_i = (-1073741824)
pre_i = a[1073741824+pre_i];

should assign the value of a[0] into pre_i.  It instead segfaults.

The generated assembly is

movzwl  -10(%rsp), %eax
addl    $-1073741826, %eax    
leal    -10(%rsp,%rax,2), %eax
movzwl  %nacl:-2147483648(%r15,%rax), %eax

In this case the leal puts 2147483638 into %eax, which added with -2147483648 is -10, which is correct.  That is assuming %rsp is 0.

%rsp seems to be 0xFFFEFF40.  Which makes the leal generate 10737352502, which is chopped to 2147417910 during assignment to %eax.  2147417910-2147483648 is -65738, which I believe is outside of scope.

I believe this is because the address calculation is constantly flipping between 32-bit and 64-bit using the x86_64 zero-extend.  Either they need to be done in 32-bit operations, or keep them in 64-bit before the movzwl nacl:...

test.c
------
#include &amp;lt;stdlib.h&amp;gt;
int32_t main(void) {
    int32_t pre_i=0;
    uint16_t a[1]={2};
    pre_i = (-1073741824);
    pre_i = pre_i + a[0] - 2;
    pre_i = a[1073741824+pre_i];
    return 0;
}

test_x86_64.nexe.as
------
movl    $0, -4(%rsp)
movl    $0, -8(%rsp)
movw    .Lmain.a(%rip), %ax
movw    %ax, -10(%rsp)
movl    $-1073741824, -8(%rsp)
movzwl  -10(%rsp), %eax
addl    $-1073741826, %eax    
movl    %eax, -8(%rsp)
leal    -10(%rsp,%rax,2), %eax
movzwl  %nacl:-2147483648(%r15,%rax), %eax
movl    %eax, -8(%rsp)
xorl    %eax, %eax
popq    %rcx
nacljmp %ecx, %r15
.align  32, 0x90

commands:
pepper_canary/toolchain/win_x86_pnacl/newlib/bin/pnacl-clang.bat test.c -otest.o -c -x c 
pepper_canary/toolchain/win_x86_pnacl/newlib/bin/pnacl-clang++.bat test.o -otest.pexe 
pepper_canary/toolchain/win_x86_pnacl/newlib/bin/pnacl-translate.bat -arch x86-64 test.pexe -o test_x86_64.nexe 
pepper_canary/toolchain/win_x86_pnacl/newlib/bin/pnacl-translate.bat -arch x86-64 test.pexe -o test_x86_64.nexe.as -S
pepper_canary/tools/sel_ldr_x86_64.exe -B pepper_canary/tools/irt_core_newlib_x64.nexe -f test_x86_64.nexe


pepper_canary
  repath: pepper_26
  stability: canary
  recommended: no
  version: 26
  Archive:
    url: https://commondatastorage.googleapis.com/nativeclient-mirror/nacl/nacl_sdk/trunk.181571/naclsdk_win.tar.bz2
    checksum: {u'sha1': u'c60c4a7519d1f128dde4beccd5cd316855d3d8e1'}
    host_os: win
    size: 232182175
  revision: 181571
  description: Chrome 26 bundle, revision 181571
</ns0:content><ns0:updated>2013-05-02T17:22:13.000Z</ns0:updated><ns0:published>2013-02-11T20:50:16.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:cc>
			<ns2:uri>/u/jvoung@chromium.org/</ns2:uri><ns2:username>jvoung@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/112264824292994369940/</ns2:uri><ns2:username>eli...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/110547710856190289770/</ns2:uri><ns2:username>s...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/dschuff@chromium.org/</ns2:uri><ns2:username>dschuff@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/115553580108938459101/</ns2:uri><ns2:username>stich...@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>PNaCl translate is not overflow/underflow safe when referencing array indexes</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>Arch-x86-64</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3302/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3302" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3302" rel="self" type="application/atom+xml" /><ns2:stars>3</ns2:stars><ns2:closedDate>2013-04-09T01:44:41.000Z</ns2:closedDate><ns2:id>3302</ns2:id></ns0:entry>