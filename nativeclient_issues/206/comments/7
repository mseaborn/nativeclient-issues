<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0INSX47eCl7ImA9WxBbEUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/206/comments/full/7</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Breakpad installs a signal handler to catch faults.  On x86-32, we need to make sure 
that the signal handler code works OK if it is triggered while running untrusted code.  
The kernel restores %ds and %cs for us, but not %gs.

We can either restore %gs or make sure we don't rely on %gs.  The latter means:
 * don't use TLS;
 * don't call libc (I think Breakpad already avoids this);
 * compile with --fno-stack-protector (since gcc's stack protector checks use %gs).
</ns0:content><ns0:updated>2010-03-09T15:46:38.000Z</ns0:updated><ns0:published>2010-03-09T15:46:38.000Z</ns0:published><ns2:updates>
			<ns2:ownerUpdate>mseab...@chromium.org</ns2:ownerUpdate></ns2:updates><ns0:title>Comment 7 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=206#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/206/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>