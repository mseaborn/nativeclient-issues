<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkcARX47eCl7ImA9Wx5bEUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1096/comments/full/2</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">Yes, .ctors and .dtors are supported, their content is walked by __do_global_ctors_aux/__do_global_dtors_aux, invoked from .init/.fini

Robert, do you have C/C++ reproducer that uses .init_array/.fini_array?

As far as I remember, .init_array and .fini_array are used for doing initialization in dynamic objects, thus this problem should not apply to our newlib toolchain, as we don't support dynamic linking with it.

</ns0:content><ns0:updated>2010-10-26T17:27:24.000Z</ns0:updated><ns0:published>2010-10-26T17:27:24.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1096#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1096/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>