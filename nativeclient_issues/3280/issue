<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkMHR347eCl7ImA9WhBWFEs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3280</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Performance tests show that NaCl syscalls are about 3-4 times slower than Linux syscalls:

RESULT TestNaClSyscall: linux_x86-32_newlib_nonirt= {0.314506, 0.019439} microseconds
RESULT TestHostSyscall: trusted_linux_x86-32= {0.073633, 0.003224} microseconds

RESULT TestNaClSyscall: linux_x86-64_newlib_nonirt= {0.166195, 0.002489} microseconds
RESULT TestHostSyscall: trusted_linux_x86-64= {0.052940, 0.001459} microseconds


This is disappointing, because a selling point of SFI is supposed to be fast context switches between trusted and untrusted code.

The NaCl syscall code path contains a lot of function calls.  We should be able to reduce this.
</ns0:content><ns0:updated>2013-04-08T23:40:36.000Z</ns0:updated><ns0:published>2013-02-04T16:20:39.000Z</ns0:published><ns2:status>Started</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>Reduce the overhead of NaCl syscalls</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Performance</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3280/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3280" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3280" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3280</ns2:id></ns0:entry>