<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CE8AQ347eCl7ImA9WhBXFE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3348/comments/full/2</ns0:id><ns0:author>
			<ns0:name>jvoung@chromium.org</ns0:name><ns0:uri>/u/jvoung@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Yesterday we talked about making a separate "prep" tool that would finalize the pexe.

(1) In the SDK examples there are Release and Debug configs. In the Release makefiles, we want to show how to use this prep tool.

(2) In SCons tests we want to be testing this prep'ed pexe.  There was talk about having scons generate (a) the unprep'ed unstripped pexe, and (b) the prepped stripped pexe.  The gdb tests would use (a).

For (2), we have to be careful about how to generate these two pexes.  It will have to be different from the GetTranslatedNexe() mechanism that we currently use to go from pexe -&gt; nexe before testing.

The difference is that the GetTranslatedNexe() can either use the X86-&gt;ARM cross-compiler and translate during the build, or it can use the sandboxed translator on the ARM HW bots and set translate_in_build_step=0.

On the other hand, the prep step will only have an x86 host tool (there is sandboxed prep tool that can run on the ARM HW bots), so it will always have to be done during the build step.
</ns0:content><ns0:updated>2013-03-27T16:47:22.000Z</ns0:updated><ns0:published>2013-03-27T16:47:22.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by jvoung@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3348#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3348/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>