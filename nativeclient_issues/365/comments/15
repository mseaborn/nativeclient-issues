<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0YBSX47eCl7ImA9Wx5XFks.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/365/comments/full/15</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">khim wrote:
&gt; I think we must compare apples to apples. NaCl introduces quite
&gt; sizable overhead not because of padding, but because every real
&gt; program should contain at least two regions: code and data.  And
&gt; granularity is 64K. GLibC based IA32 NaCl "Hello, World" is 76378
&gt; bytes and 3832 bytes after XZ.

No, glibc-based "hello world" should be much smaller:

"the hellow-dynamic executable is 2900 bytes stripped, 7350 bytes unstripped."
- from http://git.chromium.org/cgi-bin/gitweb.cgi?p=nacl-glibc.git;a=commit;h=a4f6083cbf4ab7c26aea2cd82fd67e65dd44ced8

This is because glibc's ELF loader is more liberal than sel_ldr's.

If it has got larger, it's a regression.

&gt; I think we want to employ XZ compression: it's quite easy to add it to
&gt; ld-nacl.so, it saves quite a bit of download time and decompression is
&gt; reasonably fast.

That is totally the wrong layering.  HTTP supports gzip and all modern
browsers support that.  That is what we should encourage people to
use.</ns0:content><ns0:updated>2010-09-16T19:25:58.000Z</ns0:updated><ns0:published>2010-09-16T19:25:58.000Z</ns0:published><ns2:updates /><ns0:title>Comment 15 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=365#c15" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/365/comments/full/15" rel="self" type="application/atom+xml" /></ns0:entry>