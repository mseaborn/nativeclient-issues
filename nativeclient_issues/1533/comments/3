<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0QMQX47eCl7ImA9WhZXE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1533/comments/full/3</ns0:id><ns0:author>
			<ns0:name>pol...@google.com</ns0:name><ns0:uri>/u/101953680983947802512/</ns0:uri></ns0:author><ns0:content type="html">Suggestion from nfullagar for PPB_Graphics2D testing:
- There should be several tests for PaintImageData which involve clipping. Clipping occurs when an image is only partially visible, such are drawing to an origin with negative coordinates. Clipping is a notorious area of crash bugs; code that doesn't check properly often writes outside of the image data, corrupting memory. A clip test should check clipping against all four sides (and this can get into all kinds of interesting combinations.)
- ppb_graphics_2d.h discusses some corner cases of callbacks pending on released
resources - perhaps some interesting bits to test for. </ns0:content><ns0:updated>2011-05-02T05:49:40.000Z</ns0:updated><ns0:published>2011-05-02T05:49:40.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>nfulla...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 3 by pol...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1533#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1533/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>