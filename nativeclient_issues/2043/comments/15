<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0MDQn47eCl7ImA9WhdSEkU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2043/comments/full/15</ns0:id><ns0:author>
			<ns0:name>tlamb...@google.com</ns0:name><ns0:uri>/u/108230719108215635095/</ns0:uri></ns0:author><ns0:content type="html">DYLD_NO_PIE only applies to code loaded by DYLD.  The code you are talking about is the main binary, which is loaded by execve/posix_spawn (specifically, by xnu bsd/kern/mach_loader.c).

The interesting code here was written by Austin, and employee of Kevin van Vechtin, and has not yet been released as source code.

In general, it's a very bad idea in Mac OS X to rely on the address space layout, rather than making relatively small allocations, potentially many of them, to deal with the fact that Mac OS X address space layout is not at all like most UNIX derived OSs.  In particular, the frame buffers tend to get mapped into the process address space for any GUI program, and you can't know how large they are or where they will end up getting mapped.</ns0:content><ns0:updated>2011-07-21T20:51:13.000Z</ns0:updated><ns0:published>2011-07-21T20:51:13.000Z</ns0:published><ns2:updates /><ns0:title>Comment 15 by tlamb...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2043#c15" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2043/comments/full/15" rel="self" type="application/atom+xml" /></ns0:entry>