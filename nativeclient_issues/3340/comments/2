<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEYHRX47eCl7ImA9WhBQEk0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3340/comments/full/2</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">Yeah, disabling this post-linking is what I was leaning toward.  Otherwise, we'd need to upstream something that only applies to statically linking in libc.

As long as people use pnacl-clang -On where n &gt; 0, they will get the libcalls simplification.  I think that is the case.

People are less likely to specify opt flags to the linker (none of the SDK examples do that in the makefile).  Now that libc and libstc++ are also built with optimizations, this is less important.

We could try turning on -std-link-opts again, but disable the internalize pass, which I think is what went wrong last time, since the Gold plugin already does the internalization.</ns0:content><ns0:updated>2013-03-13T20:22:14.000Z</ns0:updated><ns0:published>2013-03-13T20:22:14.000Z</ns0:published><ns2:updates>
			<ns2:label>-Pri-2</ns2:label><ns2:label>Pri-1</ns2:label></ns2:updates><ns0:title>Comment 2 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3340#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3340/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>