<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUUGQn47eCl7ImA9WxFUE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/639/comments/full/2</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">libgcc depends on libc, regardless of what linker is used. If we have -lgcc

I assume we are talking about the dependency to raise().
Why can we not force this to be always being linked in when we process libc
as bitcode?
Having parts of libc linked in as bitcode and other parts as native code
seems like a bad idea.

If raise() is really the only problem we could provide a separate library
for that.</ns0:content><ns0:updated>2010-06-23T17:13:43.000Z</ns0:updated><ns0:published>2010-06-23T17:13:43.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=639#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/639/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>