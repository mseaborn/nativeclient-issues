<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4NRn47eCl7ImA9WxFUE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/639/comments/full/5</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">I will file a bug for not running internalize as well so this does not get
forgotten.
For those not familiar with the issue: not running internalize leaves a lot
of dead code lying around


If the dependencies are enormous, I  agree with you.
If they are small it could be a matter of contract between the bit code
supplier and the backend.
From my cursory examination the libgcc the main purpose of its dependency on
libc is to report
bad behavior such as division by zero. One could argue that for some non-c
languages it might be nice to have direct hook into the division by zero
exception and not automatically force a signal</ns0:content><ns0:updated>2010-06-23T17:43:17.000Z</ns0:updated><ns0:published>2010-06-23T17:43:17.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=639#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/639/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>