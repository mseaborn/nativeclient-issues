<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkMMRH47eCl7ImA9WhJXFEk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2950/comments/full/3</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">i just saw this go by.

iirc, the arm sandbox had always been zero based, so mem_start is always
zero.  so there's no translation needed from untrusted addresses to trusted
addresses and vice versa.  the use of nap-&gt;mem_start in the arm code is
confusing, bad for readability/code audits, etc, and should be fixed one
way or another, but strictly speaking not passing in a wrong value.

the vmmap object not having an entry to describe the zero page probably
means that now mmap would permit stuff to be put there, if not for the
check that one may not map below the end of dynamic text.  not a huge issue
-- not having a zero page is primarily for null pointer detection, so this
just removed the suspenders and left the belt.</ns0:content><ns0:updated>2012-08-08T15:41:25.000Z</ns0:updated><ns0:published>2012-08-08T15:41:25.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2950#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2950/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>