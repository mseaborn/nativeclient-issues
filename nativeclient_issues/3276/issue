<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkQHQH47eCl7ImA9WhBbFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3276</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">Main thing:

- We need to remember to send make progress bars hit 100% in the *cached* case.  In the uncached case, things work fine, but for cached loads we stay at &amp;quot;Progress Unknown&amp;quot; when the loadend event is sent.  This is because in the cached case we do not download the pexe and therefore do not know how many bytes total it should be.  We could go ahead and download the pexe, hoping that it is fast / in the browser cache so that there is a total.  Or, we could just make a fake pexe size and say &amp;quot;Progress Known&amp;quot; 1 out of 1 bytes completed.


Also, the current test is fairly limited.  It only checks that there was *some* progress event which gives you:
  * a non-zero total
  * a non-zero loaded value by the end
  * and by the end, the loaded value &amp;lt;= total

In particular, we don't test that:

(a) the total is always the same
(b) the loaded value increases monotonically
(c) cached behavior
(d) there is more than one just the &amp;quot;0&amp;quot; and the &amp;quot;total&amp;quot; events firing

(a) and (b) are never true for GLIBC, since for GLIBC, the same progress event is used for each individual library download.  Thus the loaded and total values keep resetting after one library has finished downloading and the next library starts downloading.

(d) is never true for newlib, since the test load everything off disk, which is so fast that we only get the &amp;quot;0&amp;quot; and the &amp;quot;total&amp;quot; event firing.

We could try to customize the test more for the pnacl, newlib, and glibc.</ns0:content><ns0:updated>2013-05-14T05:45:31.000Z</ns0:updated><ns0:published>2013-01-30T23:50:49.000Z</ns0:published><ns2:status>New</ns2:status><ns2:state>open</ns2:state><ns0:title>Cleanup for PNaCl translation progress events</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-27</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3276/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3276" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3276" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3276</ns2:id></ns0:entry>