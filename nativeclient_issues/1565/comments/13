<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4DRH47eCl7ImA9WhZREUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1565/comments/full/13</ns0:id><ns0:author>
			<ns0:name>robe...@google.com</ns0:name><ns0:uri>/u/108771824208521698652/</ns0:uri></ns0:author><ns0:content type="html">Some more narrowing down of the floating point problem. 
This code make llc fail right away:

APInt YYY(10, "6", 10);
volatile bool ZZZ = false;
volatile double XXX = 6.0;

// main - Entry point for the llc compiler.
//
int llc_main(int argc, char **argv) {

....
cl::ParseCommandLineOptions(argc, argv, "llvm system compiler\n");

  DEBUG(dbgs() &lt;&lt; "@@@@@@@@@@ TEST\n");

  if (ZZZ) {
    ++YYY;
  }
  DEBUG(dbgs() &lt;&lt; "@@@@@@@@@@ TEST" &lt;&lt; YYY.roundToDouble() &lt;&lt; "\n");


The problem appears to be in the YYY.roundToDouble() function.
</ns0:content><ns0:updated>2011-04-06T18:36:15.000Z</ns0:updated><ns0:published>2011-04-06T18:36:15.000Z</ns0:published><ns2:updates /><ns0:title>Comment 13 by robe...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1565#c13" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1565/comments/full/13" rel="self" type="application/atom+xml" /></ns0:entry>