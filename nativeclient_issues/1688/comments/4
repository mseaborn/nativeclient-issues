<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ak8DR347eCl7ImA9WhBUFUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1688/comments/full/4</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">this is not on our roadmap at this time.  unless there are hundreds of descriptors, it should be relatively simple to simulate select/epoll behavior by burning a thread per descriptor and using a queue etc to have to selecting/epolling thread block on it.

but this leads to another question: why does gambit-scheme want to use green threads when posix threads are available?</ns0:content><ns0:updated>2013-05-02T18:21:16.000Z</ns0:updated><ns0:published>2013-05-02T18:21:16.000Z</ns0:published><ns2:updates /><ns0:title>Comment 4 by b...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1688#c4" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1688/comments/full/4" rel="self" type="application/atom+xml" /></ns0:entry>