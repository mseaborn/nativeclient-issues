<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkIHQ347eCl7ImA9WhRaGUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1112</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">nacl-glibc's dynamic linker has an internal function for allocating
space in the dynamic code area, nacl_dyncode_alloc().  Unlike mmap(),
the kernel/sel_ldr does not allocate addresses on behalf of user
space.  (Incidentally, I think this is a good thing.)

When we have applications that want to load code themselves (other
than using dlopen()), e.g. JIT-based languages, we will need to extend
the dynamic linker to provide this as an external interface.

This would also mean we could enable run_dynamic_load_test for
nacl-glibc.

Ideally the interface should be implemented for statically linked
executables too, so that we don't need #ifs in dynamic_load_test.c.

Ideally this interface should have options for:
 * page-aligned vs. unaligned
 * allocating in the data segment simultaneously (vs. not doing so)</ns0:content><ns0:updated>2012-02-22T22:42:12.000Z</ns0:updated><ns0:published>2010-10-28T13:27:10.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:state>open</ns2:state><ns0:title>Dynamic linker: Add interface for allocating space in the dynamic code area</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1112/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1112" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1112" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:id>1112</ns2:id></ns0:entry>