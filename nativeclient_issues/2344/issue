<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DE4FSX47eCl7ImA9WhdaFUg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2344</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">When using clang to build libstdc++  __GTHREADS is #defined which in turn causes asms to 
be generated for:
 hg/upstream/llvm-gcc/libstdc++-v3/libsupc++/guard.cc

via:
hg//upstream/llvm-gcc/libstdc++-v3/include/ext/atomicity.h:

#define _GLIBCXX_READ_MEM_BARRIER __asm __volatile (&amp;quot;&amp;quot;:::&amp;quot;memory&amp;quot;)

there are likely llvm intrinsics for this and/or newer version
of libstdc++ might be cleaner</ns0:content><ns0:updated>2011-10-25T15:35:18.000Z</ns0:updated><ns0:published>2011-10-06T22:27:29.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:cc>
			<ns2:uri>/u/104735739662288482898/</ns2:uri><ns2:username>pdox%goo...@gtempaccount.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/krasin@google.com/</ns2:uri><ns2:username>krasin@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>pnacl-clang: libstdc++ contains  (friedly) asm's</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2344/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2344" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2344" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-10-25T15:35:18.000Z</ns2:closedDate><ns2:id>2344</ns2:id></ns0:entry>