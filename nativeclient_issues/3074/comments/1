<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D04NSX47eCl7ImA9WhJaE0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3074/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">From the Mac kernel source code (xnu-1699.22.73/osfmk/kern/thread_act.c), thread_resume() does:

		if (thread-&gt;user_stop_count &gt; 0) {
...
		}
		else
			result = KERN_FAILURE;

So KERN_FAILURE means that thread_resume() was called when the thread is not suspended.

I see now that the problem is the ordering in osx/mach_exception_handler.c.</ns0:content><ns0:updated>2012-10-04T21:26:38.000Z</ns0:updated><ns0:published>2012-10-04T21:26:38.000Z</ns0:published><ns2:updates>
			<ns2:status>Assigned</ns2:status><ns2:ownerUpdate>mseaborn@chromium.org</ns2:ownerUpdate></ns2:updates><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3074#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3074/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>