<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck4CR347eCl7ImA9WhdTF0s.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2032/comments/full/1</ns0:id><ns0:author>
			<ns0:name>krasin@google.com</ns0:name><ns0:uri>/u/krasin@google.com/</ns0:uri></ns0:author><ns0:content type="html">Mark,

do you mean to run the check like:


#include &lt;stdio.h&gt;
#include &lt;asm/ldt.h&gt;
#include &lt;linux/unistd.h&gt;
#include &lt;string.h&gt;
#include &lt;malloc.h&gt;
#include &lt;sys/mman.h&gt;

struct lcall {
 void * ptr;
 short cs;
};

int main() {
 struct lcall a;
 struct user_desc ud;
 memset(&amp;ud, 0, sizeof(ud));
 char* base_addr = (char*)calloc(65536, 1);
 int entry_number = 100;
 int offset = 4096 - ((int)base_addr % 4096);
 base_addr[offset] = (char)0xcb; /* lret */
 int code = mprotect(base_addr+offset, 4096, PROT_READ | PROT_EXEC);
 if (0 != code) {
   printf("mprotect %d\n", code);
   return 1;
 }
 ud.read_exec_only = 0;
 ud.seg_32bit = 1;
 ud.seg_not_present = 0;
 ud.useable = 1;
 ud.base_addr = (unsigned long) base_addr;
 ud.entry_number = entry_number;
 ud.contents = MODIFY_LDT_CONTENTS_CODE;
 ud.limit = 16384;
 ud.limit_in_pages = 0;
 int retval = modify_ldt(1, &amp;ud, sizeof ud);
 if (-1 == retval) {
   printf("modify_ldt failed: %d\n", retval);
   return 1;
 }
 printf("modify_ldt returned %d\n", retval);

 a.ptr = (void*)offset;
 a.cs = entry_number &lt;&lt; 3 | 0x7;

 __asm__ __volatile__ (
   "lcall *(%0)" : : "r"(&amp;a)
 );

}

(it's the unmodified reproducer I used back in May 2010)</ns0:content><ns0:updated>2011-07-15T20:16:06.000Z</ns0:updated><ns0:published>2011-07-15T20:16:06.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by krasin@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2032#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2032/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>