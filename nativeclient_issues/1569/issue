<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUUGQH47eCl7ImA9WhRaE0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1569</ns0:id><ns0:author>
			<ns0:name>elijahtaylor@google.com</ns0:name><ns0:uri>/u/elijahtaylor@google.com/</ns0:uri></ns0:author><ns0:content type="html">See src/untrusted/pthread/nc_thread.c:nc_allocate_memory_block_mu

There is a free list of available stacks that is not being fully searched when a new stack is requested.  It's possible we could allocate more stack memory when we don't need to.  This will come up only when there are threads with different stacks sizes being created and destroyed.  Memory will not be exhausted because of a cleanup check for unused stacks if too many are allocated.</ns0:content><ns0:updated>2012-02-16T09:07:01.000Z</ns0:updated><ns0:published>2011-03-23T00:17:21.000Z</ns0:published><ns2:status>Available</ns2:status><ns2:owner>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>untrusted nacl pthread lib may allocate new thread stacks unnecessarily</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-3</ns2:label><ns2:label>Component-Newlib</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>CoreRuntime</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1569/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1569" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1569" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>1569</ns2:id></ns0:entry>