<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkUDSH47eCl7ImA9Wx9WFkg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/652/comments/full/7</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=2644

------------------------------------------------------------------------
r2644 | mseaborn@chromium.org | Fri Jul 09 10:31:40 PDT 2010

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/plugin/srpc/portable_handle.h?r1=2644&amp;r2=2643&amp;pathrev=2644
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/plugin/srpc/plugin.h?r1=2644&amp;r2=2643&amp;pathrev=2644
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/plugin/npapi/plugin_npapi.cc?r1=2644&amp;r2=2643&amp;pathrev=2644
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/plugin/srpc/plugin.cc?r1=2644&amp;r2=2643&amp;pathrev=2644
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/plugin/srpc/desc_based_handle.h?r1=2644&amp;r2=2643&amp;pathrev=2644
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/trusted/plugin/npapi/scriptable_impl_npapi.cc?r1=2644&amp;r2=2643&amp;pathrev=2644
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/fake_browser/fake_browser_test.cc?r1=2644&amp;r2=2643&amp;pathrev=2644

Plugin: Fix shutdown to handle invalidate() properly

After NPP_Destroy() returns, the browser forcibly deallocates any
remaining objects, which it does (necessarily) in an arbitrary order.
The plugin cannot call NPN_ReleaseObject() on an object at this point
because the object might already have been forcibly deallocated.

In order to handle this correctly, we need to implement NPObject's
invalidate() method.  This unsets the object's NPObject references so
that the later deallocate() call will not call NPN_ReleaseObject().

This should fix a class of memory-use-after-deallocation bugs.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=652
TEST=run_fake_browser_test; navigate away from srpc_basic.html

Review URL: http://codereview.chromium.org/2805071
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-01-21T22:51:19.000Z</ns0:updated><ns0:published>2011-01-21T22:51:19.000Z</ns0:published><ns2:updates /><ns0:title>Comment 7 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=652#c7" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/652/comments/full/7" rel="self" type="application/atom+xml" /></ns0:entry>