<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MDQn47eCl7ImA9Wx5RFUQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/842/comments/full/3</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">Example of the linking + optimization issues:

Bitcode linker closes the world and marks functions as internal, including memset.
Most code calls memset through an intrinsic llvm.memset.
A few calls exist to memset directly, with params (ptr, 0, num).
Optimizer runs, sees only the few direct calls to memset and sees that it is internal.
LLC finally converts llvm.memset to call memset, and generates assembly.
Now, if you look at the assembly you see only 0 is stored to memory by memset.

</ns0:content><ns0:updated>2010-08-23T21:37:53.000Z</ns0:updated><ns0:published>2010-08-23T21:37:53.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=842#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/842/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>