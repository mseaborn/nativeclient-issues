<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CE8ERX47eCl7ImA9WxFaFU0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/702/comments/full/3</ns0:id><ns0:author>
			<ns0:name>explorin...@gmail.com</ns0:name><ns0:uri>/u/105323256258473518409/</ns0:uri></ns0:author><ns0:content type="html">&gt; Any idea why projects are using this code?  Is it faster than the libc strtod?

Because David Gay's dtoa.c always gives correctly rounded conversions, and glibc does not (see my article http://www.exploringbinary.com/incorrectly-rounded-conversions-in-gcc-and-glibc/ ).</ns0:content><ns0:updated>2010-07-19T01:26:44.000Z</ns0:updated><ns0:published>2010-07-19T01:26:44.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by explorin...@gmail.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=702#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/702/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>