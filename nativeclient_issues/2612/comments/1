<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkMCRn47eCl7ImA9WhVTFEs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2612/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">More things to harden:

 * Don't use %rip alone to decide that a crash is untrusted, because if trusted code accidentally jumps to untrusted code and crashes, this would be treated as an untrusted crash.  We should additionally check nacl_on_safe_stack, like win/exception_patch/intercept.S does.

 * If we get an unexpected error in win/debug_exception_handler.c (such as if ReadProcessMemory() fails), we should kill the sel_ldr process rather than letting it continue.  Note that we shouldn't do CHECK() or LOG_FATAL in win/debug_exception_handler.c because this can be running inside the Chromium browser process.
</ns0:content><ns0:updated>2012-02-28T21:27:47.000Z</ns0:updated><ns0:published>2012-02-28T21:27:47.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2612#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2612/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>