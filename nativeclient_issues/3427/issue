<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DE4NQX47eCl7ImA9WhBUGUk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3427</ns0:id><ns0:author>
			<ns0:name>eli...@chromium.org</ns0:name><ns0:uri>/u/112264824292994369940/</ns0:uri></ns0:author><ns0:content type="html">This problem came up while working on issue 3339.

We have a toolchain compilation path where nexes are built directly with the PNaCl toolchain. This comes up, for example, in the callingconv tests. In these cases, native objects participate in the bitcode link (to notify the linkers of any symbols that may be used in native code and can't be internalized, etc).

Currently, pnacl-ld.py does not run the LowerInvoke and SimplifyCFG passes if native objects participate in the link, which creates the following problem:

1. C++ exception handling is translated to invoke (and other...) instructions in the pexe
2. During translation, these instructions get lowered to calls to functions like _Unwind_Resume, creating an implicit dependency on the PEXE (where these functions are defined in unwind_stubs.bc)
3. Because these calls are not visible at bitcode linking time, the actual _Unwind_* functions get internalized by gold, so they won't be resolved in native link

At this point this is still working because of pnacl_abi.bc, which marks these symbols as external (in a SO), so the linker does not internalize them. But we want to get rid of pnacl_abi.bc, and trying to do that currently creates an unresolved error for _Unwind_Resume due to the reason stated above.
</ns0:content><ns0:updated>2013-05-07T17:16:30.000Z</ns0:updated><ns0:published>2013-05-06T21:14:45.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:cc>
			<ns2:uri>/u/jvoung@chromium.org/</ns2:uri><ns2:username>jvoung@chromium.org</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Run LowerInvoke when exceptions disabled also for mixed-object linking</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3427/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3427" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3427" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:blocking>
			<ns2:id>3339</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2013-05-07T17:16:30.000Z</ns2:closedDate><ns2:id>3427</ns2:id></ns0:entry>