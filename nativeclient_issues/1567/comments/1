<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D08BQX47eCl7ImA9WhZTGU8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1567/comments/full/1</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/chrome?view=rev&amp;revision=4613

------------------------------------------------------------------------
r4613 | elijahtaylor@google.com | Wed Mar 23 17:12:06 PDT 2011

Changed paths:
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/src/untrusted/pthread/nc_thread.c?r1=4613&amp;r2=4612&amp;pathrev=4613
 M http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/threads/nacl.scons?r1=4613&amp;r2=4612&amp;pathrev=4613
 A http://src.chromium.org/viewvc/chrome/trunk/src/native_client/tests/threads/thread_stack_test.c?r1=4613&amp;r2=4612&amp;pathrev=4613

Fix thread stack allocation. pthreads was previously recycling stacks from old threads regardless of size, so it was possible to return a smaller stack than what was requested without error, then subsequently malloc() into the stack of the new thread.

BUG= http://code.google.com/p/nativeclient/issues/detail?id=1567
TEST= run_thread_stack_test


Review URL: http://codereview.chromium.org/6721011
------------------------------------------------------------------------</ns0:content><ns0:updated>2011-03-24T00:17:30.000Z</ns0:updated><ns0:published>2011-03-24T00:17:30.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1567#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1567/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>