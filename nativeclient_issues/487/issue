<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0IBSH47eCl7ImA9WhVQE04.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/487</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Now that I'm more familiar with the seccomp sandbox, I've realised that there is 
another issue that will affect NaCl.

The seccomp sandbox registers a signal handler for SIGSEGV, because it uses &amp;quot;int 
$0&amp;quot; (2 bytes) as a way to trigger a syscall in cases where it fails to rewrite 
&amp;quot;int $0x80&amp;quot; (also 2 bytes) in libc.so to a jump (5 bytes).  It also uses the 
signal handler to handle RDTSC.

However, any signal handler in sel_ldr must be registered with a signal stack 
(using sigaltstack()).  Otherwise, if NaCl untrusted code triggers a SIGSEGV, the 
seccomp-sandbox's SIGSEGV handler will run using the untrusted stack.  Since the 
handler will return using this stack, untrusted code would be able to take control 
of the instruction pointer.

However, the seccomp sandbox does not allow sigaltstack() yet.  It would be tricky 
to enable this syscall because it affects the thread that executes it, so it can't 
be forwarded to the seccomp sandbox's trusted thread.

Also, we'd need to ensure that untrusted code cannot trick the signal handler into 
treating a non-executable &amp;quot;int $0&amp;quot; as a syscall instruction.
</ns0:content><ns0:updated>2012-04-02T04:05:59.000Z</ns0:updated><ns0:published>2010-05-09T22:05:40.000Z</ns0:published><ns2:status>WontFix</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Signals will need special handling in the seccomp sandbox</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Seccomp</ns2:label><ns2:label>OS-Linux</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>FaultHandler</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/487/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=487" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/487" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>571</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2012-04-02T04:05:59.000Z</ns2:closedDate><ns2:id>487</ns2:id></ns0:entry>