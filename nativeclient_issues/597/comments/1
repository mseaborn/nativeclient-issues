<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkQNSH47eCl7ImA9WxFUFEs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/597/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Extending the existing tools/Makefile is tricky because:

1) newlib and glibc cannot coexist in the same "lib" directory because
   they both provide a "libc" (which is found when linking with
   "-lc").  Initially, a simple way to deal with this is to build two
   toolchain install trees that have different contents under
   nacl64/lib and nacl64/include but have the same binutils/gcc.
   Doing this with tools/Makefile is awkward because it would likely
   involve adding a conditional.  Building both the newlib and glibc
   toolchains this way would involve building binutils/gcc twice.

2) So far I have only tested building nacl-glibc with full-gcc (which
   is built after nacl-newlib), and not with pre-gcc (which is built
   before nacl-newlib).

Furthermore, tools/Makefile is a pain to use because it does not
support incremental builds, so testing builds is a very slow process.

This is resolved by using tools/modular-build instead (see issue 484):

1) This can produce separate install trees for the newlib and glibc
   toolchains, but it is able to reuse the same binutils/gcc builds
   for both.

2) It can use full-gcc to build nacl-glibc without needing to include
   full-gcc's build dependencies (such as newlib) into the nacl-glibc
   toolchain install tree.
</ns0:content><ns0:updated>2010-06-25T10:06:39.000Z</ns0:updated><ns0:published>2010-06-25T10:06:39.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=597#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/597/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>