<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUYBRX47eCl7ImA9WhVaFkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2833/comments/full/1</ns0:id><ns0:author>
			<ns0:name>robertm@google.com</ns0:name><ns0:uri>/u/robertm@google.com/</ns0:uri></ns0:author><ns0:content type="html">Other architectures might have non-trapping integer divide instructions
similar to the ARM EABI, i.e. yielding zero for zero divisors.
To emulate "trapping" the code generator would have to insert tests before
each instruction which is undesirable for performance and code size reasons.

How about augmenting the PNaCl ABI by stating that division by zero is undefined
and making it the programmer's responsibility to avoid it.
</ns0:content><ns0:updated>2012-06-13T18:45:54.000Z</ns0:updated><ns0:published>2012-06-13T18:45:54.000Z</ns0:published><ns2:updates>
			<ns2:label>-Mstone-</ns2:label><ns2:label>Mstone-X</ns2:label></ns2:updates><ns0:title>Comment 1 by robertm@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2833#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2833/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>