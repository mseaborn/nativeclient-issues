<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUACQn47eCl7ImA9WhFTFk4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2833</ns0:id><ns0:author>
			<ns0:name>mcgra...@chromium.org</ns0:name><ns0:uri>/u/109286297231979736865/</ns0:uri></ns0:author><ns0:content type="html">On x86, integer division is done in hardware and generates a machine exception for a zero divisor.

On ARM, integer division is done in software and it's up to the compiler-assist routine (libgcc/libcompiler_rt) to explicitly detect a zero divisor and do something about it.  The EABI spec is to yield zero.  The Linux behavior is to call raise(SIGFPE).  The current PNaCl toolchain's library (called libgcc.a, but actually LLVM compiler_rt?) yields zero.

For PNaCl, the behavior should be consistent across machines.  That means that the application experience should be equivalent to generating a machine exception.  In the absence of an exception-handling ABI, explicit code to just exit (perhaps writing a message on stderr) would suffice.  When we have an exception-handling ABI, then it will need to include an interface to simulate a machine exception so it can be caught, and then the ARM division routine could use that.  In a world where ARM is supported only by PNaCl, such an interface could in fact be private rather than part of a public ABI, since only the PNaCl translator would need to produce calls to it.  If we have native ARM code in the CWS, then this needs to be a public interface.</ns0:content><ns0:updated>2013-06-07T19:36:03.000Z</ns0:updated><ns0:published>2012-06-04T23:35:40.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/110547710856190289770/</ns2:uri><ns2:username>s...@chromium.org</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>integer divide-by-zero behavior inconsistent across machines</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-X</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-MIPS</ns2:label><ns2:label>PNaClABI</ns2:label><ns2:label>Pri-2</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2833/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2833" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2833" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2013-06-05T16:03:18.000Z</ns2:closedDate><ns2:id>2833</ns2:id></ns0:entry>