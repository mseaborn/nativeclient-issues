<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkcGQ347eCl7ImA9WhJaE0o.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3071/comments/full/3</ns0:id><ns0:author>
			<ns0:name>k...@google.com</ns0:name><ns0:uri>/u/112873510090665368075/</ns0:uri></ns0:author><ns0:content type="html">When I proposed to just make R-DFA validator the exact replica of the existing validator with all it's idiosyncrasies and created bunch of appropriately labelled changes we've discussed this general approach and in the end we decided that we need to handle things on case-by-case basis: if there are reasons to keep the existing behavior then we change the R-DFA (note: "it's too hard to change the existing validator" *is* considered a valid reason at this point), but if the change is easy to achieve and it makes our ABI less idiosyncratic than we change the production validator instead.

I'm not sure what to say about this particular case: the fact that you can not use xchg with memory to sandbox register looks somewhat strange (it's easy to imagine case where this instruction will actually make sense: something related to exception-handling, for example), but it's not a large restriction thus I'm Ok with changing R-DFA in this case.</ns0:content><ns0:updated>2012-10-04T18:07:02.000Z</ns0:updated><ns0:published>2012-10-04T18:07:02.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by k...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3071#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3071/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>