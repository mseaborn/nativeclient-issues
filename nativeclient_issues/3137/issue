<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkUCQ347eCl7ImA9WhNRF0s.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3137</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The ARM validator correctly rejects the following with the error &amp;quot;Updating sp without masking in following instruction&amp;quot;:

// bundle 1
nop
nop
nop
ldr sp, [sp]
// bundle 2
nop
nop
nop
nop

However, if I pass just the first bundle to the validator, it accepts the code.

The following commands demonstrate the problem:

$ cat arm_load.S
.p2align 4
.global _start
_start:
nop
nop
nop
ldr sp, [sp]
$ arm-linux-gnueabi-gcc-4.5 -nostdlib -nostartfiles arm_load.S -o arm_load
$ nacl arm-ncval-core arm_load
$ echo $?
0

This allows a sandbox escape, because the dyncode_create() syscall allows you to set up instructions that follow &amp;quot;ldr sp, [sp]&amp;quot;.  This allows instruction sequences that write to arbitrary addresses in memory.

Thanks to Eli, whose questions prompted me to check the ARM validator's behaviour.</ns0:content><ns0:updated>2012-11-13T00:57:42.000Z</ns0:updated><ns0:published>2012-11-09T22:03:39.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/109636895838879576326/</ns2:uri><ns2:username>j...@chromium.org</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/112264824292994369940/</ns2:uri><ns2:username>eli...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/108470876877739532758/</ns2:uri><ns2:username>kschi...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/109636895838879576326/</ns2:uri><ns2:username>j...@chromium.org</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/108394971971967673680/</ns2:uri><ns2:username>s...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>Security: ARM validator allows unsandboxed modifications of "sp" at end of code chunk - sandbox escape</ns0:title><ns2:label>Security</ns2:label><ns2:label>Pri-0</ns2:label><ns2:label>Arch-ARM</ns2:label><ns2:label>Component-TCB-Validator</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3137/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3137" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3137" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:closedDate>2012-11-13T00:56:07.000Z</ns2:closedDate><ns2:id>3137</ns2:id></ns0:entry>