<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUUEQH47eCl7ImA9WhdSEEU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1173/comments/full/18</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">OK, "sooner rather than later" is now... We still have to deal with this bug as we are not going to fully abandon newlib.

The case that with 32-bit int and 32-bit long newlib prefers to define int32_t as long is _intentional_. Here is the patch that explicitly does that:
  http://sourceware.org/ml/newlib/2005/msg00824.html

This seems to be pre-C99 stuff, and now it is not clear if it is still good:
  http://sourceware.org/ml/newlib/2008/msg00665.html

Anyway, this issue is not nacl-newlib-specific, it is just newlib-specific. I'm not sure how 
the corner cases encountered when compiling for nacl were never noticed when compiling for i386 and other ILP32 platforms - that likely means the code in question was never compiled against newlib before nacl.

Now the options:

1. We can resolve this as WontFix. Looks ugly, but probably this is what fits the newlib upstream;

2. We can force int32_t to be int on nacl. This implies a number of other minor changes in newlib, and, the worst part, this may affect our shared code (we had a number of issues with PRI macros because of this). I don't expect this to be hard to fix, but it can be really hard to test thoroughly;

I try option 2 first, be warned :)
</ns0:content><ns0:updated>2011-07-19T13:46:41.000Z</ns0:updated><ns0:published>2011-07-19T13:46:41.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>mcgra...@chromium.org</ns2:ccUpdate><ns2:ccUpdate>mseaborn@chromium.org</ns2:ccUpdate></ns2:updates><ns0:title>Comment 18 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1173#c18" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1173/comments/full/18" rel="self" type="application/atom+xml" /></ns0:entry>