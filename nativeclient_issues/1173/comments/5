<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A08ERH47eCl7ImA9Wx9TEE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1173/comments/full/5</ns0:id><ns0:author>
			<ns0:name>esei...@google.com</ns0:name><ns0:uri>/u/118329321683865945653/</ns0:uri></ns0:author><ns0:content type="html">You are correct http://linux.die.net/man/3/int32_t uses signed long int.  Funny that Karmic's own stdlib.h (I'm not sure where it gets it from) doesn't.

I've not been able to find another example of a stdlib.h (besides newlib) which uses signed long.

Here is a MSVC portability header which uses "int":
http://msinttypes.googlecode.com/svn/trunk/stdint.h

I'm not sure it would make sense to use a "long" for an int32_t type since only windows follows LLP64, right?  Every other common 64-bit architecture uses 64-bits for a long?

In any case.  I'm motivated by compatibility here.  Unfortunately I don't have a standard to back up such a change.  And I agree, just removing the leading #if like I did is quite hackish (but I'm not sure I have a better proposal w/o rewriting all of stdint.h).

I do like how simple all the other stdint.h files I've run across are, and I'm confused why newlib's is so complicated.  Or I guess rather why NaCl's (using newlib or not) would need to be.</ns0:content><ns0:updated>2010-11-17T16:03:25.000Z</ns0:updated><ns0:published>2010-11-17T16:03:25.000Z</ns0:published><ns2:updates /><ns0:title>Comment 5 by esei...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1173#c5" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1173/comments/full/5" rel="self" type="application/atom+xml" /></ns0:entry>