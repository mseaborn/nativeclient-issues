<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0UNQH47eCl7ImA9Wx9bEk8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1173/comments/full/14</ns0:id><ns0:author>
			<ns0:name>msor...@gmail.com</ns0:name><ns0:uri>/u/118211654632569462851/</ns0:uri></ns0:author><ns0:content type="html">Please consider fixing this sooner rather than later, it's causing trouble when porting existing code:

Example 1) nacl-g++ treats uint32_t and unsigned int as completely separate types, function overloading breaks:

void foo(unsigned int) {}
void foo(double) {}

int main(int argc, char **argv)
{
    uint32_t var;
    foo(var);
}

nacl-g++ long.cpp -o long
long.cpp: In function &#8216;int main(int, char**)&#8217;:
long.cpp:9: error: call of overloaded &#8216;foo(uint32_t&amp;)&#8217; is ambiguous
long.cpp:3: note: candidates are: void foo(unsigned int)
long.cpp:4: note:                 void foo(double)

Example 2) Function examines if it can treat a long as an int32_t without loss, calls
the int32_t version of itself and expects to hit a different code path.

bar (int i) { }
bar (long i)
{
   if (static_cast&lt;int32_t&gt;(i) != i) {
       // do something else 
   }
   bar (static_cast&lt;int32_t&gt;(i))); // oops, recursion.
}

This one compiles and crashes at run-time. 



</ns0:content><ns0:updated>2011-02-20T19:14:51.000Z</ns0:updated><ns0:published>2011-02-20T19:14:51.000Z</ns0:published><ns2:updates /><ns0:title>Comment 14 by msor...@gmail.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1173#c14" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1173/comments/full/14" rel="self" type="application/atom+xml" /></ns0:entry>