<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkYHRH47eCl7ImA9WxBSEEw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/212</ns0:id><ns0:author>
			<ns0:name>cbiffle@google.com</ns0:name><ns0:uri>/u/cbiffle@google.com/</ns0:uri></ns0:author><ns0:content type="html">Using the 2009-12-11 llc build, we're generating unsandboxed uses of the 
VSTR instruction, which stores a float or vector to memory.  The address 
register passed to VSTR must be masked, just like any other store.

I've attached a validation report for fib_array.nexe containing a number of 
these.</ns0:content><ns0:updated>2009-12-17T02:48:55.000Z</ns0:updated><ns0:published>2009-12-11T23:25:07.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/108771824208521698652/</ns2:uri><ns2:username>robe...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/cbiffle@google.com/</ns2:uri><ns2:username>cbiffle@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>2009-12-11 ARM toolchain produces unsandboxed VFP stores</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Arch-ARM</ns2:label><ns2:label>Milestone-ARM-Toolchain-Alpha</ns2:label><ns2:label>Pri-2</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/212/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=212" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/212" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>195</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2009-12-17T02:48:55.000Z</ns2:closedDate><ns2:id>212</ns2:id></ns0:entry>