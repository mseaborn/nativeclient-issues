<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0QMSH47eCl7ImA9WhJTEEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2836/comments/full/2</ns0:id><ns0:author>
			<ns0:name>bugdro...@chromium.org</ns0:name><ns0:uri>/u/101788990881243245974/</ns0:uri></ns0:author><ns0:content type="html">The following revision refers to this bug:
    http://src.chromium.org/viewvc/native_client?view=rev&amp;revision=8964

------------------------------------------------------------------------
r8964 | mseaborn@chromium.org | Mon Jun 18 14:34:18 PDT 2012

Changed paths:
 M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/trusted/service_runtime/nacl_app_thread.h?r1=8964&amp;r2=8963&amp;pathrev=8964
 M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/trusted/service_runtime/mmap_test.c?r1=8964&amp;r2=8963&amp;pathrev=8964
 M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/trusted/service_runtime/thread_suspension.h?r1=8964&amp;r2=8963&amp;pathrev=8964
 M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/trusted/service_runtime/win/thread_suspension_test.cc?r1=8964&amp;r2=8963&amp;pathrev=8964
 M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/trusted/service_runtime/nacl_app_thread.c?r1=8964&amp;r2=8963&amp;pathrev=8964
 M http://src.chromium.org/viewvc/native_client/trunk/src/native_client/src/trusted/service_runtime/win/thread_suspension.c?r1=8964&amp;r2=8963&amp;pathrev=8964

Thread suspension: Simplify the Windows implementation

Rather than using a condvar to wake up a thread that suspended in
NaClAppThreadSetSuspendState(), we can hold a mutex (suspend_mu) for
the duration of the suspension and use the mutex unlock as the wakeup.

 * Introduce "suspend_mu" so as not to overload "mu", since
   "suspend_mu" may be held for extended periods when thread
   suspension is used by the debug stub.

 * NaClAppThread's "cv" condvar is no longer used, so remove it.

We keep the Linux implementation as it is because it's still more
efficient (one atomic compare-and-swap per context switch instead of
two for a lock+unlock).

This change is in preparation for implementing thread suspension on
Mac OS X, where the original Windows approach doesn't work because a
suspended thread can be given ownership of a mutex by
pthread_mutex_unlock().  It is better if the Mac and Windows
implementations use the same approach, so I'm changing the Windows one
first.

BUG=http://code.google.com/p/nativeclient/issues/detail?id=2836
TEST=run_thread_suspension_test run_service_runtime_tests

Review URL: https://chromiumcodereview.appspot.com/10544165
------------------------------------------------------------------------</ns0:content><ns0:updated>2012-06-18T21:36:29.000Z</ns0:updated><ns0:published>2012-06-18T21:36:29.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by bugdro...@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2836#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2836/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>