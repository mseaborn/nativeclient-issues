<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;D0AGRX47eCl7ImA9WxNaEE8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/138/comments/full/2</ns0:id><ns0:author>
			<ns0:name>cbif...@google.com</ns0:name><ns0:uri>/u/106111281808211158579/</ns0:uri></ns0:author><ns0:content type="html">I've got a libgcc.a/libgcc_eh.a using SFI sequences, but it seems our crtXXX.o are 
not.

The process I used was pretty awful, and I'm trying to simplify it.
1. Obtain llvm-gcc sources.
2. Configure with --prefix=`pwd`/../install --program-prefix=llvm- --enable-
llvm=`pwd`/../llvm-2.6 --enable-languages=c,c++ --target=arm-none-linux-gnueabi --
with-arch=armv7a --with-cpu=cortex-a8
3. make configure-host configure-target
4. Edit gcc/Makefile, replacing the call to xgcc with a call to the SFI compiler.
5. Patch the SFI compiler to recognize .asm as an assembly file.
6. make libgcc.a (inside the gcc/ directory).
7. ranlib libgcc.a
8. Copy into place for the SFI compiler.

I can produce a fully-validated hello_world nexe this way, but I haven't tested 
anything more extreme (that's for tomorrow).</ns0:content><ns0:updated>2009-11-24T01:22:04.000Z</ns0:updated><ns0:published>2009-11-24T01:22:04.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by cbif...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=138#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/138/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>