<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Dk4FQ347eCl7ImA9WhNUGU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2919</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">This is similar to issue 2014, but for x86-32 rather than x86-64.

springboard.S leaves %ecx pointing to NaClThreadContext when transferring control to untrusted code.

This means that if there is a vulnerability that allows writing to an arbitrary location in memory, the vulnerability is very easy to exploit in a cross-platform way, because the exploit code can easily find the address of new_prog_ctr to overwrite.

We might as well fix this leak because it's trivial to do.</ns0:content><ns0:updated>2013-01-11T20:08:32.000Z</ns0:updated><ns0:published>2012-07-24T02:30:23.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>Security: NaClSwitch() leaks NaClThreadContext pointer to x86-32 untrusted code</ns0:title><ns2:label>Security</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>Arch-x86-32</ns2:label><ns2:label>Arch-ARM</ns2:label><ns2:label>OS-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2919/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2919" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2919" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2012-08-01T18:15:11.000Z</ns2:closedDate><ns2:id>2919</ns2:id></ns0:entry>