<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkYAQH47eCl7ImA9Wx9REE0.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1226/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">@sehr: Yes, that is the problem.  This happens in service_runtime/sel_ldr_standard.c, which does:

  BLAT(nacl_reg_t, argc);

where nacl_reg_t is arch-dependent.  All the other BLAT() calls use a more portable uint32_t.

The corresponding code that reads this in nacl-newlib is in untrusted/stubs/crt1_x86_64.S, which does popq instead of popl:

    popq    %rsi               /* Remove argc from the top of the stack */

I think one of the two files has copied the other's assumption uncritically.  I don't know which came first.

There is actually little reason to interpret the initial stack contents in assembly code.  It would be better to pass the initial stack address to a C function and let that interpret argc/argv/env.

I don't think we should fix this issue on its own.  I think we should address issue 1131 instead, and do away with assembly code for this entirely.</ns0:content><ns0:updated>2010-12-10T18:02:21.000Z</ns0:updated><ns0:published>2010-12-10T18:02:21.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1226#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1226/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>