<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CEAARX47eCl7ImA9Wx9RE0w.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1253/comments/full/2</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">This is a good idea, though of course a big pain. :-)  Better to do it now than later, though.

Maybe we could also address some other things at the same time?

 * Please do change off_t as well as ino_t.  I'd say off_t is more important, since it's needed to handle large files.
 * Allocate nanosecond fields for st_atime, st_mtime and st_ctime, since glibc provides for these.
 * Make st_atime, st_mtime and st_ctime 64-bit to prepare for the 2038 problem.  Defining time_t to be uint64_t might break programs, though.  We could allocate the space after each st_*time field instead.

What do you want to do to make existing programs in development fail gracefully?  Introduce new syscall numbers?  Bump the ABI number in executables' ELF headers?  Should we add a size argument to the new (f)stat to sanity-check any future changes better?</ns0:content><ns0:updated>2010-12-14T07:45:44.000Z</ns0:updated><ns0:published>2010-12-14T07:45:44.000Z</ns0:published><ns2:updates /><ns0:title>Comment 2 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1253#c2" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1253/comments/full/2" rel="self" type="application/atom+xml" /></ns0:entry>