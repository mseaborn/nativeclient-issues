<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkQHQH47eCl7ImA9WhdSGEQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/188</ns0:id><ns0:author>
			<ns0:name>or...@chromium.org</ns0:name><ns0:uri>/u/110455494792614626431/</ns0:uri></ns0:author><ns0:content type="html">This is the work planned after the alpha release. It might change as we learn 
more.

- align stack pointer correctly
- in-bundle optimization: eliminate memory address rebase if the address is 
already based on RZP (binutils &amp;amp; verifier)
- no-read sandboxing
- enable BP in GCC for debugger
- stability - clone call instructions instead of emitting and copying 
attributes</ns0:content><ns0:updated>2011-07-29T00:12:11.000Z</ns0:updated><ns0:published>2009-12-03T19:21:21.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>GCC optimization</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GCC</ns2:label><ns2:label>Mstone-X</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/188/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=188" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/188" rel="self" type="application/atom+xml" /><ns2:stars>3</ns2:stars><ns2:blockedOn>
			<ns2:id>182</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blockedOn><ns2:id>188</ns2:id></ns0:entry>