<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUADR347eCl7ImA9WhNSEkw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3098/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">I propose that you build a customised sel_ldr by linking against NaCl's sel_main library and by defining main() something like this:


#include "native_client/src/trusted/service_runtime/sel_main.h"

/* Override glibc's qsort() function with a strict-sandbox-friendly version that doesn't open files in /proc. */
void qsort(...) {
  ...
}

int main(int argc, char **argv) {
  /* NaClLogModuleInit() is idempotent in the single-threaded case. */
  NaClLogModuleInit();
  NaClLogDisableTimestamp();
  tzset();

  NaClSetOuterSandboxEnableCallback(EnableOuterSandbox);

  return NaClSelLdrMain(argc, argv);
}


I'll send you changes to provide the necessary interfaces.
</ns0:content><ns0:updated>2012-10-26T01:09:36.000Z</ns0:updated><ns0:published>2012-10-26T01:09:36.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3098#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3098/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>