<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkEGQX47eCl7ImA9WxBXFU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/276</ns0:id><ns0:author>
			<ns0:name>pa...@google.com</ns0:name><ns0:uri>/u/101628056640429344673/</ns0:uri></ns0:author><ns0:content type="html">example code:
============
struct foo {
  int* _foo;
  int _baz;
};

static __thread struct foo bar;

void foo()
{
  bar._foo = &amp;amp;bar._baz;
}
============

compiling with nacl64-gcc -O0 reveals:
============
        movq    $bar@TPOFF, %rdi
        call    __tls_get_addr
        movq    %rax, %rbx
        movq    $bar@TPOFF, %rdi
        call    __tls_get_addr
        leal    4(%r12), %eax
        movl    %eax, %nacl:(%r15,%rbx)
        movl    %nacl:(%r15,%rbx), %eax
        movl    %eax, %nacl:(%r15,%rbx)
============

where %r12 is uninitialized</ns0:content><ns0:updated>2010-01-26T19:37:00.000Z</ns0:updated><ns0:published>2010-01-25T10:55:03.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>x86-64 GCC calculates TLS addresses incorrectly</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Pri-2</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/276/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=276" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/276" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>134</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2010-01-26T19:37:00.000Z</ns2:closedDate><ns2:id>276</ns2:id></ns0:entry>