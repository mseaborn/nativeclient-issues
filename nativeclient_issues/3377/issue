<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;C0YGQH47eCl7ImA9WhBVEkk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3377</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">For the first release of a PNaCl stable ABI we are not going to support zero-cost C++ exception handling.  The ABI verifier should therefore disallow the &amp;quot;invoke&amp;quot; and &amp;quot;landingpad&amp;quot; LLVM instructions.

There are two ways we could get rid of these instructions:

 1) Require compiling with -fno-exceptions.  Make this the default when compiling C++.

 2) Strip out invoke instructions using the &amp;quot;-lowerinvoke&amp;quot; pass (http://llvm.org/docs/Passes.html#lowerinvoke-lower-invoke-and-unwind-for-unwindless-code-generators).

This has an extra bonus that it removes one use of struct types (see issue 3343), because &amp;quot;landingpad&amp;quot; returns a struct value (not a pointer to a struct).

(1) would make it easier to ensure that the landingpad structs aren't present.  For (2), we'd have to rely on a dead code elimination pass (-dce) to strip out the struct-using landing pad blocks.
</ns0:content><ns0:updated>2013-04-17T23:25:21.000Z</ns0:updated><ns0:published>2013-04-09T18:23:59.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/mseaborn@chromium.org/</ns2:uri><ns2:username>mseaborn@chromium.org</ns2:username></ns2:owner><ns2:state>closed</ns2:state><ns0:title>PNaCl: C++ exceptions: Disallow "invoke"+"landingpad" instructions in ABI verifier</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-PNaCl</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>PNaClABI</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3377/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3377" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3377" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:blocking>
			<ns2:id>3337</ns2:id><ns2:project>nativeclient</ns2:project></ns2:blocking><ns2:closedDate>2013-04-13T00:37:43.000Z</ns2:closedDate><ns2:id>3377</ns2:id></ns0:entry>