<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CkAGRn47eCl7ImA9WhJVEUU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2993/comments/full/12</ns0:id><ns0:author>
			<ns0:name>kschi...@google.com</ns0:name><ns0:uri>/u/108470876877739532758/</ns0:uri></ns0:author><ns0:content type="html">Tried to implement the concept for multibyte instructions with a prefix we do the following:

   If the prefix table for the multibyte instructions is undefined, use the non-prefix table.

Unfortunately, this created new issues with the way we handle "special" nop's that can have multiple 66 prefixes. In particular, we now fail to recognize several of the common (compiler/linker defined) nop instructions.

The fix for this is looking a lot harder than initially thought. See cl

   https://chromiumcodereview.appspot.com/10895015

for details of what was tested.</ns0:content><ns0:updated>2012-08-28T19:05:27.000Z</ns0:updated><ns0:published>2012-08-28T19:05:27.000Z</ns0:published><ns2:updates /><ns0:title>Comment 12 by kschi...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2993#c12" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2993/comments/full/12" rel="self" type="application/atom+xml" /></ns0:entry>