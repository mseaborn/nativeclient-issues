<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CEUNR347eCl7ImA9WhNXGUw.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3206/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">The cause is the ordering in NaClAppThreadTeardown():

  NaClXMutexLock(&amp;nap-&gt;threads_mu);
  ...
  NaClRemoveThreadMu(nap, natp-&gt;thread_num);
  ...
  NaClXMutexUnlock(&amp;nap-&gt;threads_mu);
  ...
  /* The thread has been removed from the nap-&gt;threads array by now.
     This means the thread number could be reused.
     The debug stub's TrackThread() could be called with a reused number,
     but it will fail because thread_exit_hook() hasn't removed the thread
     ID from the debug stub's mapping yet. */
  ...
  nap-&gt;debug_stub_callbacks-&gt;thread_exit_hook(natp);
</ns0:content><ns0:updated>2012-12-07T20:31:36.000Z</ns0:updated><ns0:published>2012-12-07T20:31:36.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3206#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3206/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>