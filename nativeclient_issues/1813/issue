<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkIMR347eCl7ImA9WhZVFEk.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/1813</ns0:id><ns0:author>
			<ns0:name>nfulla...@google.com</ns0:name><ns0:uri>/u/118309011164612460950/</ns0:uri></ns0:author><ns0:content type="html">Support for open/read/lseek/close &amp;amp; cousins (fopen/fread...) in the IRT.

Currently, this is available in non-IRT via 'nacl_file', which includes a pepper like API to prefetch the file.  Once prefetched, open/read/lseek/close can be performed as many times and from as many threads (within reason) the application needs. (And a more complete version of nacl_file could also support dup/dup2/...)

To support similar functionality in IRT we'll need:
- A way for the application to obtain an interface to LoadUrl(...)
- A way to &amp;quot;wrap&amp;quot; open/read/lseek/close in such a way that fopen/fread.. etc. will transparently work, including when used from dso's.

Exit criteria:
- The nacl_file stress test in ppapi_geturl passes.

Also see:
http://code.google.com/p/nativeclient/issues/detail?id=566
</ns0:content><ns0:updated>2011-05-26T21:16:26.000Z</ns0:updated><ns0:published>2011-05-17T20:52:08.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/118309011164612460950/</ns2:uri><ns2:username>nfulla...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>Traditional file I/O API support in IRT</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-IRT</ns2:label><ns2:label>OS-</ns2:label><ns2:label>Arch-</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/1813/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1813" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/1813" rel="self" type="application/atom+xml" /><ns2:stars>2</ns2:stars><ns2:id>1813</ns2:id></ns0:entry>