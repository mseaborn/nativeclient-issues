<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkEDQn47eCl7ImA9WhZbGEg.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1930/comments/full/3</ns0:id><ns0:author>
			<ns0:name>tlamb...@google.com</ns0:name><ns0:uri>/u/108230719108215635095/</ns0:uri></ns0:author><ns0:content type="html">The errno implementation in Mac OS 10 operates by way of the code returning to a different address in user space than the calling stub called.

This is a known offset relative to the calling function that results in the cerror function being called instead of the stub exiting normally for the sysenter/INT 0x80/syscall return (dpenedning on the function being called).

In this case, the errno value is returned in the %eax, instead of the normal function return code, and the -1 return to the caller is cons'ed up in the cerror code.

Since errno values for thread-reentrant system calls are per thread, errnon is per thread.  This is basically defined as this (an oversimplicfication):

#define errno (*__error())

Thus to set the error number, you are actually calling the function __error() to get the address of the per-thread errno variable in the thread local storage for the thread in which the error is being reported, and then setting its contents to the integer value of the error code returned by the kernel.

In this particular case, the return for the error path happens with the %gs register having been mangled by user space for its own nefarious purposes, and so when it attempts to access the TLS via the %gs, it goes off into the weeds and crashes.</ns0:content><ns0:updated>2011-06-23T18:44:33.000Z</ns0:updated><ns0:published>2011-06-23T18:44:33.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by tlamb...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1930#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1930/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>