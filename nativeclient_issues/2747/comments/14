<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkEDSX47eCl7ImA9WhVVEEU.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2747/comments/full/14</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">For the run_thread_test failure I think the issue is versioning.

With the current PSO stubs, all symbols are completely unversioned.  The rule is that the *oldest* version gets used in this case.

So, in one case we use pthread_attr_init() 2.0, while in the working versioned case we use pthread_attr_init() 2.1.

These two versions initialize a different amount of the structure!  Lucky us, pthread_attr_init 2.0 only memsets everything UP to the stacksize field.  Unfortunately this means that when the single version of pthread_attr_getstacksize() runs it is reading an uninitialized stacksize field (does this mean that pthread_attr_getstacksize() was introduced for at 2.1 and later)?

Thus, in the test, when we call pthread_attr_getstacksize(), we end up with the random stacksize of "1".  This is waaaay below the minimum allowed PTHREAD_STACK_MIN, so the later call to pthread_attr_setstacksize() returns EINVAL and the test fails.

</ns0:content><ns0:updated>2012-05-03T23:44:38.000Z</ns0:updated><ns0:published>2012-05-03T23:44:38.000Z</ns0:published><ns2:updates /><ns0:title>Comment 14 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2747#c14" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2747/comments/full/14" rel="self" type="application/atom+xml" /></ns0:entry>