<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DEIDSH47eCl7ImA9WhVWFEo.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2747/comments/full/1</ns0:id><ns0:author>
			<ns0:name>jvo...@google.com</ns0:name><ns0:uri>/u/102292187274959663599/</ns0:uri></ns0:author><ns0:content type="html">One more known problem, symbol aliasing!

Repro "run_env_var_test", and the aliasing of "environ" vs "_environ" vs "__environ".

tools/SRC/glibc/posix/environ.c:weak_alias (__environ, environ)
tools/SRC/glibc/posix/environ.c:weak_alias (__environ, _environ)

With metadata linking, main()'s envp, does not point to the same thing as "environ", when it should be the same. I think envp is set up from "__environ" in "__libc_start_main".  Good thing the test compares it to "environ" to envp so that we know there is a problem.   Moreover, I think initialization that happens to "__environ" will not get copy-relocated to "environ", so the test will end up deref'ing a null pointer when trying to deref "environ".

Problem restated: The bitcode linker + llc-generated metadata is not indicating that "environ" and "__environ" are aliases.
</ns0:content><ns0:updated>2012-04-26T21:42:59.000Z</ns0:updated><ns0:published>2012-04-26T21:42:59.000Z</ns0:published><ns2:updates /><ns0:title>Comment 1 by jvo...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2747#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2747/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>