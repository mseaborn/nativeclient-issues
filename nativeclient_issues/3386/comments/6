<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;DkAFQ347eCl7ImA9WhBWF0U.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/3386/comments/full/6</ns0:id><ns0:author>
			<ns0:name>dschuff@chromium.org</ns0:name><ns0:uri>/u/dschuff@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">If you want a native ABI-compliant ARM nacl compiler, you need the triple to be armv7-none-nacl-gnueabi and use -mfloat-abi=hard, and you also need to link with the --pnacl-irt-link flag, which links in the ARM-flavored bitcode implementations of libc, libstdc++ etc.
Although, now that we (almost) build the IRT with arm-nacl-gcc, I'd like to take all those out, to simplify the rest of the toolchain (and if we do want to have a real native mode in the future, maybe make the libs native code instead of biased bitcode).

Also, clang actually does put le32-unknown-nacl in the IR output (which can be seen if you make it emit .ll instead of bitcode), but when the bitcode reader in llc sees that triple, it treats it as armv7-none-linux-gnueabi because there's no le32 backend. It's one of the grosser hacks in our llvm.</ns0:content><ns0:updated>2013-04-12T16:38:32.000Z</ns0:updated><ns0:published>2013-04-12T16:38:32.000Z</ns0:published><ns2:updates /><ns0:title>Comment 6 by dschuff@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3386#c6" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/3386/comments/full/6" rel="self" type="application/atom+xml" /></ns0:entry>