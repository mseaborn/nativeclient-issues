<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CUQAQ347eCl7ImA9WhdaEU4.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2294</ns0:id><ns0:author>
			<ns0:name>elijahtaylor@google.com</ns0:name><ns0:uri>/u/elijahtaylor@google.com/</ns0:uri></ns0:author><ns0:content type="html">compile this small test program with glibc toolchain:


#include &amp;lt;unistd.h&amp;gt;
#include &amp;lt;assert.h&amp;gt;
#include &amp;lt;stdio.h&amp;gt;

int main()
{
  void *ret;
  void *start = sbrk(0);
  ret = sbrk(128*1024);
  assert(ret != (void*)-1);

  ret = sbrk(-64*1024);
  if (ret == (void*)-1) printf(&amp;quot;sbrk with negative increment failed\n&amp;quot;);
  ret = sbrk(0);
  if (ret == (void*)-1) printf(&amp;quot;sbrk with NULL failed\n&amp;quot;);

  return 0;
}

The two prints occur even though these are supposedly valid arguments to sbrk.  A call to sbrk with a negative increment wedges it.

glibc calls sbrk with negative increments internally in response to freeing up enough memory, so not only this contrived example has this problem.  A workaround is to use mallopt(M_TRIM_THRESHOLD, -1) in glibc programs.</ns0:content><ns0:updated>2011-10-20T17:55:42.000Z</ns0:updated><ns0:published>2011-09-23T21:25:06.000Z</ns0:published><ns2:status>Fixed</ns2:status><ns2:owner>
			<ns2:uri>/u/112873510090665368075/</ns2:uri><ns2:username>k...@google.com</ns2:username></ns2:owner><ns2:cc>
			<ns2:uri>/u/101628056640429344673/</ns2:uri><ns2:username>pa...@google.com</ns2:username></ns2:cc><ns2:cc>
			<ns2:uri>/u/100177598732114324016/</ns2:uri><ns2:username>mcgra...@google.com</ns2:username></ns2:cc><ns2:state>closed</ns2:state><ns0:title>sbrk in glibc doesn't handle negative increments properly</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-16</ns2:label><ns2:label>Pri-1</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>CoreRuntime</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2294/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2294" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2294" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:closedDate>2011-10-20T17:55:42.000Z</ns2:closedDate><ns2:id>2294</ns2:id></ns0:entry>