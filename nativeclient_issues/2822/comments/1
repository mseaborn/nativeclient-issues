<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;Ck4NSH47eCl7ImA9WhVbFUo.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/2822/comments/full/1</ns0:id><ns0:author>
			<ns0:name>mseaborn@chromium.org</ns0:name><ns0:uri>/u/mseaborn@chromium.org/</ns0:uri></ns0:author><ns0:content type="html">Why do we have to change the system's ABI for this?  An ELF loadable object always knows how to locate symbols in its own data segment, whether it's relocatable or not.  Can't we have the linker define symbols for the start and end of the PHDRs, so that the static executable or dynamic linker can locate its PHDRs using those symbols?  There's no need to locate PHDRs dynamically when an executable can use static symbols.

I know you want consistency with Linux, but I would argue that keeping unnecessary things out of NaCl's system ABI is a more important goal.
</ns0:content><ns0:updated>2012-06-01T17:16:39.000Z</ns0:updated><ns0:published>2012-06-01T17:16:39.000Z</ns0:published><ns2:updates>
			<ns2:ccUpdate>s...@google.com</ns2:ccUpdate></ns2:updates><ns0:title>Comment 1 by mseaborn@chromium.org</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2822#c1" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/2822/comments/full/1" rel="self" type="application/atom+xml" /></ns0:entry>