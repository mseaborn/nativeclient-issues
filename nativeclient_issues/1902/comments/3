<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;A0MHRX47eCl7ImA9WhZUFk8.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/1902/comments/full/3</ns0:id><ns0:author>
			<ns0:name>eaelt...@google.com</ns0:name><ns0:uri>/u/103360015124260446450/</ns0:uri></ns0:author><ns0:content type="html">Calling conventions are part of the architecture ABI.

In x86_64 case, ABI is pretty clear on how parameters of aggregate types are passed - see http://www.x86-64.org/documentation/abi.pdf, section 3.2.3

If I got it right, the structure from the test should get class INTEGER and thus passed in a single 64-bit register.

IMHO nacl-gcc works here correctly, and its behavior should not be changed.</ns0:content><ns0:updated>2011-06-09T14:23:54.000Z</ns0:updated><ns0:published>2011-06-09T14:23:54.000Z</ns0:published><ns2:updates /><ns0:title>Comment 3 by eaelt...@google.com</ns0:title><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=1902#c3" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/1902/comments/full/3" rel="self" type="application/atom+xml" /></ns0:entry>