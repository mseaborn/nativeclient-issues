<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;AkECRn47eCl7ImA9WhBWEUQ.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/3373</ns0:id><ns0:author>
			<ns0:name>b...@google.com</ns0:name><ns0:uri>/u/105821748722532785568/</ns0:uri></ns0:author><ns0:content type="html">this is a defense-in-depth issue, so lower priority.

the descriptor has to be &amp;quot;blessed&amp;quot; for mmap already.  however, if the embedding environment mistakenly opens the descriptor with write access, then mmapping memory with PROT_EXEC and then later using read/write syscalls to modify the file contents would lead to a sandbox escape.

we already have metadata bits in NaClDesc, so we should mark descriptors w/ their accmode bits, and refuse to mmap descriptors that have write permission.  imported descriptors from the embedding environment can have the write bit cleared, and our write syscall can refuse to write when the write bit is cleared, even if the underlying host POSIX descriptor might have allowed it.

this is probably not applicable to osx due to its bidirectional COW implementation, but it wouldn't hurt to do this enforcement host-OS-wide.</ns0:content><ns0:updated>2013-04-05T21:51:07.000Z</ns0:updated><ns0:published>2013-04-05T21:51:07.000Z</ns0:published><ns2:status>Assigned</ns2:status><ns2:owner>
			<ns2:uri>/u/105821748722532785568/</ns2:uri><ns2:username>b...@google.com</ns2:username></ns2:owner><ns2:state>open</ns2:state><ns0:title>mmap should deny PROT_EXEC if descriptor was opened writable</ns0:title><ns2:label>Type-Enhancement</ns2:label><ns2:label>Mstone-29</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-TCB</ns2:label><ns2:label>OS-Windows</ns2:label><ns2:label>Arch-All</ns2:label><ns2:label>OS-Linux</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/3373/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=3373" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/3373" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>3373</ns2:id></ns0:entry>