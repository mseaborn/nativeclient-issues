<ns0:entry xmlns:ns0="http://www.w3.org/2005/Atom" xmlns:ns1="http://schemas.google.com/g/2005" xmlns:ns2="http://schemas.google.com/projecthosting/issues/2009" ns1:etag="W/&quot;CU8BQ347eCl7ImA9WhRXEEs.&quot;">
		<ns0:id>http://code.google.com/feeds/issues/p/nativeclient/issues/full/2497</ns0:id><ns0:author>
			<ns0:name>elijahtaylor@google.com</ns0:name><ns0:uri>/u/elijahtaylor@google.com/</ns0:uri></ns0:author><ns0:content type="html">First experienced when calling pthread_kill, a quick grep of glibc sources revealed these 5 functions which abort when called:

getcontext, makecontext, pthread_kill, setcontext, swapcontext


I propose they should just return errors and set errno to ENOSYS and let the user handle errors.  This is how the newlib port handles unimplemented functions and it makes porting easier.

pthread_kill has a linker warning about not being implemented, but the *context functions do not, and I would recommend similar warnings be implemented for those functions.</ns0:content><ns0:updated>2011-12-16T19:30:52.000Z</ns0:updated><ns0:published>2011-12-16T19:30:52.000Z</ns0:published><ns2:status>New</ns2:status><ns2:state>open</ns2:state><ns0:title>Several glibc functions abort unexpectedly when called</ns0:title><ns2:label>Type-Defect</ns2:label><ns2:label>Mstone-18</ns2:label><ns2:label>Pri-2</ns2:label><ns2:label>Component-GLibC</ns2:label><ns2:label>OS-All</ns2:label><ns2:label>Arch-All</ns2:label><ns0:link href="http://code.google.com/feeds/issues/p/nativeclient/issues/2497/comments/full" rel="replies" type="application/atom+xml" /><ns0:link href="http://code.google.com/p/nativeclient/issues/detail?id=2497" rel="alternate" type="text/html" /><ns0:link href="https://code.google.com/feeds/issues/p/nativeclient/issues/full/2497" rel="self" type="application/atom+xml" /><ns2:stars>1</ns2:stars><ns2:id>2497</ns2:id></ns0:entry>